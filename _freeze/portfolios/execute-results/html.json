{
  "hash": "ba2605b4ec8543c1ec9dc0ba3477e296",
  "result": {
    "markdown": "# Optimal Portfolios: Theory  {#sec-optimal-portfolios-theory}\n\n\n\nIn this section, we introduce a risk-free asset for saving and borrowing into the investment opportunity set.  This section also discusses how investor preferences determine the optimal portfolio of risk-fre and risky assets.  \n\nWe generally consider assets like Treasury bills or money-market mutual funds as the risk-free asset for saving in practice.  Borrowing rates will depend on the investor's access to debt markets.  For now, we assume there is a single risk-free rate.  We discuss differential saving and borrowing rates in @sec-optimal-portfolios-practice.  \n\n## Capital Allocation with a Single Risky Asset \n\nWhat does the set of possible portfolios look like if we consider the US stock market index fund as the risky asset and Treasury bills as the risk-free asset?  For a given portfolio weight in the risky asset $w$, we first need to determine the portfolio's expected return and standard deviation.  Considering all possible risky portfolio weights traces out the set of possible investments, which is called the **capital allocation line** in expected return/standard deviation space.  \n\nFrom @eq-2asset-variance, the variance of portfolio $r_p$ with non-negative $w$ invested in the risky asset and $1-w$ invested in the risk-free rate is:\n\n$$\\text{var}[r_p]=w^2 \\text{var}[r_{\\text{risky}}]+ (1-w)^2 \\text{var}[r_f]+ 2 w(1-w) \\text{cov}[r_{\\text{risky}},r_f]\\,. $$\n\nNote that the risk-free asset's return is nonrandom ($\\text{var}[r_f]=0$) and thus does not covary with the risky asset return ($\\text{cov}[r_{\\text{risky}},r_f]=0$), so the portfolio variance simplifies to:\n\n$$\\text{var}[r_p]=w^2 \\text{var}[r_{\\text{risky}}]\\,.$$\n\nThus, the portfolio's standard deviation is:\n\n$$ \\text{sd}[r_p] = w\\cdot \\text{sd}[r_{\\text{risky}}]\\,.$$ {#eq-sd-rf-risky}\n\nThe expected return of the portfolio is:\n$$ E[r_p] = w E[r_{\\text{risky}}]+ (1-w) r_f \\,.$$ {#eq-expret-rf-risky}\n\nSolving @eq-sd-rf-risky for $w$, substituting into @eq-expret-rf-risky, and rearranging yields the relationship between expected return and standard deviation along the capital allocation line:\n\n$$ E[r_p] = r_f + \\bigg[ \\frac{E[r_{\\text{risky}}]-r_f}{\\text{sd}[r_{\\text{risky}}] }\\bigg] \\cdot \\text{sd}[r_p] \\,.$$ {#eq-cal}\nThe capital allocation line for a risky asset is a set of portfolios combining the risky asset with the risk-free asset.  In expected return/standard deviation space, the $y$-intercept is the risk-free rate of return and the slope of the line is the ratio of the expected excess return of the risky asset to its standard deviation.  This ratio is called the Sharpe ratio, after Nobel laureate <a href=\"https://en.wikipedia.org/wiki/William_F._Sharpe\"> William Sharpe </a>.  We discuss it in more detail below.  \n\n@fig-cal shows the set of possible portfolios along the capital allocation line.  Portfolios to the left of the market portfolio entail investing a fraction of wealth $w$ in the market and the remainder is saved, earning interest at the risk-free rate.  Portfolios to the right of the market portfolio are **levered** portfolios.  These portfolios involve borrowing at the risk-free rate (a negative portfolio weight on the risk-free asset).  Both the borrowed capital and the initial capital is invested in the market portfolio ($w>100\\%$).\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\n# Parameter values (in percent)\nmn = 6\nsd = 15\ns = 2\nextra = 0    #incremental borrowing rate\n\ndef data(mn, sd, s, b):\n    grid = np.linspace(0, 2, 201)\n    mns = [(s + w * (mn - s) if w <= 1 else b + w * (mn - b)) for w in grid]\n    sds = [w * sd for w in grid]\n    return grid, mns, sds\n\ndef figtbl(mn, sd, s, extra):\n    mn /= 100\n    sd /= 100\n    b = s+extra\n    s /= 100\n    b /= 100\n    grid, mns, sds = data(mn, sd, s, b)\n    df = pd.DataFrame({'grid': grid, 'mns': mns, 'sds': sds})\n    string = \"wealth in market = %{text:.0f}%<extra></extra>\"\n    trace1 = go.Scatter(\n        x=df[grid<=1].sds, y=df[grid<=1].mns, mode=\"lines\", text=100 * df[grid<=1].grid, hovertemplate=string, name='CAL (saving)', line=dict(color=\"blue\"),\n    )\n    string = \"wealth in market = %{text:.0f}%<extra></extra>\"\n    trace1a = go.Scatter(\n        x=df[grid>1].sds, y=df[grid>1].mns, mode=\"lines\", text=100 * df[grid>1].grid, hovertemplate=string, name='CAL (borrowing)', line=dict(color=\"blue\",dash='dot'),\n    )\n    string = \"wealth in market = 100%<extra></extra>\"\n    trace2 = go.Scatter(\n        x=[sd], y=[mn], mode=\"markers\", hovertemplate=string, marker=dict(size=15), name='Market'\n    )\n    string = \"wealth in market = 0%<extra></extra>\"\n    trace3 = go.Scatter(\n        x=[0], y=[s], mode=\"markers\", hovertemplate=string, marker=dict(size=15), name='Risk-free'\n    )  \n    # string = \"Borrowing rate<extra></extra>\"\n    # trace4 = go.Scatter(\n    #     x=[0], y=[b], mode=\"markers\", hovertemplate=string, marker=dict(size=15), name='Risk-free (Borrowing)'\n    # )       \n    fig = go.Figure()\n    fig.add_trace(trace1)\n    fig.add_trace(trace1a)\n    fig.add_trace(trace2)\n    fig.add_trace(trace3)\n    # fig.add_trace(trace4)\n    fig.layout.xaxis[\"title\"] = \"Standard Deviation\"\n    fig.layout.yaxis[\"title\"] = \"Expected Return\"\n    fig.update_yaxes(tickformat=\".0%\")\n    fig.update_xaxes(tickformat=\".0%\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.01))\n    fig.show()\nfigtbl(mn, sd, s, extra)\n```\n\n::: {#fig-cal .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"893c45a0-ea36-443e-acda-996c37e87d31\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"893c45a0-ea36-443e-acda-996c37e87d31\")) {                    Plotly.newPlot(                        \"893c45a0-ea36-443e-acda-996c37e87d31\",                        [{\"hovertemplate\":\"wealth in market = %{text:.0f}%<extra></extra>\",\"line\":{\"color\":\"blue\"},\"mode\":\"lines\",\"name\":\"CAL (saving)\",\"text\":[0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.000000000000001,8.0,9.0,10.0,11.0,12.0,13.0,14.000000000000002,15.0,16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,24.0,25.0,26.0,27.0,28.000000000000004,28.999999999999996,30.0,31.0,32.0,33.0,34.0,35.0,36.0,37.0,38.0,39.0,40.0,41.0,42.0,43.0,44.0,45.0,46.0,47.0,48.0,49.0,50.0,51.0,52.0,53.0,54.0,55.00000000000001,56.00000000000001,57.00000000000001,57.99999999999999,59.0,60.0,61.0,62.0,63.0,64.0,65.0,66.0,67.0,68.0,69.0,70.0,71.0,72.0,73.0,74.0,75.0,76.0,77.0,78.0,79.0,80.0,81.0,82.0,83.0,84.0,85.0,86.0,87.0,88.0,89.0,90.0,91.0,92.0,93.0,94.0,95.0,96.0,97.0,98.0,99.0,100.0],\"x\":[0.0,0.0015,0.003,0.0045,0.006,0.0075,0.009,0.0105,0.012,0.0135,0.015,0.0165,0.018,0.0195,0.021,0.0225,0.024,0.025500000000000002,0.027,0.028499999999999998,0.03,0.0315,0.033,0.0345,0.036,0.0375,0.039,0.0405,0.042,0.0435,0.045,0.0465,0.048,0.0495,0.051000000000000004,0.052500000000000005,0.054,0.0555,0.056999999999999995,0.058499999999999996,0.06,0.0615,0.063,0.0645,0.066,0.0675,0.069,0.07050000000000001,0.072,0.0735,0.075,0.0765,0.078,0.0795,0.081,0.0825,0.084,0.0855,0.087,0.0885,0.09,0.0915,0.093,0.0945,0.096,0.0975,0.099,0.1005,0.10200000000000001,0.10350000000000001,0.10500000000000001,0.1065,0.108,0.1095,0.111,0.11249999999999999,0.11399999999999999,0.11549999999999999,0.11699999999999999,0.1185,0.12,0.1215,0.123,0.1245,0.126,0.1275,0.129,0.1305,0.132,0.1335,0.135,0.1365,0.138,0.1395,0.14100000000000001,0.14250000000000002,0.144,0.1455,0.147,0.1485,0.15],\"y\":[0.02,0.0204,0.0208,0.0212,0.0216,0.022,0.0224,0.0228,0.0232,0.0236,0.024,0.024399999999999998,0.0248,0.0252,0.0256,0.026,0.0264,0.0268,0.0272,0.0276,0.027999999999999997,0.028399999999999998,0.0288,0.0292,0.029599999999999998,0.03,0.0304,0.0308,0.0312,0.031599999999999996,0.032,0.0324,0.032799999999999996,0.0332,0.0336,0.034,0.0344,0.0348,0.035199999999999995,0.0356,0.036,0.0364,0.0368,0.0372,0.037599999999999995,0.038,0.038400000000000004,0.0388,0.0392,0.039599999999999996,0.039999999999999994,0.0404,0.0408,0.0412,0.0416,0.041999999999999996,0.0424,0.0428,0.043199999999999995,0.0436,0.044,0.044399999999999995,0.04479999999999999,0.0452,0.0456,0.046,0.0464,0.046799999999999994,0.0472,0.0476,0.048,0.0484,0.048799999999999996,0.049199999999999994,0.04959999999999999,0.049999999999999996,0.0504,0.0508,0.051199999999999996,0.05159999999999999,0.05199999999999999,0.0524,0.0528,0.0532,0.053599999999999995,0.05399999999999999,0.05439999999999999,0.0548,0.0552,0.0556,0.055999999999999994,0.05639999999999999,0.0568,0.0572,0.0576,0.057999999999999996,0.058399999999999994,0.05879999999999999,0.05919999999999999,0.0596,0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in market = %{text:.0f}%<extra></extra>\",\"line\":{\"color\":\"blue\",\"dash\":\"dot\"},\"mode\":\"lines\",\"name\":\"CAL (borrowing)\",\"text\":[101.0,102.0,103.0,104.0,105.0,106.0,107.0,108.0,109.00000000000001,110.00000000000001,111.00000000000001,112.00000000000001,113.00000000000001,114.00000000000001,115.00000000000001,115.99999999999999,117.0,118.0,119.0,120.0,121.0,122.0,123.0,124.0,125.0,126.0,127.0,128.0,129.0,130.0,131.0,132.0,133.0,134.0,135.0,136.0,137.0,138.0,139.0,140.0,141.0,142.0,143.0,144.0,145.0,146.0,147.0,148.0,149.0,150.0,151.0,152.0,153.0,154.0,155.0,156.0,157.0,158.0,159.0,160.0,161.0,162.0,163.0,164.0,165.0,166.0,167.0,168.0,169.0,170.0,171.0,172.0,173.0,174.0,175.0,176.0,177.0,178.0,179.0,180.0,181.0,182.0,183.0,184.0,185.0,186.0,187.0,188.0,189.0,190.0,191.0,192.0,193.0,194.0,195.0,196.0,197.0,198.0,199.0,200.0],\"x\":[0.1515,0.153,0.1545,0.156,0.1575,0.159,0.1605,0.162,0.1635,0.165,0.1665,0.168,0.1695,0.171,0.17250000000000001,0.174,0.1755,0.177,0.1785,0.18,0.1815,0.183,0.1845,0.186,0.1875,0.189,0.1905,0.192,0.1935,0.195,0.1965,0.198,0.1995,0.201,0.2025,0.20400000000000001,0.20550000000000002,0.20700000000000002,0.20850000000000002,0.21000000000000002,0.2115,0.213,0.2145,0.216,0.2175,0.219,0.2205,0.222,0.2235,0.22499999999999998,0.22649999999999998,0.22799999999999998,0.22949999999999998,0.23099999999999998,0.23249999999999998,0.23399999999999999,0.2355,0.237,0.2385,0.24,0.2415,0.243,0.2445,0.246,0.2475,0.249,0.2505,0.252,0.2535,0.255,0.2565,0.258,0.2595,0.261,0.2625,0.264,0.2655,0.267,0.2685,0.27,0.2715,0.273,0.2745,0.276,0.2775,0.279,0.2805,0.28200000000000003,0.28350000000000003,0.28500000000000003,0.28650000000000003,0.288,0.2895,0.291,0.2925,0.294,0.2955,0.297,0.2985,0.3],\"y\":[0.060399999999999995,0.06079999999999999,0.06119999999999999,0.0616,0.062,0.0624,0.0628,0.06319999999999999,0.0636,0.064,0.0644,0.0648,0.0652,0.06559999999999999,0.066,0.06639999999999999,0.06679999999999998,0.0672,0.0676,0.06799999999999999,0.06839999999999999,0.06879999999999999,0.0692,0.0696,0.06999999999999999,0.07039999999999999,0.07079999999999999,0.0712,0.0716,0.072,0.07239999999999999,0.07279999999999999,0.0732,0.0736,0.074,0.0744,0.07479999999999999,0.0752,0.0756,0.076,0.07639999999999998,0.0768,0.07719999999999999,0.07759999999999999,0.07799999999999999,0.07839999999999998,0.0788,0.07919999999999999,0.07959999999999999,0.07999999999999999,0.08039999999999999,0.0808,0.0812,0.08159999999999999,0.08199999999999999,0.08239999999999999,0.0828,0.0832,0.0836,0.08399999999999999,0.0844,0.0848,0.0852,0.0856,0.086,0.0864,0.08679999999999999,0.08719999999999999,0.0876,0.088,0.08839999999999999,0.08879999999999999,0.08919999999999999,0.0896,0.09,0.0904,0.09079999999999999,0.09119999999999999,0.0916,0.092,0.0924,0.0928,0.09319999999999999,0.0936,0.094,0.0944,0.0948,0.09519999999999999,0.09559999999999999,0.096,0.0964,0.09679999999999998,0.0972,0.09759999999999999,0.09799999999999999,0.09839999999999999,0.09879999999999999,0.0992,0.0996,0.09999999999999999],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in market = 100%<extra></extra>\",\"marker\":{\"size\":15},\"mode\":\"markers\",\"name\":\"Market\",\"x\":[0.15],\"y\":[0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in market = 0%<extra></extra>\",\"marker\":{\"size\":15},\"mode\":\"markers\",\"name\":\"Risk-free\",\"x\":[0],\"y\":[0.02],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"title\":{\"text\":\"Standard Deviation\"},\"tickformat\":\".0%\"},\"yaxis\":{\"title\":{\"text\":\"Expected Return\"},\"tickformat\":\".0%\"},\"legend\":{\"yanchor\":\"top\",\"y\":0.99,\"xanchor\":\"left\",\"x\":0.01}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('893c45a0-ea36-443e-acda-996c37e87d31');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nCapital Allocation Line\n:::\n:::\n\n\n## The Tangency Portfolio\n\nWhat if we can invest in multiple risky assets *and* the risk-free asset?  What is the best way to form a portfolio in this case?  Let's assume that in addition to the US stock market fund, we are also considering investing in a long-term bond fund.   Empirically, over the last 30 or 40 years, equities and long-term government bonds have been almost uncorrelated; we will use a correlation of -5% below.\n\nFirst, consider the investment opportunity sets that would obtain if we restricted attention to investing in only a single risky fund (either the stock or bond fund) in conjunction with the risk-free asset.  The possible portfolios are the capital allocation lines for the stock fund and the bond fund, respectively.  These are plotted as the orange and red lines in @fig-two-asset-plus_rf.  We can see immediately that all portfolios on the CAL for the stock fund are dominated by both the stock-bond frontier (the black line) and by the bond CAL (the red line).  The same expected return can be achieved for smaller standard deviation.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\nmn_stock = 6 \nmn_bond  = 3.5\nsd_stock = 15\nsd_bond  = 3.5\ncorr = -5\n\nrs = 2\nextra = 0\n\ndef data(mn1, mn2, sd1, sd2, c, rs, extra):\n    c = c / 100\n    rb = rs + extra   \n    rs = rs/100\n    rb = rb/100\n    mns = [mn1, mn2]\n    sds = [sd1, sd2]\n    grid = np.linspace(-0.20, 1, 121)\n    ports = [np.array([w, 1 - w]) for w in grid]\n    means = [p.T @ np.array(mns) for p in ports]\n    df = pd.DataFrame(means)\n    df.columns = [\"mean\"]\n    cov = np.array(\n        [[sds[0] ** 2, sds[0] * sds[1] * c], [sds[0] * sds[1] * c, sds[1] ** 2]]\n    ).reshape(2, 2)\n    df[\"stdev\"] = [np.sqrt(p.T @ cov @ p) for p in ports]\n    df[\"wt1\"] = grid\n    df[\"wt2\"] = 1 - df.wt1\n    for col in [\"mean\", \"stdev\"]:\n        df[col] = df[col] / 100\n    df[\"sr_s\"]= (df[\"mean\"] - rs)/df[\"stdev\"]\n    df[\"sr_b\"]= (df[\"mean\"] - rb)/df[\"stdev\"]\n   \n    return df\n\ndef rf_plus_risky(mn, sd, rs, rb, w_min, w_max):\n    mn /= 100\n    sd /= 100\n    rs /= 100\n    rb /= 100\n    grid = np.linspace(w_min, w_max, 201)\n    mns = [(rs + w * (mn - rs) if w <= 1 else rb + w * (mn - rb)) for w in grid]\n    sds = [w * sd for w in grid]\n    srs = (mn - rs)/sd\n    srb = (mn - rb)/sd\n    return grid, mns, sds, srs, srb\n\ndef rf_plus_risky_nokink(mn, sd, rf, w_min, w_max):\n    mn /= 100\n    sd /= 100\n    rf /= 100\n    grid = np.linspace(w_min, w_max, 201)\n    mns = [(rf + w * (mn - rf)) for w in grid]\n    sds = [w * sd for w in grid]\n    return grid, mns, sds\n\n\ndef figtbl(mn1, mn2, sd1, sd2, c, rs, extra, asset1_name, asset2_name):\n    df = data(mn1, mn2, sd1, sd2, c, rs, extra)\n    \n    #Plot the portfolios of the two assets\n    trace1 = go.Scatter(\n        x=df[\"stdev\"],\n        y=df[\"mean\"],\n        mode=\"lines\",\n        # line={'color': green},\n        text=100 * df[\"wt1\"],\n        customdata=100 * df[\"wt2\"],\n        hovertemplate=asset1_name+\": %{text:.0f}%<br>\"+asset2_name+\": %{customdata:.0f}%<extra></extra>\",\n        line=dict(color=\"black\"),\n        name=\"Stock & Bond Frontier\"\n    )\n    \n    # Plot the two assets\n    df = df[df.wt1.isin([0, 1])]\n    df[\"text\"] = np.where(df.wt1 == 1, asset1_name, asset2_name)\n    trace2a = go.Scatter(\n        x=df[df.wt1==1][\"stdev\"],\n        y=df[df.wt1==1][\"mean\"],\n        mode=\"markers\",\n        text=df[df.wt1==1][\"text\"],\n        hovertemplate=\"%{text}<extra></extra>\",\n        marker=dict(size=10, color=\"orange\"),\n        name=asset1_name\n    )\n    trace2b = go.Scatter(\n        x=df[df.wt1==0][\"stdev\"],\n        y=df[df.wt1==0][\"mean\"],\n        mode=\"markers\",\n        text=df[df.wt1==0][\"text\"],\n        hovertemplate=\"%{text}<extra></extra>\",\n        marker=dict(size=10, color=\"red\"),\n        name=asset2_name\n    )\n\n    fig = go.Figure()\n    fig.add_trace(trace2a)\n    fig.add_trace(trace2b)\n    fig.add_trace(trace1)\n\n    # Plot the combination of the risk-free and each asset (CAL for each asset)\n    grid, mns_cal, sds_cal, srs_cal, srb_cal = rf_plus_risky(mn1, sd1, rs, rs + extra, 0, 1.0)\n    string = \"wealth in \"+asset1_name+\"= %{text:.0f}%<br>\" + \"Sharpe ratio: \" + \"{:.4f}\".format(srs_cal) +\"<extra></extra>\"\n    trace3 = go.Scatter(\n        x=sds_cal, \n        y=mns_cal, \n        mode=\"lines\", \n        text=100 * grid, \n        hovertemplate=string, \n        line=dict(color=\"orange\"),\n        name=\"CAL: \"+asset1_name\n    )\n    grid, mns_cal, sds_cal, srs_cal, srb_cal = rf_plus_risky(mn2, sd2, rs, rs + extra, 0, 2.7)\n    string = \"wealth in \"+asset2_name+\"= %{text:.0f}%<br>\" + \"Sharpe ratio : \" + \"{:.4f}\".format(srs_cal) +\"<extra></extra>\"\n    trace4 = go.Scatter(\n        x=sds_cal, \n        y=mns_cal, \n        mode=\"lines\", \n        text=100 * grid, \n        hovertemplate=string, \n        line=dict(color=\"red\"),\n        name=\"CAL: \"+asset2_name\n    )\n    fig.add_trace(trace3)\n    fig.add_trace(trace4)  \n\n\n    def custom(string, ports,srTang,borrow_flag):\n        # borrow_flag=1 adds statement about \"relative to borrowing rate\"\n        cd = np.empty(shape=(len(ports), N+1, 1), dtype=float)\n        for i in range(N):\n            cd[:, i] = np.array([w[i] for w in ports]).reshape(-1, 1)\n        cd[:,N] = np.round(srTang,4)\n        # print(cd)\n        string += \"<br>\"\n        for i in range(N):\n            if i ==0:\n                string += asset1_name\n            elif i==1:\n                string += asset2_name\n            else:\n                string += \"asset \" + str(i + 1)\n            string += \": %{customdata[\"\n            string += str(i)\n            string += \"]:.1%}<br>\"\n        if borrow_flag==1:\n            string += \"Sharpe ratio (relative to borrowing rate): %{customdata[\" +  str(N) + \"]:.4f}<br>\"    \n        else:\n            string += \"Sharpe ratio: %{customdata[\" +  str(N) + \"]:.4f}<br>\"\n        string += \"<extra></extra>\"\n        return string, cd  \n\n    # Plot the tangency portfolios\n    c = c / 100\n    rb = rs + extra     \n    rs = rs/100\n    rb = rb/100\n    mns = [mn1, mn2]\n    mns = np.array(mns) / 100\n    sds = [sd1, sd2]\n    sds = np.array(sds) / 100\n    cov = np.array(\n        [[sds[0] ** 2, sds[0] * sds[1] * c], [sds[0] * sds[1] * c, sds[1] ** 2]]\n    ).reshape(2, 2)\n    \n    Shorts = 0.0     \n    N = len(mns)\n    P = portfolio(mns, cov, Shorts)    \n    gmv = P.GMV @ mns\n    # print('GMV return is: ',gmv)\n    if (rs < gmv) or (not Shorts):\n        portTang = P.tangency(rs)\n        mnTang = portTang @ mns\n        if mnTang < np.max(mns):\n            sdTang = np.sqrt(portTang @ cov @ portTang)\n            srTang = (mnTang - rs)/sdTang\n            string0 = 'tangency portfolio' if rb == rs else 'efficient low risk portfolio' if rb != rs else 'tangency portfolio'\n            string, cd = custom(string0, [portTang], srTang,0)\n            trace = go.Scatter(\n                x=[sdTang],\n                y=[mnTang],\n                mode=\"markers\",\n                customdata=cd,\n                hovertemplate=string,\n                marker=dict(size=10, color=\"blue\"),\n                name=string0\n            )\n            fig.add_trace(trace)\n            \n            #Plot CAL (no leverage)\n            grid, mns_cal, sds_cal = rf_plus_risky_nokink(mnTang*100, sdTang*100, rs*100,0, 2.2)\n            portlabel = 'tangency portfolio' if rb == rs else 'efficient low risk portfolio' if rb != rs else 'tangency portfolio'\n            string = \"wealth in \"+portlabel + \" = %{text:.0f}%<br>\" + \"Sharpe ratio: \" +  \"{:.4f}\".format(srTang) +\"<extra></extra>\"\n            trace5 = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string, \n                line=dict(color=\"blue\"),\n                name=\"CAL: \" + portlabel\n            )           \n            fig.add_trace(trace5)\n            \n            #Plot CAL (with leverage)\n            grid, mns_cal, sds_cal = rf_plus_risky_nokink(mnTang*100, sdTang*100, rs*100,1.0, 2.5)\n            trace5a = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string, \n                line=dict(color=\"blue\",dash='dot'),\n                name=\"CAL: \"  + portlabel + \" (levered)\"\n                # showlegend=False\n            )           \n            # fig.add_trace(trace5a)           \n\n    if (rb != rs) and ((gmv > rb) or (not Shorts)):\n        portTang = P.tangency(rb)\n        mnTang = portTang @ mns\n        if mnTang < np.max(mns):\n            sdTang = np.sqrt(portTang @ cov @ portTang)\n            srTang = (mnTang - rb)/sdTang\n            string = 'efficient high mean portfolio'\n            string, cd = custom(string, [portTang], srTang,1)\n            trace = go.Scatter(\n                x=[sdTang],\n                y=[mnTang],\n                mode=\"markers\",\n                customdata=cd,\n                hovertemplate=string,\n                marker=dict(size=10, color=\"blue\"),\n                name=\"efficient high mean portfolio\"\n            )\n            fig.add_trace(trace)\n            \n            #Plot CAL (with leverage)            \n            grid, mns_cal, sds_cal = rf_plus_risky_nokink(mnTang*100, sdTang*100, rb*100, 1.0, 1.5)\n            string = \"wealth in efficient high mean portfolio = %{text:.0f}%<br>\" + \"Sharpe ratio (relative to borrowing rate): \" + \"{:.4f}\".format(srTang) +\"<extra></extra>\"\n            trace6 = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string,\n                line=dict(color=\"blue\"),\n                name = \"CAL: efficient high mean\"\n            )           \n            fig.add_trace(trace6)   \n            \n            #Plot CAL (without leverage) \n            grid, mns_cal, sds_cal = rf_plus_risky_nokink(mnTang*100, sdTang*100, rb*100, 0, 1)\n            trace6a = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string, \n                line=dict(color=\"blue\", dash='dot'),\n                name = \"CAL: efficient high mean (unlevered)\"\n            )           \n            fig.add_trace(trace6a)      \n\n\n \n    \n    fig.layout.xaxis[\"title\"] = \"Standard Deviation\"\n    fig.layout.yaxis[\"title\"] = \"Expected Return\"\n    fig.update_xaxes(range=[0, 1.05 * df[\"stdev\"].max()])\n    fig.update_yaxes(range=[0, 1.05 * df[\"mean\"].max()])\n    fig.update_yaxes(tickformat=\".0%\")\n    fig.update_xaxes(tickformat=\".0%\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.5, xanchor=\"left\", x=0.65))\n    fig.show()\nfigtbl(mn_stock,mn_bond,sd_stock,sd_bond,corr,rs,extra,\"Stock\",\"Bond\")\n```\n\n::: {#fig-two-asset-plus_rf .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"bcb496a9-f410-4f2a-b781-915a2a0ef5c0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"bcb496a9-f410-4f2a-b781-915a2a0ef5c0\")) {                    Plotly.newPlot(                        \"bcb496a9-f410-4f2a-b781-915a2a0ef5c0\",                        [{\"hovertemplate\":\"%{text}<extra></extra>\",\"marker\":{\"color\":\"orange\",\"size\":10},\"mode\":\"markers\",\"name\":\"Stock\",\"text\":[\"Stock\"],\"x\":[0.15],\"y\":[0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"%{text}<extra></extra>\",\"marker\":{\"color\":\"red\",\"size\":10},\"mode\":\"markers\",\"name\":\"Bond\",\"text\":[\"Bond\"],\"x\":[0.035],\"y\":[0.035],\"type\":\"scatter\"},{\"customdata\":[120.0,119.0,118.0,117.0,115.99999999999999,114.99999999999999,114.00000000000001,112.99999999999999,112.00000000000001,111.00000000000001,110.00000000000001,109.00000000000001,108.0,107.0,106.0,105.0,104.0,103.0,102.0,101.0,100.0,99.0,98.0,97.0,96.0,95.0,94.0,93.0,92.0,91.0,90.0,89.0,88.0,87.0,86.0,85.0,84.00000000000001,83.0,82.0,81.0,80.0,79.0,78.0,77.0,76.0,75.0,74.0,73.0,72.0,71.0,70.0,69.0,68.0,67.0,65.99999999999999,64.99999999999999,63.99999999999999,62.999999999999986,62.000000000000014,61.00000000000001,60.00000000000001,59.00000000000001,58.00000000000001,57.00000000000001,56.00000000000001,55.00000000000001,54.0,53.0,52.0,51.0,50.0,49.0,48.0,47.0,46.0,44.99999999999999,43.99999999999999,42.99999999999999,41.99999999999999,40.99999999999999,39.99999999999999,38.99999999999999,37.999999999999986,36.999999999999986,36.00000000000001,35.00000000000001,34.00000000000001,33.00000000000001,32.00000000000001,31.000000000000007,30.000000000000004,29.000000000000004,28.000000000000004,27.0,26.0,25.0,24.0,23.0,21.999999999999996,20.999999999999996,19.999999999999996,18.999999999999993,17.999999999999993,16.999999999999993,15.999999999999993,14.999999999999991,13.99999999999999,12.99999999999999,11.99999999999999,10.999999999999988,9.999999999999986,8.999999999999986,7.999999999999985,6.999999999999984,5.999999999999983,4.999999999999982,4.0000000000000036,3.0000000000000027,2.0000000000000018,1.0000000000000009,0.0],\"hovertemplate\":\"Stock: %{text:.0f}%<br>Bond: %{customdata:.0f}%<extra></extra>\",\"line\":{\"color\":\"black\"},\"mode\":\"lines\",\"name\":\"Stock & Bond Frontier\",\"text\":[-20.0,-19.0,-18.000000000000004,-17.0,-16.0,-15.000000000000002,-14.000000000000002,-13.0,-12.000000000000002,-11.000000000000002,-10.0,-9.000000000000002,-8.000000000000002,-7.000000000000001,-6.0,-5.000000000000002,-4.000000000000001,-3.0,-2.0000000000000018,-1.0000000000000009,0.0,0.9999999999999981,1.9999999999999991,3.0,3.9999999999999982,4.999999999999999,6.0,7.000000000000001,8.000000000000002,8.999999999999996,9.999999999999998,10.999999999999998,12.0,13.0,14.000000000000002,15.000000000000002,15.999999999999998,17.0,18.0,19.0,20.0,21.000000000000004,21.999999999999996,23.0,24.0,25.0,26.0,27.0,27.999999999999996,28.999999999999996,30.0,31.0,32.0,33.0,34.0,35.0,36.00000000000001,37.00000000000001,37.99999999999999,38.99999999999999,40.0,41.0,42.0,43.0,44.0,45.0,46.0,47.0,48.00000000000001,49.00000000000001,50.0,51.0,52.0,53.0,54.0,55.00000000000001,56.00000000000001,57.00000000000001,58.00000000000001,59.00000000000001,60.00000000000001,61.00000000000001,62.000000000000014,63.000000000000014,63.99999999999999,64.99999999999999,65.99999999999999,67.0,68.0,69.0,70.0,71.0,72.0,73.0,74.0,75.0,76.0,77.0,78.0,79.0,80.0,81.0,82.0,83.0,84.00000000000001,85.00000000000001,86.00000000000001,87.00000000000001,88.00000000000001,89.00000000000001,90.00000000000001,91.00000000000001,92.00000000000001,93.00000000000001,94.00000000000001,95.00000000000001,96.0,97.0,98.0,99.0,100.0],\"x\":[0.05282045058497703,0.05163017528538906,0.05045988505734036,0.049311002828983305,0.048185059925250684,0.047083702063452915,0.04600869483043396,0.04496192833942957,0.04394542069431126,0.04296131981212868,0.04201190307520001,0.041099574207040156,0.04022685670046816,0.039396383082714585,0.03861087929586686,0.037873143518857795,0.0371860188780676,0.03655235970494928,0.035974991313411045,0.03545666368963668,0.035,0.034607441396324,0.034281190177705326,0.03402315388085002,0.033834893231692045,0.03371757701852254,0.03367194678066594,0.03369829372535055,0.033796449517663835,0.033965791614505324,0.03420526275297414,0.03451340319354207,0.034888393485513196,0.035328104959083215,0.03583015489779524,0.03639196339853073,0.03701080923189873,0.03768388249636706,0.03840833242930497,0.03918130931962331,0.04,0.04086165684354955,0.04176362053270765,0.04270333710613258,0.04367836993295422,0.0446864073292987,0.04572526653831556,0.04679289475978164,0.04788736785416379,0.0490068872710765,0.05014977567247933,0.05131447164299756,0.052499523807364196,0.053703584610340485,0.05492540395845988,0.056163822875584246,0.05741776728504863,0.058686241999296576,0.05996832497243857,0.06126316185114836,0.06256996084384263,0.06388798791635247,0.06521656231357185,0.06655505240024982,0.06790287180966649,0.06925947588597534,0.07062435840416534,0.07199704855061768,0.07337710814688735,0.07476412909945518,0.07615773105863909,0.07755755927051858,0.07896328260653808,0.08037459175635046,0.08179119757039874,0.08321282953968097,0.0846392344010743,0.08607017485749636,0.08750542840304254,0.08894478624405146,0.09038805230781335,0.0918350423313454,0.09328558302331612,0.09473951129280753,0.0961966735391614,0.0976569249976672,0.0991201291363162,0.10058615709927483,0.10205488719311778,0.10352620441221631,0.105,0.1064761710431024,0.10795462009566797,0.10943525483133851,0.11091798772065782,0.11240273573183172,0.1138894200529619,0.11537796583403609,0.11686830194710626,0.11836036076322173,0.11985407794480754,0.12134939225228943,0.1228462453638694,0.12434458170744715,0.12584434830376773,0.12734549461995115,0.12884797243263088,0.13035173569998984,0.1318567404420419,0.13336294462855866,0.13487030807409023,0.13637879233957165,0.13788836064004822,0.13939897775808835,0.14091060996248653,0.14242322493189097,0.14393679168301618,0.14545128050312928,0.14696666288651994,0.1484829114746879,0.15],\"y\":[0.03,0.03025,0.0305,0.030749999999999996,0.030999999999999996,0.03124999999999999,0.0315,0.03175,0.032,0.03225,0.0325,0.03275,0.033,0.03325,0.0335,0.03375,0.034,0.034249999999999996,0.0345,0.03475,0.035,0.03525,0.0355,0.035750000000000004,0.036,0.03625,0.0365,0.03675,0.037,0.03725,0.0375,0.037750000000000006,0.038,0.03825,0.0385,0.03875,0.03900000000000001,0.03925,0.0395,0.03975,0.04,0.04025,0.0405,0.04075,0.040999999999999995,0.04125,0.0415,0.041749999999999995,0.041999999999999996,0.042249999999999996,0.0425,0.04275,0.043,0.04324999999999999,0.0435,0.04375,0.044000000000000004,0.04425,0.044500000000000005,0.04475,0.045,0.045250000000000005,0.045500000000000006,0.04575,0.046000000000000006,0.04625,0.04650000000000001,0.04675000000000001,0.047,0.04725000000000001,0.0475,0.04775,0.048,0.04825,0.048499999999999995,0.04875,0.049,0.04925000000000001,0.0495,0.049749999999999996,0.05,0.05025,0.05050000000000001,0.05075,0.051,0.05125,0.051500000000000004,0.05175,0.052000000000000005,0.05225,0.0525,0.052750000000000005,0.053000000000000005,0.05325,0.0535,0.05375,0.054000000000000006,0.05425,0.05449999999999999,0.05474999999999999,0.05500000000000001,0.05525,0.0555,0.05575,0.05600000000000001,0.05625,0.056499999999999995,0.05675000000000001,0.05700000000000001,0.05725,0.0575,0.05775,0.05800000000000001,0.05825,0.058499999999999996,0.05875,0.059000000000000004,0.059250000000000004,0.059500000000000004,0.05975,0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in Stock= %{text:.0f}%<br>Sharpe ratio: 0.2667<extra></extra>\",\"line\":{\"color\":\"orange\"},\"mode\":\"lines\",\"name\":\"CAL: Stock\",\"text\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0,40.5,41.0,41.5,42.0,42.5,43.0,43.5,44.0,44.5,45.0,45.5,46.0,46.5,47.0,47.5,48.0,48.5,49.0,49.5,50.0,50.5,51.0,51.5,52.0,52.5,53.0,53.5,54.0,54.50000000000001,55.00000000000001,55.50000000000001,56.00000000000001,56.50000000000001,57.00000000000001,57.50000000000001,57.99999999999999,58.5,59.0,59.5,60.0,60.5,61.0,61.5,62.0,62.5,63.0,63.5,64.0,64.5,65.0,65.5,66.0,66.5,67.0,67.5,68.0,68.5,69.0,69.5,70.0,70.5,71.0,71.5,72.0,72.5,73.0,73.5,74.0,74.5,75.0,75.5,76.0,76.5,77.0,77.5,78.0,78.5,79.0,79.5,80.0,80.5,81.0,81.5,82.0,82.5,83.0,83.5,84.0,84.5,85.0,85.5,86.0,86.5,87.0,87.5,88.0,88.5,89.0,89.5,90.0,90.5,91.0,91.5,92.0,92.5,93.0,93.5,94.0,94.5,95.0,95.5,96.0,96.5,97.0,97.5,98.0,98.5,99.0,99.5,100.0],\"x\":[0.0,0.00075,0.0015,0.00225,0.003,0.00375,0.0045,0.00525,0.006,0.00675,0.0075,0.00825,0.009,0.00975,0.0105,0.01125,0.012,0.012750000000000001,0.0135,0.014249999999999999,0.015,0.01575,0.0165,0.01725,0.018,0.01875,0.0195,0.02025,0.021,0.02175,0.0225,0.02325,0.024,0.02475,0.025500000000000002,0.026250000000000002,0.027,0.02775,0.028499999999999998,0.029249999999999998,0.03,0.03075,0.0315,0.03225,0.033,0.03375,0.0345,0.035250000000000004,0.036,0.03675,0.0375,0.03825,0.039,0.03975,0.0405,0.04125,0.042,0.04275,0.0435,0.04425,0.045,0.04575,0.0465,0.04725,0.048,0.04875,0.0495,0.05025,0.051000000000000004,0.051750000000000004,0.052500000000000005,0.05325,0.054,0.05475,0.0555,0.056249999999999994,0.056999999999999995,0.057749999999999996,0.058499999999999996,0.05925,0.06,0.06075,0.0615,0.06225,0.063,0.06375,0.0645,0.06525,0.066,0.06675,0.0675,0.06825,0.069,0.06975,0.07050000000000001,0.07125000000000001,0.072,0.07275,0.0735,0.07425,0.075,0.07575,0.0765,0.07725,0.078,0.07875,0.0795,0.08025,0.081,0.08175,0.0825,0.08325,0.084,0.08475,0.0855,0.08625000000000001,0.087,0.08775,0.0885,0.08925,0.09,0.09075,0.0915,0.09225,0.093,0.09375,0.0945,0.09525,0.096,0.09675,0.0975,0.09825,0.099,0.09975,0.1005,0.10125,0.10200000000000001,0.10275000000000001,0.10350000000000001,0.10425000000000001,0.10500000000000001,0.10575,0.1065,0.10725,0.108,0.10875,0.1095,0.11025,0.111,0.11175,0.11249999999999999,0.11324999999999999,0.11399999999999999,0.11474999999999999,0.11549999999999999,0.11624999999999999,0.11699999999999999,0.11775,0.1185,0.11925,0.12,0.12075,0.1215,0.12225,0.123,0.12375,0.1245,0.12525,0.126,0.12675,0.1275,0.12825,0.129,0.12975,0.1305,0.13125,0.132,0.13275,0.1335,0.13425,0.135,0.13575,0.1365,0.13725,0.138,0.13875,0.1395,0.14025,0.14100000000000001,0.14175000000000001,0.14250000000000002,0.14325000000000002,0.144,0.14475,0.1455,0.14625,0.147,0.14775,0.1485,0.14925,0.15],\"y\":[0.02,0.0202,0.0204,0.0206,0.0208,0.021,0.0212,0.0214,0.0216,0.0218,0.022,0.0222,0.0224,0.022600000000000002,0.0228,0.023,0.0232,0.0234,0.0236,0.0238,0.024,0.0242,0.024399999999999998,0.0246,0.0248,0.025,0.0252,0.0254,0.0256,0.0258,0.026,0.0262,0.0264,0.0266,0.0268,0.027,0.0272,0.0274,0.0276,0.0278,0.027999999999999997,0.0282,0.028399999999999998,0.0286,0.0288,0.028999999999999998,0.0292,0.0294,0.029599999999999998,0.0298,0.03,0.030199999999999998,0.0304,0.0306,0.0308,0.031,0.0312,0.0314,0.031599999999999996,0.031799999999999995,0.032,0.0322,0.0324,0.0326,0.032799999999999996,0.033,0.0332,0.0334,0.0336,0.0338,0.034,0.034199999999999994,0.0344,0.0346,0.0348,0.034999999999999996,0.035199999999999995,0.0354,0.0356,0.0358,0.036,0.036199999999999996,0.0364,0.0366,0.0368,0.037,0.0372,0.0374,0.037599999999999995,0.0378,0.038,0.0382,0.038400000000000004,0.038599999999999995,0.0388,0.039,0.0392,0.0394,0.039599999999999996,0.0398,0.039999999999999994,0.0402,0.0404,0.0406,0.0408,0.040999999999999995,0.0412,0.0414,0.0416,0.041800000000000004,0.041999999999999996,0.0422,0.0424,0.0426,0.0428,0.043,0.043199999999999995,0.043399999999999994,0.0436,0.04379999999999999,0.044,0.044199999999999996,0.044399999999999995,0.0446,0.04479999999999999,0.045,0.0452,0.045399999999999996,0.0456,0.045799999999999993,0.046,0.0462,0.0464,0.0466,0.046799999999999994,0.047,0.0472,0.0474,0.0476,0.047799999999999995,0.048,0.04819999999999999,0.0484,0.04859999999999999,0.048799999999999996,0.048999999999999995,0.049199999999999994,0.0494,0.04959999999999999,0.0498,0.049999999999999996,0.050199999999999995,0.0504,0.05059999999999999,0.0508,0.051,0.051199999999999996,0.0514,0.05159999999999999,0.0518,0.05199999999999999,0.052199999999999996,0.0524,0.052599999999999994,0.0528,0.05299999999999999,0.0532,0.05339999999999999,0.053599999999999995,0.0538,0.05399999999999999,0.0542,0.05439999999999999,0.054599999999999996,0.0548,0.05499999999999999,0.0552,0.05539999999999999,0.0556,0.0558,0.055999999999999994,0.0562,0.05639999999999999,0.0566,0.0568,0.056999999999999995,0.0572,0.05739999999999999,0.0576,0.05779999999999999,0.057999999999999996,0.0582,0.058399999999999994,0.0586,0.05879999999999999,0.059,0.05919999999999999,0.059399999999999994,0.0596,0.05979999999999999,0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in Bond= %{text:.0f}%<br>Sharpe ratio : 0.4286<extra></extra>\",\"line\":{\"color\":\"red\"},\"mode\":\"lines\",\"name\":\"CAL: Bond\",\"text\":[0.0,1.35,2.7,4.050000000000001,5.4,6.75,8.100000000000001,9.450000000000001,10.8,12.15,13.5,14.850000000000001,16.200000000000003,17.55,18.900000000000002,20.25,21.6,22.950000000000003,24.3,25.650000000000002,27.0,28.35,29.700000000000003,31.050000000000004,32.400000000000006,33.75,35.1,36.45,37.800000000000004,39.150000000000006,40.5,41.85,43.2,44.550000000000004,45.900000000000006,47.25,48.6,49.95,51.300000000000004,52.650000000000006,54.0,55.35000000000001,56.7,58.050000000000004,59.400000000000006,60.75000000000001,62.10000000000001,63.45,64.80000000000001,66.15,67.5,68.85000000000001,70.2,71.55000000000001,72.9,74.25,75.60000000000001,76.95,78.30000000000001,79.65,81.0,82.35000000000001,83.7,85.05000000000001,86.4,87.75,89.10000000000001,90.45,91.80000000000001,93.15,94.5,95.85000000000001,97.2,98.55000000000001,99.9,101.25000000000001,102.60000000000001,103.95,105.30000000000001,106.65000000000002,108.0,109.35000000000001,110.70000000000002,112.05000000000001,113.4,114.75000000000001,116.10000000000001,117.45000000000002,118.80000000000001,120.15000000000002,121.50000000000001,122.85000000000001,124.20000000000002,125.55000000000001,126.9,128.25000000000003,129.60000000000002,130.95000000000002,132.3,133.65000000000003,135.0,136.35000000000002,137.70000000000002,139.05,140.4,141.75000000000003,143.10000000000002,144.45000000000002,145.8,147.15000000000003,148.5,149.85000000000002,151.20000000000002,152.55,153.9,155.25000000000003,156.60000000000002,157.95000000000002,159.3,160.65000000000003,162.0,163.35000000000002,164.70000000000002,166.05,167.4,168.75000000000003,170.10000000000002,171.45000000000002,172.8,174.15000000000003,175.5,176.85000000000002,178.20000000000002,179.55000000000004,180.9,182.25000000000003,183.60000000000002,184.95000000000002,186.3,187.65000000000003,189.0,190.35000000000002,191.70000000000002,193.05000000000004,194.4,195.75000000000003,197.10000000000002,198.45000000000002,199.8,201.15000000000003,202.50000000000003,203.85000000000005,205.20000000000002,206.55,207.9,209.25000000000003,210.60000000000002,211.95000000000005,213.30000000000004,214.65,216.0,217.35000000000002,218.70000000000002,220.05000000000004,221.40000000000003,222.75000000000006,224.10000000000002,225.45000000000002,226.8,228.15000000000003,229.50000000000003,230.85000000000005,232.20000000000002,233.55,234.90000000000003,236.25000000000003,237.60000000000002,238.95000000000005,240.30000000000004,241.65,243.00000000000003,244.35000000000002,245.70000000000002,247.05000000000004,248.40000000000003,249.75000000000006,251.10000000000002,252.45000000000002,253.8,255.15000000000003,256.50000000000006,257.85,259.20000000000005,260.55,261.90000000000003,263.25,264.6,265.95000000000005,267.30000000000007,268.65000000000003,270.0],\"x\":[0.0,0.0004725000000000001,0.0009450000000000002,0.0014175000000000004,0.0018900000000000004,0.0023625000000000005,0.0028350000000000007,0.003307500000000001,0.003780000000000001,0.004252500000000001,0.004725000000000001,0.005197500000000002,0.005670000000000001,0.006142500000000001,0.006615000000000002,0.007087500000000001,0.007560000000000002,0.008032500000000001,0.008505000000000002,0.008977500000000001,0.009450000000000002,0.009922500000000002,0.010395000000000003,0.010867500000000002,0.011340000000000003,0.011812500000000002,0.012285000000000003,0.012757500000000003,0.013230000000000004,0.013702500000000005,0.014175000000000002,0.014647500000000003,0.015120000000000003,0.015592500000000004,0.016065000000000003,0.016537500000000004,0.017010000000000004,0.017482500000000005,0.017955000000000002,0.018427500000000003,0.018900000000000004,0.019372500000000004,0.019845000000000005,0.020317500000000002,0.020790000000000006,0.021262500000000004,0.021735000000000004,0.022207500000000005,0.022680000000000006,0.023152500000000006,0.023625000000000004,0.024097500000000008,0.024570000000000005,0.025042500000000006,0.025515000000000006,0.025987500000000004,0.026460000000000008,0.026932500000000005,0.02740500000000001,0.027877500000000006,0.028350000000000004,0.028822500000000008,0.029295000000000005,0.02976750000000001,0.030240000000000006,0.030712500000000004,0.031185000000000008,0.031657500000000005,0.032130000000000006,0.032602500000000006,0.03307500000000001,0.03354750000000001,0.03402000000000001,0.03449250000000001,0.03496500000000001,0.03543750000000001,0.035910000000000004,0.036382500000000005,0.036855000000000006,0.03732750000000001,0.03780000000000001,0.03827250000000001,0.03874500000000001,0.0392175,0.03969000000000001,0.04016250000000001,0.040635000000000004,0.041107500000000005,0.04158000000000001,0.042052500000000013,0.04252500000000001,0.04299750000000001,0.04347000000000001,0.04394250000000001,0.04441500000000001,0.04488750000000001,0.04536000000000001,0.045832500000000005,0.04630500000000001,0.046777500000000014,0.04725000000000001,0.04772250000000001,0.048195000000000016,0.04866750000000001,0.04914000000000001,0.04961250000000001,0.05008500000000001,0.05055750000000001,0.05103000000000001,0.051502500000000014,0.05197500000000001,0.05244750000000001,0.052920000000000016,0.05339250000000001,0.05386500000000001,0.05433750000000001,0.05481000000000002,0.05528250000000001,0.05575500000000001,0.056227500000000014,0.05670000000000001,0.057172500000000015,0.057645000000000016,0.05811750000000001,0.05859000000000001,0.05906250000000001,0.05953500000000002,0.06000750000000001,0.06048000000000001,0.060952500000000014,0.06142500000000001,0.061897500000000015,0.062370000000000016,0.06284250000000002,0.06331500000000001,0.06378750000000001,0.06426000000000001,0.06473250000000001,0.06520500000000001,0.06567750000000001,0.06615000000000001,0.06662250000000002,0.06709500000000002,0.06756750000000002,0.06804000000000002,0.06851250000000002,0.06898500000000002,0.0694575,0.06993000000000002,0.07040250000000002,0.07087500000000002,0.07134750000000002,0.07182000000000001,0.07229250000000001,0.07276500000000001,0.07323750000000001,0.07371000000000001,0.07418250000000003,0.07465500000000003,0.07512750000000001,0.07560000000000001,0.07607250000000002,0.07654500000000002,0.07701750000000002,0.07749000000000002,0.07796250000000002,0.078435,0.07890750000000002,0.07938000000000002,0.07985250000000002,0.08032500000000002,0.08079750000000002,0.08127000000000001,0.08174250000000001,0.08221500000000001,0.08268750000000001,0.08316000000000003,0.08363250000000003,0.08410500000000003,0.08457750000000001,0.08505000000000001,0.08552250000000002,0.08599500000000002,0.08646750000000002,0.08694000000000002,0.08741250000000003,0.08788500000000002,0.08835750000000002,0.08883000000000002,0.08930250000000002,0.08977500000000002,0.09024750000000002,0.09072000000000002,0.09119250000000001,0.09166500000000001,0.09213750000000002,0.09261000000000003,0.09308250000000003,0.09355500000000003,0.09402750000000001,0.09450000000000001],\"y\":[0.02,0.0202025,0.020405,0.0206075,0.020810000000000002,0.0210125,0.021215,0.021417500000000003,0.02162,0.0218225,0.022025,0.0222275,0.022430000000000002,0.0226325,0.022835,0.023037500000000002,0.02324,0.0234425,0.023645000000000003,0.0238475,0.024050000000000002,0.024252500000000003,0.024455,0.024657500000000002,0.024860000000000004,0.0250625,0.025265000000000003,0.025467500000000004,0.025670000000000002,0.025872500000000003,0.026075,0.026277500000000002,0.026480000000000004,0.0266825,0.026885000000000003,0.0270875,0.027290000000000002,0.027492500000000003,0.027695,0.027897500000000006,0.0281,0.0283025,0.028505000000000003,0.028707500000000004,0.028910000000000005,0.029112500000000003,0.029315000000000004,0.029517500000000002,0.029720000000000003,0.029922500000000005,0.030125000000000002,0.030327500000000004,0.03053,0.030732500000000003,0.030935000000000004,0.031137500000000005,0.03134000000000001,0.0315425,0.031745,0.031947500000000004,0.032150000000000005,0.032352500000000006,0.032555,0.03275750000000001,0.03296,0.033162500000000004,0.033365000000000006,0.0335675,0.03377000000000001,0.0339725,0.034175000000000004,0.034377500000000005,0.03458000000000001,0.03478250000000001,0.034985,0.035187500000000003,0.035390000000000005,0.035592500000000006,0.03579500000000001,0.0359975,0.0362,0.036402500000000004,0.036605000000000006,0.03680750000000001,0.03701,0.03721250000000001,0.037415000000000004,0.037617500000000005,0.037820000000000006,0.03802250000000001,0.03822500000000001,0.0384275,0.03863000000000001,0.038832500000000006,0.03903500000000001,0.03923750000000001,0.03944000000000001,0.039642500000000004,0.039845000000000005,0.04004750000000001,0.04025000000000001,0.0404525,0.04065500000000001,0.040857500000000005,0.041060000000000006,0.04126250000000001,0.04146500000000001,0.04166750000000001,0.041870000000000004,0.04207250000000001,0.04227500000000001,0.04247750000000001,0.04268000000000001,0.042882500000000004,0.04308500000000001,0.043287500000000007,0.04349000000000001,0.04369250000000001,0.043895,0.04409750000000001,0.044300000000000006,0.04450250000000001,0.04470500000000001,0.0449075,0.04511000000000001,0.045312500000000006,0.045515000000000014,0.04571750000000001,0.04592000000000001,0.04612250000000001,0.046325000000000005,0.04652750000000001,0.04673000000000001,0.04693250000000001,0.04713500000000001,0.047337500000000005,0.04754000000000001,0.04774250000000001,0.04794500000000001,0.04814750000000001,0.048350000000000004,0.04855250000000001,0.04875500000000001,0.048957500000000015,0.04916000000000001,0.04936250000000001,0.04956500000000001,0.049767500000000006,0.049970000000000014,0.05017250000000001,0.05037500000000001,0.05057750000000001,0.050780000000000006,0.05098250000000001,0.05118500000000001,0.051387500000000016,0.05159000000000001,0.05179250000000002,0.05199500000000001,0.05219750000000001,0.0524,0.05260250000000001,0.052805000000000005,0.05300750000000001,0.05321000000000001,0.053412500000000016,0.05361500000000001,0.053817500000000004,0.05402000000000001,0.05422250000000001,0.054425000000000015,0.05462750000000001,0.054830000000000004,0.05503250000000001,0.055235000000000006,0.055437500000000015,0.05564000000000001,0.05584250000000002,0.05604500000000001,0.056247500000000006,0.056450000000000014,0.05665250000000001,0.05685500000000002,0.05705750000000001,0.05726000000000002,0.057462500000000014,0.05766500000000001,0.057867500000000016,0.05807000000000001,0.05827250000000002,0.05847500000000001,0.05867750000000002,0.058880000000000016,0.05908250000000001,0.059285000000000004,0.05948750000000001,0.05969000000000001,0.059892500000000015,0.06009500000000001,0.060297500000000004,0.06050000000000001],\"type\":\"scatter\"},{\"customdata\":[[[0.13202804395833206],[0.867971956041668],[0.5166]]],\"hovertemplate\":\"tangency portfolio<br>Stock: %{customdata[0]:.1%}<br>Bond: %{customdata[1]:.1%}<br>Sharpe ratio: %{customdata[2]:.4f}<br><extra></extra>\",\"marker\":{\"color\":\"blue\",\"size\":10},\"mode\":\"markers\",\"name\":\"tangency portfolio\",\"x\":[0.03542496472428655],\"y\":[0.038300701098958306],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in tangency portfolio = %{text:.0f}%<br>Sharpe ratio: 0.5166<extra></extra>\",\"line\":{\"color\":\"blue\"},\"mode\":\"lines\",\"name\":\"CAL: tangency portfolio\",\"text\":[0.0,1.1,2.2,3.3000000000000003,4.4,5.500000000000001,6.6000000000000005,7.700000000000001,8.8,9.9,11.000000000000002,12.100000000000001,13.200000000000001,14.3,15.400000000000002,16.5,17.6,18.700000000000003,19.8,20.900000000000002,22.000000000000004,23.1,24.200000000000003,25.3,26.400000000000002,27.500000000000004,28.6,29.700000000000003,30.800000000000004,31.900000000000002,33.0,34.1,35.2,36.300000000000004,37.400000000000006,38.50000000000001,39.6,40.7,41.800000000000004,42.900000000000006,44.00000000000001,45.10000000000001,46.2,47.300000000000004,48.400000000000006,49.50000000000001,50.6,51.7,52.800000000000004,53.900000000000006,55.00000000000001,56.10000000000001,57.2,58.300000000000004,59.400000000000006,60.50000000000001,61.60000000000001,62.70000000000001,63.800000000000004,64.9,66.0,67.10000000000001,68.2,69.30000000000001,70.4,71.50000000000001,72.60000000000001,73.70000000000002,74.80000000000001,75.9,77.00000000000001,78.10000000000001,79.2,80.30000000000001,81.4,82.5,83.60000000000001,84.7,85.80000000000001,86.9,88.00000000000001,89.10000000000001,90.20000000000002,91.30000000000001,92.4,93.5,94.60000000000001,95.7,96.80000000000001,97.9,99.00000000000001,100.10000000000001,101.2,102.30000000000001,103.4,104.50000000000001,105.60000000000001,106.70000000000002,107.80000000000001,108.90000000000002,110.00000000000001,111.10000000000002,112.20000000000002,113.3,114.4,115.5,116.60000000000001,117.7,118.80000000000001,119.9,121.00000000000001,122.10000000000001,123.20000000000002,124.30000000000001,125.40000000000002,126.50000000000001,127.60000000000001,128.70000000000002,129.8,130.9,132.0,133.10000000000002,134.20000000000002,135.3,136.4,137.50000000000003,138.60000000000002,139.70000000000002,140.8,141.9,143.00000000000003,144.1,145.20000000000002,146.3,147.40000000000003,148.5,149.60000000000002,150.70000000000002,151.8,152.9,154.00000000000003,155.10000000000002,156.20000000000002,157.3,158.4,159.50000000000003,160.60000000000002,161.70000000000002,162.8,163.90000000000003,165.0,166.10000000000002,167.20000000000002,168.30000000000004,169.4,170.5,171.60000000000002,172.70000000000002,173.8,174.9,176.00000000000003,177.10000000000002,178.20000000000002,179.3,180.40000000000003,181.50000000000003,182.60000000000002,183.70000000000002,184.8,185.90000000000003,187.0,188.10000000000002,189.20000000000002,190.3,191.4,192.50000000000003,193.60000000000002,194.70000000000002,195.8,196.90000000000003,198.00000000000003,199.10000000000002,200.20000000000002,201.30000000000004,202.4,203.5,204.60000000000002,205.70000000000005,206.8,207.9,209.00000000000003,210.10000000000005,211.20000000000002,212.3,213.40000000000003,214.5,215.60000000000002,216.70000000000002,217.80000000000004,218.9,220.00000000000003],\"x\":[0.0,0.0003896746119671521,0.0007793492239343042,0.0011690238359014563,0.0015586984478686084,0.0019483730598357605,0.0023380476718029126,0.002727722283770065,0.0031173968957372167,0.0035070715077043686,0.003896746119671521,0.004286420731638673,0.004676095343605825,0.005065769955572977,0.00545544456754013,0.005845119179507281,0.0062347937914744335,0.006624468403441586,0.007014143015408737,0.00740381762737589,0.007793492239343042,0.008183166851310193,0.008572841463277346,0.008962516075244497,0.00935219068721165,0.009741865299178802,0.010131539911145954,0.010521214523113108,0.01091088913508026,0.01130056374704741,0.011690238359014562,0.012079912970981715,0.012469587582948867,0.012859262194916019,0.013248936806883172,0.013638611418850324,0.014028286030817474,0.014417960642784626,0.01480763525475178,0.015197309866718932,0.015586984478686084,0.015976659090653236,0.016366333702620386,0.01675600831458754,0.017145682926554693,0.017535357538521843,0.017925032150488993,0.018314706762456147,0.0187043813744233,0.01909405598639045,0.019483730598357604,0.019873405210324758,0.020263079822291908,0.02065275443425906,0.021042429046226215,0.021432103658193365,0.02182177827016052,0.022211452882127673,0.02260112749409482,0.022990802106061973,0.023380476718029123,0.023770151329996277,0.02415982594196343,0.02454950055393058,0.024939175165897734,0.025328849777864888,0.025718524389832038,0.02610819900179919,0.026497873613766345,0.026887548225733495,0.02727722283770065,0.027666897449667795,0.02805657206163495,0.028446246673602103,0.028835921285569253,0.029225595897536406,0.02961527050950356,0.03000494512147071,0.030394619733437864,0.030784294345405017,0.031173968957372167,0.03156364356933932,0.03195331818130647,0.03234299279327363,0.03273266740524077,0.03312234201720793,0.03351201662917508,0.03390169124114223,0.034291365853109386,0.034681040465076536,0.035070715077043686,0.03546038968901084,0.035850064300977987,0.036239738912945144,0.036629413524912294,0.03701908813687945,0.0374087627488466,0.03779843736081376,0.0381881119727809,0.03857778658474806,0.03896746119671521,0.039357135808682366,0.039746810420649516,0.04013648503261666,0.040526159644583816,0.040915834256550966,0.04130550886851812,0.04169518348048527,0.04208485809245243,0.042474532704419574,0.04286420731638673,0.04325388192835388,0.04364355654032104,0.04403323115228819,0.044422905764255345,0.04481258037622249,0.04520225498818964,0.045591929600156796,0.045981604212123946,0.0463712788240911,0.046760953436058246,0.0471506280480254,0.04754030265999255,0.04792997727195971,0.04831965188392686,0.04870932649589402,0.04909900110786116,0.04948867571982832,0.04987835033179547,0.05026802494376262,0.050657699555729775,0.05104737416769692,0.051437048779664075,0.051826723391631226,0.05221639800359838,0.05260607261556553,0.05299574722753269,0.05338542183949983,0.05377509645146699,0.05416477106343414,0.0545544456754013,0.05494412028736845,0.05533379489933559,0.05572346951130275,0.0561131441232699,0.056502818735237055,0.056892493347204205,0.05728216795917136,0.057671842571138505,0.05806151718310566,0.05845119179507281,0.05884086640703997,0.05923054101900712,0.05962021563097428,0.06000989024294142,0.06039956485490857,0.06078923946687573,0.06117891407884288,0.061568588690810035,0.06195826330277718,0.062347937914744335,0.06273761252671149,0.06312728713867864,0.06351696175064579,0.06390663636261294,0.06429631097458009,0.06468598558654726,0.0650756601985144,0.06546533481048154,0.06585500942244871,0.06624468403441586,0.06663435864638301,0.06702403325835016,0.06741370787031732,0.06780338248228446,0.06819305709425162,0.06858273170621877,0.06897240631818592,0.06936208093015307,0.06975175554212022,0.07014143015408737,0.07053110476605452,0.07092077937802169,0.07131045398998884,0.07170012860195597,0.07208980321392314,0.07247947782589029,0.07286915243785745,0.07325882704982459,0.07364850166179175,0.0740381762737589,0.07442785088572605,0.0748175254976932,0.07520720010966035,0.07559687472162752,0.07598654933359465,0.0763762239455618,0.07676589855752897,0.07715557316949612,0.07754524778146327,0.07793492239343042],\"y\":[0.02,0.020201307712088543,0.020402615424177085,0.020603923136265623,0.020805230848354166,0.021006538560442708,0.02120784627253125,0.02140915398461979,0.02161046169670833,0.021811769408796873,0.022013077120885415,0.022214384832973957,0.022415692545062496,0.022617000257151038,0.02281830796923958,0.02301961568132812,0.02322092339341666,0.023422231105505203,0.023623538817593746,0.023824846529682288,0.024026154241770827,0.02422746195385937,0.02442876966594791,0.024630077378036453,0.024831385090124995,0.025032692802213534,0.025234000514302076,0.02543530822639062,0.02563661593847916,0.0258379236505677,0.02603923136265624,0.026240539074744784,0.026441846786833326,0.026643154498921864,0.026844462211010407,0.02704576992309895,0.02724707763518749,0.027448385347276033,0.027649693059364572,0.027851000771453114,0.028052308483541656,0.0282536161956302,0.02845492390771874,0.02865623161980728,0.02885753933189582,0.029058847043984364,0.029260154756072902,0.029461462468161444,0.029662770180249987,0.02986407789233853,0.03006538560442707,0.03026669331651561,0.030468001028604152,0.030669308740692694,0.030870616452781236,0.03107192416486978,0.03127323187695832,0.03147453958904686,0.0316758473011354,0.03187715501322394,0.03207846272531248,0.032279770437401024,0.03248107814948957,0.03268238586157811,0.03288369357366665,0.03308500128575519,0.03328630899784373,0.03348761670993228,0.033688924422020816,0.033890232134109355,0.0340915398461979,0.03429284755828644,0.03449415527037498,0.034695462982463524,0.03489677069455206,0.0350980784066406,0.03529938611872915,0.035500693830817685,0.03570200154290623,0.03590330925499477,0.03610461696708331,0.036305924679171854,0.0365072323912604,0.03670854010334894,0.03690984781543748,0.037111155527526016,0.037312463239614554,0.0375137709517031,0.037715078663791646,0.037916386375880184,0.03811769408796872,0.03831900180005726,0.03852030951214581,0.03872161722423435,0.03892292493632289,0.03912423264841143,0.03932554036049997,0.039526848072588515,0.03972815578467706,0.0399294634967656,0.04013077120885414,0.040332078920942684,0.04053338663303122,0.04073469434511976,0.04093600205720831,0.041137309769296845,0.041338617481385384,0.04153992519347392,0.041741232905562475,0.041942540617651014,0.04214384832973955,0.04234515604182809,0.04254646375391664,0.042747771466005176,0.04294907917809372,0.04315038689018226,0.0433516946022708,0.04355300231435934,0.04375431002644788,0.04395561773853643,0.04415692545062497,0.044358233162713506,0.044559540874802045,0.04476084858689059,0.044962156298979136,0.045163464011067675,0.045364771723156214,0.04556607943524476,0.0457673871473333,0.04596869485942184,0.04617000257151038,0.04637131028359892,0.04657261799568746,0.046773925707776,0.04697523341986455,0.04717654113195309,0.04737784884404163,0.04757915655613017,0.04778046426821871,0.04798177198030725,0.0481830796923958,0.048384387404484336,0.048585695116572875,0.04878700282866142,0.04898831054074996,0.049189618252838505,0.04939092596492704,0.04959223367701558,0.04979354138910412,0.04999484910119267,0.05019615681328121,0.05039746452536975,0.05059877223745829,0.050800079949546835,0.051001387661635374,0.05120269537372391,0.05140400308581246,0.051605310797901,0.051806618509989535,0.052007926222078074,0.05220923393416663,0.052410541646255165,0.052611849358343704,0.05281315707043224,0.053014464782520795,0.053215772494609334,0.05341708020669787,0.05361838791878641,0.05381969563087495,0.05402100334296349,0.05422231105505203,0.05442361876714058,0.05462492647922912,0.05482623419131766,0.055027541903406196,0.05522884961549475,0.05543015732758329,0.055631465039671826,0.055832772751760365,0.056034080463848904,0.056235388175937456,0.056436695888025995,0.056638003600114534,0.05683931131220307,0.05704061902429161,0.05724192673638015,0.0574432344484687,0.05764454216055724,0.05784584987264578,0.05804715758473432,0.05824846529682287,0.05844977300891141,0.05865108072099995,0.05885238843308849,0.059053696145177026,0.059255003857265565,0.05945631156935412,0.059657619281442656,0.059858926993531195,0.06006023470561973,0.06026154241770827],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"title\":{\"text\":\"Standard Deviation\"},\"range\":[0,0.1575],\"tickformat\":\".0%\"},\"yaxis\":{\"title\":{\"text\":\"Expected Return\"},\"range\":[0,0.063],\"tickformat\":\".0%\"},\"legend\":{\"yanchor\":\"top\",\"y\":0.5,\"xanchor\":\"left\",\"x\":0.65}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('bcb496a9-f410-4f2a-b781-915a2a0ef5c0');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nTangency portfolio of two risky assets\n:::\n:::\n\n\nRecall from @eq-cal that the slope of the CAL for a risky asset is the Sharpe ratio.  The **Sharpe ratio** is a measure of the excess return of an investment per unit of risk.  Since investors like expected returns and dislike risk, they want high Sharpe ratios.  Note in @fig-two-asset-plus_rf that the Sharpe ratio of the bond is higher than that of the stock portfolio.  The highest possible Sharpe ratio is obtained by combining the risk-free asset with a risky portfolio so that the CAL slope is as high as possible. This occurs when the CAL is tangent to the curve of risky-only portfolios.  This portfolio of risky assets is thus called the **tangency portfolio**.  Investing along the CAL of the tangency portfolio offers the highest possible Sharpe ratio, regardless of any desired level of expected return or risk.  \n\n::: {.callout-tip collapse=\"true\"}\n## Calculating the Tangency Portfolio\n\nIf short sales are allowed, the tangency portfolio weights satisfy a system of equations.  The inner product of the tangency portfolio $w$ with each column of the covariance matrix $\\text{cov}_i$ is proportional to the asset's risk premium $E[r_i]-r_f$ ($n-1$ equations):\n\n$$ \\frac{w'\\text{cov}_i}{w'\\text{cov}_j} = \\frac{E[r_i]-r_f}{E[r_j]-r_f}\\,,$$\n\nand the portfolio is fully invested:\n\n$$\\sum_i w_i = 1.$$\n\n\n``` p\nimport numpy as np\nfrom scipy.optimize import minimize\n\n##### Inputs\n# Risk-free rate\nr = 0.02\n# Expected returns\nmns = np.array([0.10, 0.05, 0.07])\n# Standard deviations\nsds = np.array([0.20, 0.12, 0.15])\n# Correlations\ncorr12 = 0.3\ncorr13 = 0.3\ncorr23 = 0.3\n# Covariance matrix\nC  = np.identity(3)\nC[0, 1] = C[1, 0] = corr12\nC[0, 2] = C[2, 0] = corr13\nC[1, 2] = C[2, 1] = corr23\ncov = np.diag(sds) @ C @ np.diag(sds)\n\n##### Tangency Portfolio\nw = np.linalg.solve(cov, mns - r)\nwgts_tangency = w / np.sum(w)\n\n```\n:::\n\nThe tangency portfolio is thus the optimal combination of risky assets, and all investors should invest somewhere along the tangency portfolio CAL.  This is an example of the **two-fund separation** property of asset allocation.  All investors will choose to allocate capital to the risk-free asset and an optimal risky asset portfolio.  The problem of determining an optimal all-risky asset portfolio is separate from the choice of where to invest on the resulting capital allocation line.  We discuss the latter decision of how much capital to allocate to risky assets relative to the risk-free asset in the rest of this section.\n\n\n## Preferences over Risk and Return\n\nIn order to make statements about \"optimal\" portfolios, we need to describe the preferences of investors in some way.  A standard way to do so is to use mean-variance utility.  Simply put, we will assume that investors like higher expected returns and dislike portfolios with riskier returns.  The amount of extra expected return needed for an investor to take on additional risk is governed by the investor's risk aversion, which we will denote by $A$.\n\nMathematically, mean-variance utility for a given portfolio return $r_p$ is:\n\n$$ U(r_p)=E[r_p] - 0.5\\cdot A \\cdot \\text{var}[r_p]\\,.$$\n\nThe utility of a risky investment is its expected return minus a penalty for variance.  More risk averse investors have higher values for $A$, meaning that they put greater penalties on variance.  @fig-indifference0 shows indifference curves for three different levels of risk aversion, but the same level of utility.  When risk aversion is higher, a higher expected return is required to reach the utility for a given level of risk, and the extra expected return increases when risk increases.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom scipy.stats import norm\nimport plotly.express as px\n\n# Parameters\nraver1 = 2\nraver2 = 5\nraver3 = 10\nu1 = 0.10\nu2 = 0.10\nu3 = 0.10\nstring1='Risk Aversion='+str(raver1)\nstring2='Risk Aversion='+str(raver2)\nstring3='Risk Aversion='+str(raver3)\n\n# Generate data\nsd = np.arange(0,0.405,0.005)\nU1 = u1 + 0.5*raver1* (sd**2)\nU2 = u2 + 0.5*raver2* (sd**2) \nU3 = u3 + 0.5*raver3* (sd**2)\ndf = pd.DataFrame(data={'Standard Deviation': sd, string1: U1, string2: U2,string3: U3})\ndf = df*100\n\n# Plot data\nfig = px.line(df,x='Standard Deviation', y=[string1, string2, string3])\nfig.update_layout(title='',\n                   xaxis_title='Standard Deviation',\n                   yaxis_title='Expected Return',\n    legend_title_text='',)\nfig.update_yaxes(tickformat=\".0f\", ticksuffix=\"%\")\nfig.update_xaxes(tickformat=\".0f\", ticksuffix=\"%\")\nfig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.01))\nfig.show()\n```\n\n::: {#fig-indifference0 .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"58147d30-ab8c-4c4f-93c0-ee45bc62edab\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"58147d30-ab8c-4c4f-93c0-ee45bc62edab\")) {                    Plotly.newPlot(                        \"58147d30-ab8c-4c4f-93c0-ee45bc62edab\",                        [{\"hovertemplate\":\"variable=Risk Aversion=2<br>Standard Deviation=%{x}<br>value=%{y}<extra></extra>\",\"legendgroup\":\"Risk Aversion=2\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Risk Aversion=2\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0],\"xaxis\":\"x\",\"y\":[10.0,10.0025,10.010000000000002,10.0225,10.040000000000001,10.0625,10.09,10.1225,10.16,10.2025,10.25,10.3025,10.360000000000001,10.422500000000001,10.49,10.562500000000002,10.64,10.7225,10.81,10.902500000000002,11.000000000000002,11.1025,11.21,11.3225,11.44,11.5625,11.690000000000001,11.822500000000002,11.96,12.102500000000001,12.25,12.402500000000002,12.560000000000002,12.7225,12.89,13.062500000000002,13.240000000000002,13.422500000000001,13.61,13.8025,14.000000000000002,14.2025,14.41,14.622499999999999,14.84,15.0625,15.290000000000001,15.5225,15.760000000000002,16.0025,16.25,16.5025,16.76,17.0225,17.29,17.562500000000004,17.84,18.122500000000002,18.41,18.7025,19.0,19.302500000000002,19.61,19.922500000000003,20.240000000000002,20.5625,20.890000000000004,21.222500000000004,21.560000000000002,21.902500000000003,22.250000000000004,22.6025,22.96,23.322499999999998,23.69,24.0625,24.44,24.8225,25.21,25.602500000000006,26.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=Risk Aversion=5<br>Standard Deviation=%{x}<br>value=%{y}<extra></extra>\",\"legendgroup\":\"Risk Aversion=5\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Risk Aversion=5\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0],\"xaxis\":\"x\",\"y\":[10.0,10.00625,10.025,10.05625,10.100000000000001,10.15625,10.225000000000001,10.30625,10.4,10.50625,10.625000000000002,10.756250000000001,10.9,11.05625,11.225,11.406250000000002,11.600000000000001,11.806250000000002,12.025,12.25625,12.5,12.75625,13.025,13.30625,13.600000000000001,13.90625,14.225000000000001,14.55625,14.900000000000002,15.25625,15.625,16.00625,16.400000000000002,16.80625,17.225,17.65625,18.099999999999998,18.556250000000002,19.025,19.50625,20.0,20.506250000000005,21.025,21.55625,22.1,22.656250000000004,23.225,23.806250000000002,24.4,25.006249999999998,25.624999999999996,26.25625,26.900000000000002,27.556250000000006,28.225,28.90625,29.600000000000005,30.306250000000002,31.025000000000002,31.756249999999998,32.49999999999999,33.25625,34.025000000000006,34.806250000000006,35.6,36.40625000000001,37.22500000000001,38.056250000000006,38.9,39.75625,40.625000000000014,41.50625,42.39999999999999,43.30624999999999,44.225,45.15625,46.099999999999994,47.05625,48.025000000000006,49.00625000000001,50.000000000000014],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=Risk Aversion=10<br>Standard Deviation=%{x}<br>value=%{y}<extra></extra>\",\"legendgroup\":\"Risk Aversion=10\",\"line\":{\"color\":\"#00cc96\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Risk Aversion=10\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0],\"xaxis\":\"x\",\"y\":[10.0,10.012500000000001,10.05,10.1125,10.200000000000001,10.3125,10.450000000000001,10.6125,10.8,11.0125,11.25,11.512500000000001,11.8,12.1125,12.450000000000001,12.812499999999998,13.200000000000001,13.612499999999999,14.05,14.512500000000001,15.000000000000002,15.512500000000001,16.05,16.6125,17.2,17.8125,18.45,19.1125,19.8,20.5125,21.25,22.012500000000003,22.8,23.612500000000004,24.450000000000003,25.312500000000004,26.200000000000003,27.1125,28.049999999999997,29.012500000000003,30.000000000000004,31.012500000000003,32.05,33.1125,34.199999999999996,35.3125,36.45,37.612500000000004,38.800000000000004,40.012499999999996,41.25,42.512499999999996,43.800000000000004,45.1125,46.45,47.8125,49.20000000000001,50.612500000000004,52.05,53.512499999999996,54.99999999999999,56.512499999999996,58.050000000000004,59.612500000000004,61.199999999999996,62.81250000000001,64.45,66.11250000000001,67.80000000000001,69.51250000000002,71.25000000000001,73.0125,74.79999999999998,76.61249999999998,78.45,80.3125,82.19999999999999,84.1125,86.05000000000001,88.01250000000002,90.00000000000001],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Standard Deviation\"},\"tickformat\":\".0f\",\"ticksuffix\":\"%\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Expected Return\"},\"tickformat\":\".0f\",\"ticksuffix\":\"%\"},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0,\"yanchor\":\"top\",\"y\":0.99,\"xanchor\":\"left\",\"x\":0.01},\"margin\":{\"t\":60},\"title\":{\"text\":\"\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('58147d30-ab8c-4c4f-93c0-ee45bc62edab');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nIndifference curves with different levels of risk aversion\n:::\n:::\n\n\nInvestors are indifferent between portfolios that generate the same utility.  @fig-indifference1 shows three different levels of utility, holding risk aversion fixed.  A utility of, for example, 10% means that the investor would be indifferent between the risky investment and a risk-free investment with a return of 10%.  That is, any portfolio located on the green **indifference curve** in @fig-indifference1 provides the same level of utility to this investor.  Higher utility is achieved with either a higher expected return or lower risk or both.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom scipy.stats import norm\nimport plotly.express as px\n# import plotly.io as pio\n# pio.renderers.default='notebook'\n\n# Parameters\nraver = 10\nu1 = 0.05\nu2 = 0.075\nu3 = 0.10\nstring1='Utility='+str(np.round(u1*100,1))+'%'\nstring2='Utility='+str(np.round(u2*100,1))+'%'\nstring3='Utility='+str(np.round(u3*100,1))+'%'\n\n# Generate data\nsd = np.arange(0,0.405,0.005)\nU1 = u1 + 0.5*raver* (sd**2)\nU2 = u2 + 0.5*raver* (sd**2) \nU3 = u3 + 0.5*raver* (sd**2)\ndf = pd.DataFrame(data={'Standard Deviation': sd, string1: U1, string2: U2,string3: U3})\ndf = df*100\n\n# Plot data\nfig = px.line(df,x='Standard Deviation', y=[string1, string2, string3])\nfig.update_layout(title='',\n                   xaxis_title='Standard Deviation',\n                   yaxis_title='Expected Return',\n    legend_title_text='',)\nfig.update_yaxes(tickformat=\".0f\", ticksuffix=\"%\")\nfig.update_xaxes(tickformat=\".0f\", ticksuffix=\"%\")\nfig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.01))\nfig.show()\n```\n\n::: {#fig-indifference1 .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"9e9e2cd2-305b-4158-a4bc-38a8456c481c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9e9e2cd2-305b-4158-a4bc-38a8456c481c\")) {                    Plotly.newPlot(                        \"9e9e2cd2-305b-4158-a4bc-38a8456c481c\",                        [{\"hovertemplate\":\"variable=Utility=5.0%<br>Standard Deviation=%{x}<br>value=%{y}<extra></extra>\",\"legendgroup\":\"Utility=5.0%\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Utility=5.0%\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0],\"xaxis\":\"x\",\"y\":[5.0,5.0125,5.050000000000001,5.112500000000001,5.2,5.312500000000001,5.45,5.6125,5.800000000000001,6.0125,6.25,6.5125,6.800000000000001,7.112500000000001,7.450000000000001,7.8125,8.200000000000001,8.6125,9.049999999999999,9.5125,10.0,10.5125,11.05,11.6125,12.2,12.812499999999998,13.450000000000001,14.1125,14.800000000000002,15.512500000000001,16.249999999999996,17.012500000000003,17.8,18.612500000000004,19.45,20.312500000000007,21.199999999999996,22.1125,23.049999999999997,24.012500000000003,25.000000000000007,26.012500000000006,27.049999999999997,28.112499999999997,29.2,30.312500000000004,31.45,32.612500000000004,33.8,35.012499999999996,36.25,37.512499999999996,38.800000000000004,40.112500000000004,41.45,42.8125,44.2,45.612500000000004,47.05,48.512499999999996,49.99999999999999,51.5125,53.05000000000001,54.61250000000001,56.2,57.812500000000014,59.45000000000002,61.11250000000001,62.80000000000001,64.51250000000002,66.25000000000001,68.0125,69.8,71.61249999999998,73.45,75.3125,77.2,79.11250000000001,81.05000000000001,83.01250000000002,85.00000000000001],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=Utility=7.5%<br>Standard Deviation=%{x}<br>value=%{y}<extra></extra>\",\"legendgroup\":\"Utility=7.5%\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Utility=7.5%\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0],\"xaxis\":\"x\",\"y\":[7.5,7.512499999999999,7.55,7.6125,7.7,7.8125,7.95,8.1125,8.299999999999999,8.5125,8.75,9.0125,9.3,9.6125,9.950000000000001,10.3125,10.7,11.1125,11.549999999999999,12.0125,12.5,13.0125,13.55,14.1125,14.7,15.312500000000002,15.950000000000001,16.6125,17.3,18.0125,18.75,19.5125,20.3,21.1125,21.950000000000003,22.812500000000004,23.7,24.612499999999997,25.55,26.5125,27.500000000000004,28.512500000000003,29.549999999999997,30.612499999999997,31.7,32.81250000000001,33.95,35.112500000000004,36.3,37.512499999999996,38.75,40.0125,41.300000000000004,42.612500000000004,43.95,45.31250000000001,46.70000000000001,48.11250000000001,49.55,51.012499999999996,52.49999999999999,54.012499999999996,55.55,57.1125,58.699999999999996,60.3125,61.95,63.612500000000004,65.3,67.0125,68.75000000000001,70.5125,72.29999999999998,74.11249999999998,75.94999999999999,77.8125,79.69999999999999,81.6125,83.55,85.51250000000002,87.50000000000001],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=Utility=10.0%<br>Standard Deviation=%{x}<br>value=%{y}<extra></extra>\",\"legendgroup\":\"Utility=10.0%\",\"line\":{\"color\":\"#00cc96\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Utility=10.0%\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5000000000000004,4.0,4.5,5.0,5.5,6.0,6.5,7.000000000000001,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.000000000000002,14.499999999999998,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,25.0,25.5,26.0,26.5,27.0,27.500000000000004,28.000000000000004,28.500000000000004,28.999999999999996,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0],\"xaxis\":\"x\",\"y\":[10.0,10.012500000000001,10.05,10.1125,10.200000000000001,10.3125,10.450000000000001,10.6125,10.8,11.0125,11.25,11.512500000000001,11.8,12.1125,12.450000000000001,12.812499999999998,13.200000000000001,13.612499999999999,14.05,14.512500000000001,15.000000000000002,15.512500000000001,16.05,16.6125,17.2,17.8125,18.45,19.1125,19.8,20.5125,21.25,22.012500000000003,22.8,23.612500000000004,24.450000000000003,25.312500000000004,26.200000000000003,27.1125,28.049999999999997,29.012500000000003,30.000000000000004,31.012500000000003,32.05,33.1125,34.199999999999996,35.3125,36.45,37.612500000000004,38.800000000000004,40.012499999999996,41.25,42.512499999999996,43.800000000000004,45.1125,46.45,47.8125,49.20000000000001,50.612500000000004,52.05,53.512499999999996,54.99999999999999,56.512499999999996,58.050000000000004,59.612500000000004,61.199999999999996,62.81250000000001,64.45,66.11250000000001,67.80000000000001,69.51250000000002,71.25000000000001,73.0125,74.79999999999998,76.61249999999998,78.45,80.3125,82.19999999999999,84.1125,86.05000000000001,88.01250000000002,90.00000000000001],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Standard Deviation\"},\"tickformat\":\".0f\",\"ticksuffix\":\"%\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Expected Return\"},\"tickformat\":\".0f\",\"ticksuffix\":\"%\"},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0,\"yanchor\":\"top\",\"y\":0.99,\"xanchor\":\"left\",\"x\":0.01},\"margin\":{\"t\":60},\"title\":{\"text\":\"\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('9e9e2cd2-305b-4158-a4bc-38a8456c481c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nIndifference curves with same level of risk aversion\n:::\n:::\n\n\n## Preferences and the Capital Allocation Line\n\nThe choice of where to locate along the CAL is the choice of how much to invest in a risky portfolio $w$ (the other $1-w$ being invested in a risk-free asset).  A mean-variance investor chooses $w$ to solve:\n$$ \\underset{w}\\max E[r_p] - 0.5\\cdot A \\cdot \\text{var}[r_p]\\,. $$  {#eq-cal-optimization}\n\nwith $r_p = w r_{\\text{risky}} + (1-w) r_{\\text{risky} r_f}$.\nPlugging in the expected return (@eq-expret-rf-risky) and standard deviation ( @eq-sd-rf-risky) into @eq-cal-optimization and considering the first-order condition with respect to $w$ provides the optimal weight to invest in the risky asset:\n\n$$ w^* = \\frac{E[r_{\\text{risky}}-r_f]}{A \\cdot \\text{var}_{\\text{risky}}}\\,.$$ {#eq-cal-opt-wgt}\nThus, an investor's location on the CAL depends on risk aversion.  Investors with different risk aversion will choose different combinations of the risky asset and the risk-free asset.  \n\nWhile @eq-cal-opt-wgt applies to the optimal capital allocation between any risky portfolio and the risk-free asset, the risky portfolio is usually some optimal combination of risky assets like the tangency portfolio.  Thus, with multiple risky assets, asset allocation decisions are made in two steps.  First, the optimal combination of risky assets, the tangency portfolio, is found.  With the same set of inputs for expected returns, standard deviations, and correlations, all investors find the tangency portfolio to be the optimal risky portfolio.  Second, investors choose how to allocate capital between the risky portfolio and the risk-free asset.  Investors will differ in the fraction of their wealth to invest in the tangency portfolio relative to the risk-free asset because investors with different risk aversions will find different portfolios on the tangency portfolio capital allocation line to be better than others based on their own preferences.\n\n@fig-tangency-and-preferences shows the indifference curves at the highest possible utility level for investors with the indicated risk aversions.  Investors with lower risk aversion will choose portfolios further up the capital allocation line, accepting greater risk for higher expected returns.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\nmn_stock = 6\nmn_bond  = 3.5\nsd_stock = 15\nsd_bond  = 3.5\ncorr = -5\n\nrs = 2\nextra = 0\n\nraver1 = 6\nraver2 = 10\n\ndef data(mn1, mn2, sd1, sd2, c, rs, extra):\n    c = c / 100\n    rb = rs + extra   \n    rs = rs/100\n    rb = rb/100\n    mns = [mn1, mn2]\n    sds = [sd1, sd2]\n    grid = np.linspace(-0.2, 1, 121)\n    ports = [np.array([w, 1 - w]) for w in grid]\n    means = [p.T @ np.array(mns) for p in ports]\n    df = pd.DataFrame(means)\n    df.columns = [\"mean\"]\n    cov = np.array(\n        [[sds[0] ** 2, sds[0] * sds[1] * c], [sds[0] * sds[1] * c, sds[1] ** 2]]\n    ).reshape(2, 2)\n    df[\"stdev\"] = [np.sqrt(p.T @ cov @ p) for p in ports]\n    df[\"wt1\"] = grid\n    df[\"wt2\"] = 1 - df.wt1\n    for col in [\"mean\", \"stdev\"]:\n        df[col] = df[col] / 100\n    df[\"sr_s\"]= (df[\"mean\"] - rs)/df[\"stdev\"]\n    df[\"sr_b\"]= (df[\"mean\"] - rb)/df[\"stdev\"]\n   \n    return df\n\ndef rf_plus_risky(mn, sd, rs, rb, w_min, w_max):\n    mn /= 100\n    sd /= 100\n    rs /= 100\n    rb /= 100\n    grid = np.linspace(w_min, w_max, 201)\n    mns = [(rs + w * (mn - rs) if w <= 1 else rb + w * (mn - rb)) for w in grid]\n    sds = [w * sd for w in grid]\n    srs = (mn - rs)/sd\n    srb = (mn - rb)/sd\n    return grid, mns, sds, srs, srb\n\ndef opt_utility(mns, cov, Shorts, s, b, A):\n    # P is a portfolio object based on expected returns, covariance matrix, and shorts\n    P = portfolio(mns, cov, Shorts) \n    gmv = P.GMV @ mns\n    if s==b:\n        #tangency exp ret and sd\n        if (s < gmv) or (not Shorts):\n            portTang = P.tangency(s)\n            mnTang = portTang @ mns\n            if mnTang < np.max(mns):\n                sdTang = np.sqrt(portTang @ cov @ portTang)\n\n                #optimal weight in tangency based on risk-aversion\n                wgt = (mnTang - s) / (A * (sdTang**2))\n                expret= wgt*mnTang + (1-wgt)*s\n                sdret = wgt*sdTang \n                wgt_rf = 1-wgt\n                wgt_lo = wgt\n                wgt_hi = 0.0\n    else:\n        #efficient low-risk portfolio\n        if (s < gmv) or (not Shorts):\n            portTangLowRisk = P.tangency(s)\n            mnTangLowRisk = portTangLowRisk @ mns\n            if mnTangLowRisk < np.max(mns):\n                sdTangLowRisk = np.sqrt(portTangLowRisk @ cov @ portTangLowRisk)\n\n        #efficient high-risk portfolio\n        if ((b<gmv) or (not Shorts)):\n            portTangHighRisk = P.tangency(b)\n            mnTangHighRisk = portTangHighRisk @ mns\n            if mnTangHighRisk < np.max(mns):\n                sdTangHighRisk = np.sqrt(portTangHighRisk @ cov @ portTangHighRisk)\n\n        #1st: efficient low risk CAL\n        wgt = (mnTangLowRisk - s) / (A * (sdTangLowRisk**2))\n        expret= wgt*mnTangLowRisk + (1-wgt)*s\n        sdret = wgt*sdTangLowRisk \n        wgt_rf = 1-wgt\n        wgt_lo = wgt\n        wgt_hi = 0.0\n        # print('Weight low risk CAL: ', wgt)\n        if wgt > 1.0:\n            #2nd: efficient high risk CAL\n            wgt = (mnTangHighRisk - b) / (A * (sdTangHighRisk**2))\n            expret= wgt*mnTangHighRisk + (1-wgt)*b\n            sdret = wgt*sdTangHighRisk \n            wgt_rf = 1-wgt\n            wgt_lo = 0.0\n            wgt_hi = wgt\n            # print('Weight high risk CAL: ', wgt)\n            if wgt < 1.0:\n                #3rd: risky asset frontier\n                wgt = 1 #This is should be interpreted as total weight in risky assets.\n                # Method 1: solve analytically for utility-maximizing mix of efficient low and high risk portfolios\n                cov_hilo = portTangLowRisk.T @cov @ portTangHighRisk\n                wgt_lo = (mnTangLowRisk - mnTangHighRisk - A *(cov_hilo  - sdTangHighRisk**2))/(A*(sdTangLowRisk**2 + sdTangHighRisk**2 - 2*cov_hilo))\n                expret = wgt_lo*mnTangLowRisk + (1-wgt_lo)* mnTangHighRisk\n                sdret = np.sqrt((wgt_lo**2) *sdTangLowRisk**2 + ((1-wgt_lo)**2) * sdTangHighRisk**2 + 2*wgt_lo*(1-wgt_lo)*portTangLowRisk.T @cov @ portTangHighRisk)\n                wgt_hi = 1-wgt_lo\n                wgt_rf = 0.0\n\n                # #Method 2: calculate frontier manually and choose max utility\n                # eret_grid = np.linspace(mnTangLowRisk, mnTangHighRisk, 100)\n                # df = pd.DataFrame(dtype='float', columns=['mn','sd','u'],index=np.arange(0,100))\n                # for i,m in enumerate(eret_grid):\n                #     portFrontier = P.frontier(m)\n                #     df.loc[i,'mn'] = portFrontier @ mns\n                #     df.loc[i,'sd'] = np.sqrt(portFrontier @ cov @ portFrontier)\n                # df['u']  = df['mn'] - 0.5*A* df['sd']**2\n                # opt_mn = df.loc[df['u'].idxmax(),'mn']\n                # portFrontier = P.frontier(opt_mn)\n                # expret = portFrontier @ mns\n                # sdret  = np.sqrt(portFrontier @ cov @ portFrontier)\n                # print('Weight frontier: ', wgt)\n\n    u = expret - 0.5*A*sdret**2\n    return u, wgt, wgt_rf, wgt_lo, wgt_hi\n\n\n\ndef figtbl(mn1, mn2, sd1, sd2, c, rs, extra, raver1, raver2, asset1_name, asset2_name):\n    df = data(mn1, mn2, sd1, sd2, c, rs, extra)\n    \n    #Plot the portfolios of the two assets\n    trace1 = go.Scatter(\n        x=df[\"stdev\"],\n        y=df[\"mean\"],\n        mode=\"lines\",\n        # line={'color': green},\n        text=100 * df[\"wt1\"],\n        customdata=100 * df[\"wt2\"],\n        hovertemplate=asset1_name+\": %{text:.0f}%<br>\"+asset2_name+\": %{customdata:.0f}%<extra></extra>\",\n        line=dict(color=\"black\"),\n        name=\"Stock & Bond Frontier\"\n    )\n    \n    # Plot the two assets\n    df = df[df.wt1.isin([0, 1])]\n    df[\"text\"] = np.where(df.wt1 == 1, asset1_name, asset2_name)\n    trace2a = go.Scatter(\n        x=df[df.wt1==1][\"stdev\"],\n        y=df[df.wt1==1][\"mean\"],\n        mode=\"markers\",\n        text=df[df.wt1==1][\"text\"],\n        hovertemplate=\"%{text}<extra></extra>\",\n        marker=dict(size=10, color=\"orange\"),\n        name=asset1_name\n    )\n    trace2b = go.Scatter(\n        x=df[df.wt1==0][\"stdev\"],\n        y=df[df.wt1==0][\"mean\"],\n        mode=\"markers\",\n        text=df[df.wt1==0][\"text\"],\n        hovertemplate=\"%{text}<extra></extra>\",\n        marker=dict(size=10, color=\"red\"),\n        name=asset2_name\n    )\n\n    fig = go.Figure()\n    fig.add_trace(trace2a)\n    fig.add_trace(trace2b)\n    fig.add_trace(trace1)\n\n\n\n    def custom(string, ports,srTang,borrow_flag):\n        # borrow_flag=1 adds statement about \"relative to borrowing rate\"\n        cd = np.empty(shape=(len(ports), N+1, 1), dtype=float)\n        for i in range(N):\n            cd[:, i] = np.array([w[i] for w in ports]).reshape(-1, 1)\n        cd[:,N] = np.round(srTang,4)\n        # print(cd)\n        string += \"<br>\"\n        for i in range(N):\n            string += \"asset \" + str(i + 1)\n            string += \": %{customdata[\"\n            string += str(i)\n            string += \"]:.1%}<br>\"\n        if borrow_flag==1:\n            string += \"Sharpe ratio (relative to borrowing rate): %{customdata[\" +  str(N) + \"]:.4f}<br>\"    \n        else:\n            string += \"Sharpe ratio: %{customdata[\" +  str(N) + \"]:.4f}<br>\"\n        string += \"<extra></extra>\"\n        return string, cd  \n\n    # Plot the tangency portfolios\n    c = c / 100\n    rb = rs + extra     \n    rs = rs/100\n    rb = rb/100\n    mns = [mn1, mn2]\n    mns = np.array(mns) / 100\n    sds = [sd1, sd2]\n    sds = np.array(sds) / 100\n    cov = np.array(\n        [[sds[0] ** 2, sds[0] * sds[1] * c], [sds[0] * sds[1] * c, sds[1] ** 2]]\n    ).reshape(2, 2)\n    \n    Shorts = 0.0     \n    N = len(mns)\n    P = portfolio(mns, cov, Shorts)    \n    gmv = P.GMV @ mns\n    # print('GMV return is: ',gmv)\n    if (rs < gmv) or (not Shorts):\n        portTang = P.tangency(rs)\n        mnTang = portTang @ mns\n        if mnTang < np.max(mns):\n            sdTang = np.sqrt(portTang @ cov @ portTang)\n            srTang = (mnTang - rs)/sdTang\n            string0 = 'tangency portfolio' if rb == rs else 'efficient low risk portfolio' if rb != rs else 'tangency portfolio'\n            string, cd = custom(string0, [portTang], srTang,0)\n            trace = go.Scatter(\n                x=[sdTang],\n                y=[mnTang],\n                mode=\"markers\",\n                customdata=cd,\n                hovertemplate=string,\n                marker=dict(size=10, color=\"blue\"),\n                name=string0\n            )\n            fig.add_trace(trace)\n            \n            #Plot CAL (no leverage)\n            if rb==rs:\n                max_wgt = 4.0\n            else:\n                max_wgt = 1.0\n            grid, mns_cal, sds_cal, srs_cal, srb_cal = rf_plus_risky(mnTang*100, sdTang*100, rs*100,rb*100,0, max_wgt)\n            portlabel = 'tangency portfolio' if rb == rs else 'efficient low risk portfolio' if rb != rs else 'tangency portfolio'\n            string = \"wealth in \"+portlabel + \" = %{text:.0f}%<br>\" + \"Sharpe ratio: \" +  \"{:.4f}\".format(srTang) +\"<extra></extra>\"\n            trace5 = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string, \n                line=dict(color=\"blue\"),\n                name=\"CAL: \" + portlabel\n            )           \n            fig.add_trace(trace5)\n              \n            \n            \n\n    if (rb != rs) and ((gmv > rb) or (not Shorts)):\n        portTang = P.tangency(rb)\n        mnTang = portTang @ mns\n        if mnTang < np.max(mns):\n            sdTang = np.sqrt(portTang @ cov @ portTang)\n            srTang = (mnTang - rb)/sdTang\n            string = 'efficient high mean portfolio'\n            string, cd = custom(string, [portTang], srTang,1)\n            trace = go.Scatter(\n                x=[sdTang],\n                y=[mnTang],\n                mode=\"markers\",\n                customdata=cd,\n                hovertemplate=string,\n                marker=dict(size=10, color=\"blue\"),\n                name=\"efficient high mean portfolio\"\n            )\n            fig.add_trace(trace)\n            \n            #Plot CAL (with leverage)            \n            grid, mns_cal, sds_cal, srs_cal, srb_cal = rf_plus_risky(mnTang*100, sdTang*100, rs*100,rb*100, 1.0, 1.5)\n            string = \"wealth in efficient high mean portfolio = %{text:.0f}%<br>\" + \"Sharpe ratio (relative to borrowing rate): \" + \"{:.4f}\".format(srTang) +\"<extra></extra>\"\n            trace6 = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string,\n                line=dict(color=\"blue\"),\n                name = \"CAL: efficient high mean\"\n            )           \n            fig.add_trace(trace6)   \n \n\n\n    # Utility plot info\n    u1, wgt1, wgt_rf1, wgt_lo1, wgt_hi1 = opt_utility(mns, cov, Shorts, rs, rb, raver1)\n    u2, wgt2, wgt_rf2, wgt_lo2, wgt_hi2 = opt_utility(mns, cov, Shorts, rs, rb, raver2)\n    string1='Risk Aversion='+str(raver1)\n    string2='Risk Aversion='+str(raver2)\n    grid = np.linspace(0,1.4,100)\n    sds = [w*np.max(sds) for w in grid]\n    eret1 = [u1 + 0.5*raver1* (sd**2) for sd in sds]\n    eret2 = [u2 + 0.5*raver2* (sd**2) for sd in sds] \n    # df = pd.DataFrame(data={'Standard Deviation': sds, string1: U1, string2: U2})\n    string = \"indifference curve for <br> optimal utility for risk aversion of \"+str(np.round(raver1,1))+\"<extra></extra>\"\n    trace7 = go.Scatter(\n        x=sds, y=eret1, mode=\"lines\", hovertemplate=string, name=string1, line=dict(color=\"purple\",dash='dot'),\n    )  \n    string = \"indifference curve for <br> optimal utility for risk aversion of \"+str(np.round(raver2,1))+\"<extra></extra>\"\n    trace8 = go.Scatter(\n        x=sds, y=eret2, mode=\"lines\", hovertemplate=string, name=string2, line=dict(color=\"purple\"),\n    )  \n    fig.add_trace(trace7) \n    fig.add_trace(trace8) \n \n    \n    fig.layout.xaxis[\"title\"] = \"Standard Deviation\"\n    fig.layout.yaxis[\"title\"] = \"Expected Return\"\n    fig.update_xaxes(range=[0, 1.25 * df[\"stdev\"].max()])\n    fig.update_yaxes(range=[0, 1.25 * df[\"mean\"].max()])\n    fig.update_yaxes(tickformat=\".0%\")\n    fig.update_xaxes(tickformat=\".0%\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.5, xanchor=\"left\", x=0.6))\n    fig.show()\n\nfigtbl(mn_stock,mn_bond,sd_stock,sd_bond,corr,rs,extra,raver1, raver2, \"Stock\",\"Bond\")\n```\n\n::: {#fig-tangency-and-preferences .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"e47b5256-93ae-4df8-b60e-591355397c84\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e47b5256-93ae-4df8-b60e-591355397c84\")) {                    Plotly.newPlot(                        \"e47b5256-93ae-4df8-b60e-591355397c84\",                        [{\"hovertemplate\":\"%{text}<extra></extra>\",\"marker\":{\"color\":\"orange\",\"size\":10},\"mode\":\"markers\",\"name\":\"Stock\",\"text\":[\"Stock\"],\"x\":[0.15],\"y\":[0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"%{text}<extra></extra>\",\"marker\":{\"color\":\"red\",\"size\":10},\"mode\":\"markers\",\"name\":\"Bond\",\"text\":[\"Bond\"],\"x\":[0.035],\"y\":[0.035],\"type\":\"scatter\"},{\"customdata\":[120.0,119.0,118.0,117.0,115.99999999999999,114.99999999999999,114.00000000000001,112.99999999999999,112.00000000000001,111.00000000000001,110.00000000000001,109.00000000000001,108.0,107.0,106.0,105.0,104.0,103.0,102.0,101.0,100.0,99.0,98.0,97.0,96.0,95.0,94.0,93.0,92.0,91.0,90.0,89.0,88.0,87.0,86.0,85.0,84.00000000000001,83.0,82.0,81.0,80.0,79.0,78.0,77.0,76.0,75.0,74.0,73.0,72.0,71.0,70.0,69.0,68.0,67.0,65.99999999999999,64.99999999999999,63.99999999999999,62.999999999999986,62.000000000000014,61.00000000000001,60.00000000000001,59.00000000000001,58.00000000000001,57.00000000000001,56.00000000000001,55.00000000000001,54.0,53.0,52.0,51.0,50.0,49.0,48.0,47.0,46.0,44.99999999999999,43.99999999999999,42.99999999999999,41.99999999999999,40.99999999999999,39.99999999999999,38.99999999999999,37.999999999999986,36.999999999999986,36.00000000000001,35.00000000000001,34.00000000000001,33.00000000000001,32.00000000000001,31.000000000000007,30.000000000000004,29.000000000000004,28.000000000000004,27.0,26.0,25.0,24.0,23.0,21.999999999999996,20.999999999999996,19.999999999999996,18.999999999999993,17.999999999999993,16.999999999999993,15.999999999999993,14.999999999999991,13.99999999999999,12.99999999999999,11.99999999999999,10.999999999999988,9.999999999999986,8.999999999999986,7.999999999999985,6.999999999999984,5.999999999999983,4.999999999999982,4.0000000000000036,3.0000000000000027,2.0000000000000018,1.0000000000000009,0.0],\"hovertemplate\":\"Stock: %{text:.0f}%<br>Bond: %{customdata:.0f}%<extra></extra>\",\"line\":{\"color\":\"black\"},\"mode\":\"lines\",\"name\":\"Stock & Bond Frontier\",\"text\":[-20.0,-19.0,-18.000000000000004,-17.0,-16.0,-15.000000000000002,-14.000000000000002,-13.0,-12.000000000000002,-11.000000000000002,-10.0,-9.000000000000002,-8.000000000000002,-7.000000000000001,-6.0,-5.000000000000002,-4.000000000000001,-3.0,-2.0000000000000018,-1.0000000000000009,0.0,0.9999999999999981,1.9999999999999991,3.0,3.9999999999999982,4.999999999999999,6.0,7.000000000000001,8.000000000000002,8.999999999999996,9.999999999999998,10.999999999999998,12.0,13.0,14.000000000000002,15.000000000000002,15.999999999999998,17.0,18.0,19.0,20.0,21.000000000000004,21.999999999999996,23.0,24.0,25.0,26.0,27.0,27.999999999999996,28.999999999999996,30.0,31.0,32.0,33.0,34.0,35.0,36.00000000000001,37.00000000000001,37.99999999999999,38.99999999999999,40.0,41.0,42.0,43.0,44.0,45.0,46.0,47.0,48.00000000000001,49.00000000000001,50.0,51.0,52.0,53.0,54.0,55.00000000000001,56.00000000000001,57.00000000000001,58.00000000000001,59.00000000000001,60.00000000000001,61.00000000000001,62.000000000000014,63.000000000000014,63.99999999999999,64.99999999999999,65.99999999999999,67.0,68.0,69.0,70.0,71.0,72.0,73.0,74.0,75.0,76.0,77.0,78.0,79.0,80.0,81.0,82.0,83.0,84.00000000000001,85.00000000000001,86.00000000000001,87.00000000000001,88.00000000000001,89.00000000000001,90.00000000000001,91.00000000000001,92.00000000000001,93.00000000000001,94.00000000000001,95.00000000000001,96.0,97.0,98.0,99.0,100.0],\"x\":[0.05282045058497703,0.05163017528538906,0.05045988505734036,0.049311002828983305,0.048185059925250684,0.047083702063452915,0.04600869483043396,0.04496192833942957,0.04394542069431126,0.04296131981212868,0.04201190307520001,0.041099574207040156,0.04022685670046816,0.039396383082714585,0.03861087929586686,0.037873143518857795,0.0371860188780676,0.03655235970494928,0.035974991313411045,0.03545666368963668,0.035,0.034607441396324,0.034281190177705326,0.03402315388085002,0.033834893231692045,0.03371757701852254,0.03367194678066594,0.03369829372535055,0.033796449517663835,0.033965791614505324,0.03420526275297414,0.03451340319354207,0.034888393485513196,0.035328104959083215,0.03583015489779524,0.03639196339853073,0.03701080923189873,0.03768388249636706,0.03840833242930497,0.03918130931962331,0.04,0.04086165684354955,0.04176362053270765,0.04270333710613258,0.04367836993295422,0.0446864073292987,0.04572526653831556,0.04679289475978164,0.04788736785416379,0.0490068872710765,0.05014977567247933,0.05131447164299756,0.052499523807364196,0.053703584610340485,0.05492540395845988,0.056163822875584246,0.05741776728504863,0.058686241999296576,0.05996832497243857,0.06126316185114836,0.06256996084384263,0.06388798791635247,0.06521656231357185,0.06655505240024982,0.06790287180966649,0.06925947588597534,0.07062435840416534,0.07199704855061768,0.07337710814688735,0.07476412909945518,0.07615773105863909,0.07755755927051858,0.07896328260653808,0.08037459175635046,0.08179119757039874,0.08321282953968097,0.0846392344010743,0.08607017485749636,0.08750542840304254,0.08894478624405146,0.09038805230781335,0.0918350423313454,0.09328558302331612,0.09473951129280753,0.0961966735391614,0.0976569249976672,0.0991201291363162,0.10058615709927483,0.10205488719311778,0.10352620441221631,0.105,0.1064761710431024,0.10795462009566797,0.10943525483133851,0.11091798772065782,0.11240273573183172,0.1138894200529619,0.11537796583403609,0.11686830194710626,0.11836036076322173,0.11985407794480754,0.12134939225228943,0.1228462453638694,0.12434458170744715,0.12584434830376773,0.12734549461995115,0.12884797243263088,0.13035173569998984,0.1318567404420419,0.13336294462855866,0.13487030807409023,0.13637879233957165,0.13788836064004822,0.13939897775808835,0.14091060996248653,0.14242322493189097,0.14393679168301618,0.14545128050312928,0.14696666288651994,0.1484829114746879,0.15],\"y\":[0.03,0.03025,0.0305,0.030749999999999996,0.030999999999999996,0.03124999999999999,0.0315,0.03175,0.032,0.03225,0.0325,0.03275,0.033,0.03325,0.0335,0.03375,0.034,0.034249999999999996,0.0345,0.03475,0.035,0.03525,0.0355,0.035750000000000004,0.036,0.03625,0.0365,0.03675,0.037,0.03725,0.0375,0.037750000000000006,0.038,0.03825,0.0385,0.03875,0.03900000000000001,0.03925,0.0395,0.03975,0.04,0.04025,0.0405,0.04075,0.040999999999999995,0.04125,0.0415,0.041749999999999995,0.041999999999999996,0.042249999999999996,0.0425,0.04275,0.043,0.04324999999999999,0.0435,0.04375,0.044000000000000004,0.04425,0.044500000000000005,0.04475,0.045,0.045250000000000005,0.045500000000000006,0.04575,0.046000000000000006,0.04625,0.04650000000000001,0.04675000000000001,0.047,0.04725000000000001,0.0475,0.04775,0.048,0.04825,0.048499999999999995,0.04875,0.049,0.04925000000000001,0.0495,0.049749999999999996,0.05,0.05025,0.05050000000000001,0.05075,0.051,0.05125,0.051500000000000004,0.05175,0.052000000000000005,0.05225,0.0525,0.052750000000000005,0.053000000000000005,0.05325,0.0535,0.05375,0.054000000000000006,0.05425,0.05449999999999999,0.05474999999999999,0.05500000000000001,0.05525,0.0555,0.05575,0.05600000000000001,0.05625,0.056499999999999995,0.05675000000000001,0.05700000000000001,0.05725,0.0575,0.05775,0.05800000000000001,0.05825,0.058499999999999996,0.05875,0.059000000000000004,0.059250000000000004,0.059500000000000004,0.05975,0.06],\"type\":\"scatter\"},{\"customdata\":[[[0.13202804395833206],[0.867971956041668],[0.5166]]],\"hovertemplate\":\"tangency portfolio<br>asset 1: %{customdata[0]:.1%}<br>asset 2: %{customdata[1]:.1%}<br>Sharpe ratio: %{customdata[2]:.4f}<br><extra></extra>\",\"marker\":{\"color\":\"blue\",\"size\":10},\"mode\":\"markers\",\"name\":\"tangency portfolio\",\"x\":[0.03542496472428655],\"y\":[0.038300701098958306],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in tangency portfolio = %{text:.0f}%<br>Sharpe ratio: 0.5166<extra></extra>\",\"line\":{\"color\":\"blue\"},\"mode\":\"lines\",\"name\":\"CAL: tangency portfolio\",\"text\":[0.0,2.0,4.0,6.0,8.0,10.0,12.0,14.000000000000002,16.0,18.0,20.0,22.0,24.0,26.0,28.000000000000004,30.0,32.0,34.0,36.0,38.0,40.0,42.0,44.0,46.0,48.0,50.0,52.0,54.0,56.00000000000001,57.99999999999999,60.0,62.0,64.0,66.0,68.0,70.0,72.0,74.0,76.0,78.0,80.0,82.0,84.0,86.0,88.0,90.0,92.0,94.0,96.0,98.0,100.0,102.0,104.0,106.0,108.0,110.00000000000001,112.00000000000001,114.00000000000001,115.99999999999999,118.0,120.0,122.0,124.0,126.0,128.0,130.0,132.0,134.0,136.0,138.0,140.0,142.0,144.0,146.0,148.0,150.0,152.0,154.0,156.0,158.0,160.0,162.0,164.0,166.0,168.0,170.0,172.0,174.0,176.0,178.0,180.0,182.0,184.0,186.0,188.0,190.0,192.0,194.0,196.0,198.0,200.0,202.0,204.0,206.0,208.0,210.0,212.0,214.0,216.0,218.00000000000003,220.00000000000003,222.00000000000003,224.00000000000003,226.00000000000003,228.00000000000003,230.00000000000003,231.99999999999997,234.0,236.0,238.0,240.0,242.0,244.0,246.0,248.0,250.0,252.0,254.0,256.0,258.0,260.0,262.0,264.0,266.0,268.0,270.0,272.0,274.0,276.0,278.0,280.0,282.0,284.0,286.0,288.0,290.0,292.0,294.0,296.0,298.0,300.0,302.0,304.0,306.0,308.0,310.0,312.0,314.0,316.0,318.0,320.0,322.0,324.0,326.0,328.0,330.0,332.0,334.0,336.0,338.0,340.0,342.0,344.0,346.0,348.0,350.0,352.0,354.0,356.0,358.0,360.0,362.0,364.0,366.0,368.0,370.0,372.0,374.0,376.0,378.0,380.0,382.0,384.0,386.0,388.0,390.0,392.0,394.0,396.0,398.0,400.0],\"x\":[0.0,0.0007084992944857311,0.0014169985889714621,0.002125497883457193,0.0028339971779429243,0.0035424964724286552,0.004250995766914386,0.004959495061400117,0.0056679943558858486,0.006376493650371579,0.0070849929448573105,0.007793492239343041,0.008501991533828772,0.009210490828314504,0.009918990122800234,0.010627489417285965,0.011335988711771697,0.012044488006257428,0.012752987300743158,0.013461486595228889,0.014169985889714621,0.014878485184200351,0.015586984478686082,0.016295483773171814,0.017003983067657543,0.017712482362143275,0.018420981656629008,0.01912948095111474,0.01983798024560047,0.020546479540086197,0.02125497883457193,0.021963478129057662,0.022671977423543394,0.023380476718029123,0.024088976012514855,0.024797475307000588,0.025505974601486316,0.02621447389597205,0.026922973190457777,0.02763147248494351,0.028339971779429242,0.029048471073914974,0.029756970368400703,0.030465469662886432,0.031173968957372164,0.0318824682518579,0.03259096754634363,0.03329946684082936,0.034007966135315086,0.03471646542980082,0.03542496472428655,0.03613346401877228,0.036841963313258015,0.037550462607743744,0.03825896190222948,0.03896746119671521,0.03967596049120094,0.04038445978568667,0.041092959080172395,0.04180145837465813,0.04250995766914386,0.04321845696362959,0.043926956258115324,0.04463545555260105,0.04534395484708679,0.04605245414157252,0.046760953436058246,0.04746945273054398,0.04817795202502971,0.048886451319515446,0.049594950614001175,0.0503034499084869,0.05101194920297263,0.05172044849745836,0.0524289477919441,0.053137447086429826,0.053845946380915555,0.05455444567540129,0.05526294496988702,0.055971444264372755,0.056679943558858484,0.05738844285334421,0.05809694214782995,0.05880544144231568,0.059513940736801406,0.060222440031287135,0.060930939325772863,0.0616394386202586,0.06234793791474433,0.06305643720923006,0.0637649365037158,0.06447343579820153,0.06518193509268726,0.06589043438717299,0.06659893368165871,0.06730743297614446,0.06801593227063017,0.0687244315651159,0.06943293085960164,0.07014143015408737,0.0708499294485731,0.07155842874305883,0.07226692803754456,0.0729754273320303,0.07368392662651603,0.07439242592100176,0.07510092521548749,0.07580942450997322,0.07651792380445896,0.07722642309894469,0.07793492239343042,0.07864342168791615,0.07935192098240187,0.08006042027688762,0.08076891957137335,0.08147741886585907,0.08218591816034479,0.08289441745483052,0.08360291674931626,0.08431141604380199,0.08501991533828772,0.08572841463277345,0.08643691392725918,0.08714541322174492,0.08785391251623065,0.08856241181071638,0.0892709111052021,0.08997941039968783,0.09068790969417358,0.0913964089886593,0.09210490828314503,0.09281340757763076,0.09352190687211649,0.09423040616660223,0.09493890546108796,0.09564740475557369,0.09635590405005942,0.09706440334454515,0.09777290263903089,0.09848140193351662,0.09918990122800235,0.09989840052248807,0.1006068998169738,0.10131539911145954,0.10202389840594527,0.102732397700431,0.10344089699491672,0.10414939628940245,0.1048578955838882,0.10556639487837392,0.10627489417285965,0.10698339346734538,0.10769189276183111,0.10840039205631685,0.10910889135080258,0.10981739064528831,0.11052588993977404,0.11123438923425977,0.11194288852874551,0.11265138782323124,0.11335988711771697,0.1140683864122027,0.11477688570668843,0.11548538500117417,0.1161938842956599,0.11690238359014563,0.11761088288463135,0.11831938217911707,0.11902788147360281,0.11973638076808854,0.12044488006257427,0.12115337935706,0.12186187865154573,0.12257037794603147,0.1232788772405172,0.12398737653500293,0.12469587582948866,0.1254043751239744,0.1261128744184601,0.12682137371294586,0.1275298730074316,0.1282383723019173,0.12894687159640306,0.12965537089088877,0.13036387018537451,0.13107236947986026,0.13178086877434597,0.13248936806883171,0.13319786736331743,0.13390636665780317,0.13461486595228891,0.13532336524677463,0.13603186454126034,0.1367403638357461,0.1374488631302318,0.13815736242471754,0.1388658617192033,0.139574361013689,0.14028286030817474,0.14099135960266046,0.1416998588971462],\"y\":[0.02,0.020366014021979167,0.020732028043958333,0.0210980420659375,0.021464056087916666,0.021830070109895832,0.022196084131875,0.022562098153854165,0.022928112175833328,0.023294126197812494,0.02366014021979166,0.024026154241770827,0.024392168263749993,0.02475818228572916,0.025124196307708326,0.025490210329687492,0.025856224351666658,0.026222238373645824,0.02658825239562499,0.026954266417604157,0.027320280439583323,0.02768629446156249,0.028052308483541656,0.028418322505520822,0.02878433652749999,0.029150350549479155,0.02951636457145832,0.029882378593437488,0.030248392615416654,0.030614406637395817,0.030980420659374983,0.031346434681354146,0.03171244870333331,0.03207846272531248,0.032444476747291645,0.03281049076927082,0.03317650479124998,0.033542518813229144,0.03390853283520831,0.03427454685718748,0.03464056087916664,0.03500657490114581,0.035372588923124976,0.03573860294510414,0.03610461696708331,0.036470630989062475,0.03683664501104164,0.03720265903302081,0.037568673054999974,0.03793468707697914,0.038300701098958306,0.03866671512093747,0.03903272914291664,0.039398743164895805,0.03976475718687497,0.04013077120885414,0.040496785230833304,0.04086279925281247,0.04122881327479164,0.0415948272967708,0.04196084131874997,0.042326855340729136,0.0426928693627083,0.04305888338468747,0.043424897406666635,0.0437909114286458,0.04415692545062497,0.044522939472604134,0.0448889534945833,0.045254967516562467,0.04562098153854163,0.04598699556052079,0.04635300958249996,0.046719023604479125,0.04708503762645829,0.047451051648437464,0.04781706567041663,0.0481830796923958,0.04854909371437496,0.04891510773635413,0.049281121758333296,0.04964713578031246,0.05001314980229163,0.050379163824270795,0.050745177846249954,0.05111119186822912,0.05147720589020828,0.051843219912187447,0.05220923393416661,0.05257524795614578,0.052941261978124945,0.05330727600010411,0.05367329002208328,0.054039304044062444,0.05440531806604161,0.05477133208802079,0.05513734610999994,0.05550336013197911,0.055869374153958276,0.05623538817593744,0.05660140219791661,0.056967416219895775,0.05733343024187494,0.05769944426385411,0.058065458285833274,0.05843147230781244,0.05879748632979161,0.05916350035177077,0.05952951437374994,0.059895528395729106,0.06026154241770827,0.06062755643968744,0.060993570461666605,0.06135958448364577,0.06172559850562494,0.062091612527604104,0.06245762654958327,0.06282364057156244,0.0631896545935416,0.06355566861552077,0.06392168263749994,0.0642876966594791,0.06465371068145827,0.06501972470343743,0.0653857387254166,0.06575175274739577,0.06611776676937493,0.0664837807913541,0.06684979481333327,0.06721580883531243,0.0675818228572916,0.06794783687927076,0.06831385090124993,0.0686798649232291,0.06904587894520826,0.06941189296718743,0.0697779069891666,0.07014392101114576,0.07050993503312493,0.0708759490551041,0.07124196307708326,0.07160797709906241,0.07197399112104158,0.07234000514302075,0.07270601916499991,0.07307203318697908,0.07343804720895825,0.07380406123093741,0.07417007525291658,0.07453608927489574,0.07490210329687493,0.07526811731885409,0.07563413134083326,0.07600014536281242,0.07636615938479159,0.07673217340677076,0.07709818742874992,0.07746420145072909,0.07783021547270826,0.07819622949468742,0.07856224351666659,0.07892825753864575,0.07929427156062492,0.07966028558260409,0.08002629960458325,0.08039231362656242,0.08075832764854159,0.08112434167052074,0.0814903556924999,0.08185636971447907,0.08222238373645824,0.0825883977584374,0.08295441178041657,0.08332042580239574,0.0836864398243749,0.08405245384635407,0.08441846786833324,0.0847844818903124,0.08515049591229157,0.08551650993427073,0.0858825239562499,0.08624853797822907,0.08661455200020823,0.0869805660221874,0.08734658004416657,0.08771259406614573,0.0880786080881249,0.08844462211010407,0.08881063613208323,0.0891766501540624,0.08954266417604158,0.08990867819802074,0.0902746922199999,0.09064070624197906,0.09100672026395823,0.0913727342859374,0.09173874830791656,0.09210476232989573,0.0924707763518749,0.09283679037385406,0.09320280439583323],\"type\":\"scatter\"},{\"hovertemplate\":\"indifference curve for <br> optimal utility for risk aversion of 6<extra></extra>\",\"line\":{\"color\":\"purple\",\"dash\":\"dot\"},\"mode\":\"lines\",\"name\":\"Risk Aversion=6\",\"x\":[0.0,0.002121212121212121,0.004242424242424242,0.006363636363636363,0.008484848484848484,0.010606060606060605,0.012727272727272726,0.014848484848484847,0.016969696969696968,0.01909090909090909,0.02121212121212121,0.023333333333333334,0.025454545454545452,0.027575757575757573,0.029696969696969694,0.031818181818181815,0.033939393939393936,0.03606060606060606,0.03818181818181818,0.040303030303030306,0.04242424242424242,0.04454545454545454,0.04666666666666667,0.04878787878787878,0.050909090909090904,0.05303030303030303,0.055151515151515146,0.05727272727272727,0.05939393939393939,0.06151515151515151,0.06363636363636363,0.06575757575757575,0.06787878787878787,0.06999999999999999,0.07212121212121211,0.07424242424242423,0.07636363636363636,0.07848484848484848,0.08060606060606061,0.08272727272727272,0.08484848484848484,0.08696969696969696,0.08909090909090908,0.0912121212121212,0.09333333333333334,0.09545454545454544,0.09757575757575757,0.09969696969696969,0.10181818181818181,0.10393939393939393,0.10606060606060606,0.10818181818181817,0.11030303030303029,0.11242424242424241,0.11454545454545453,0.11666666666666664,0.11878787878787878,0.1209090909090909,0.12303030303030302,0.12515151515151512,0.12727272727272726,0.12939393939393937,0.1315151515151515,0.13363636363636364,0.13575757575757574,0.13787878787878785,0.13999999999999999,0.14212121212121212,0.14424242424242423,0.14636363636363636,0.14848484848484847,0.1506060606060606,0.1527272727272727,0.15484848484848485,0.15696969696969695,0.1590909090909091,0.16121212121212122,0.1633333333333333,0.16545454545454544,0.16757575757575754,0.16969696969696968,0.1718181818181818,0.17393939393939392,0.17606060606060606,0.17818181818181816,0.1803030303030303,0.1824242424242424,0.18454545454545454,0.18666666666666668,0.18878787878787875,0.1909090909090909,0.193030303030303,0.19515151515151513,0.19727272727272724,0.19939393939393937,0.2015151515151515,0.20363636363636362,0.20575757575757575,0.20787878787878786,0.21],\"y\":[0.042240029385618855,0.042253528008208384,0.04229402387597698,0.04236151698892464,0.042456007347051364,0.04257749495035715,0.042725979798842,0.042901461892505904,0.043103941231348884,0.04333341781537092,0.04358989164457202,0.04387336271895219,0.044183831038511416,0.04452129660324971,0.04488575941316706,0.045277219468263484,0.045695676768538966,0.04614113131399351,0.04661358310462712,0.04711303214043979,0.04763947842143153,0.04819292194760232,0.04877336271895219,0.04938080073548111,0.0500152359971891,0.05067666850407616,0.05136509825614227,0.05208052525338745,0.05282294949581169,0.053592370983414996,0.054388789716197365,0.0552122056941588,0.056062618917299294,0.05694002938561885,0.05784443709911748,0.05877584205779516,0.059734244261651914,0.06071964371068772,0.0617320404049026,0.06277143434429654,0.06383782552886955,0.06493121395862161,0.06605159963355273,0.06719898255366293,0.0683733627189522,0.0695747401294205,0.07080311478506789,0.07205848668589433,0.07334085583189984,0.07465022222308441,0.07598658585944806,0.07734994674099074,0.07874030486771251,0.08015766023961333,0.08160201285669323,0.08307336271895217,0.0845717098263902,0.08609705417900727,0.08764939577680342,0.08922873461977862,0.0908350707079329,0.09246840404126622,0.09412873461977862,0.0958160624434701,0.09753038751234061,0.09927170982639018,0.10104002938561885,0.10283534619002657,0.10465766023961334,0.10650697153437919,0.10838328007432407,0.11028658585944805,0.11221688888975108,0.11417418916523317,0.11615848668589432,0.11816978145173455,0.12020807346275385,0.12227336271895216,0.12436564922032958,0.12648493296688604,0.1286312139586216,0.1308044921955362,0.13300476767762986,0.1352320404049026,0.13748631037735437,0.13976757759498526,0.14207584205779514,0.14441110376578414,0.1467733627189522,0.14916261891729926,0.15157887236082546,0.15402212304953067,0.15649237098341495,0.1589896161624783,0.16151385858672074,0.16406509825614224,0.1666433351707428,0.16924856933052243,0.1718808007354811,0.17454002938561883],\"type\":\"scatter\"},{\"hovertemplate\":\"indifference curve for <br> optimal utility for risk aversion of 10<extra></extra>\",\"line\":{\"color\":\"purple\"},\"mode\":\"lines\",\"name\":\"Risk Aversion=10\",\"x\":[0.0,0.002121212121212121,0.004242424242424242,0.006363636363636363,0.008484848484848484,0.010606060606060605,0.012727272727272726,0.014848484848484847,0.016969696969696968,0.01909090909090909,0.02121212121212121,0.023333333333333334,0.025454545454545452,0.027575757575757573,0.029696969696969694,0.031818181818181815,0.033939393939393936,0.03606060606060606,0.03818181818181818,0.040303030303030306,0.04242424242424242,0.04454545454545454,0.04666666666666667,0.04878787878787878,0.050909090909090904,0.05303030303030303,0.055151515151515146,0.05727272727272727,0.05939393939393939,0.06151515151515151,0.06363636363636363,0.06575757575757575,0.06787878787878787,0.06999999999999999,0.07212121212121211,0.07424242424242423,0.07636363636363636,0.07848484848484848,0.08060606060606061,0.08272727272727272,0.08484848484848484,0.08696969696969696,0.08909090909090908,0.0912121212121212,0.09333333333333334,0.09545454545454544,0.09757575757575757,0.09969696969696969,0.10181818181818181,0.10393939393939393,0.10606060606060606,0.10818181818181817,0.11030303030303029,0.11242424242424241,0.11454545454545453,0.11666666666666664,0.11878787878787878,0.1209090909090909,0.12303030303030302,0.12515151515151512,0.12727272727272726,0.12939393939393937,0.1315151515151515,0.13363636363636364,0.13575757575757574,0.13787878787878785,0.13999999999999999,0.14212121212121212,0.14424242424242423,0.14636363636363636,0.14848484848484847,0.1506060606060606,0.1527272727272727,0.15484848484848485,0.15696969696969695,0.1590909090909091,0.16121212121212122,0.1633333333333333,0.16545454545454544,0.16757575757575754,0.16969696969696968,0.1718181818181818,0.17393939393939392,0.17606060606060606,0.17818181818181816,0.1803030303030303,0.1824242424242424,0.18454545454545454,0.18666666666666668,0.18878787878787875,0.1909090909090909,0.193030303030303,0.19515151515151513,0.19727272727272724,0.19939393939393937,0.2015151515151515,0.20363636363636362,0.20575757575757575,0.20787878787878786,0.21],\"y\":[0.03334401763137132,0.03336651533568721,0.03343400844863487,0.03354649697021429,0.0337039809004255,0.03390646023926847,0.03415393498674322,0.03444640514284974,0.03478387070758803,0.0351663316809581,0.03559378806295993,0.03606623985359354,0.03658368705285892,0.037146129660756075,0.037753567677285,0.0384060011024457,0.039103429936238165,0.03984585417866241,0.04063327382971842,0.041465688889406216,0.042343099357725775,0.0432655052346771,0.04423290652026021,0.04524530321447508,0.04630269531732173,0.047405082828800155,0.04855246574891034,0.04974484407765231,0.05098221781502604,0.052264586961031555,0.05359195151566883,0.05496431147893789,0.056381666850838716,0.057844017631371314,0.059351363820535685,0.06090370541833183,0.06250104242475975,0.06414337483981944,0.0658307026635109,0.06756302589583413,0.06934034453678913,0.07116265858637591,0.07302996804459444,0.07494227291144477,0.07689957318692689,0.07890186887104073,0.08094915996378636,0.08304144646516377,0.08517872837517296,0.08736100569381391,0.08958827842108666,0.09186054655699114,0.09417781010152741,0.09654006905469546,0.09894732341649527,0.10139957318692684,0.10389681836599021,0.10643905895368536,0.10902629495001226,0.11165852635497092,0.11433575316856137,0.11705797539078358,0.11982519302163759,0.12263740606112339,0.1254946145092409,0.1283968183659902,0.1313440176313713,0.13433621230538417,0.13737340238802878,0.1404555878793052,0.14358276877921336,0.14675494508775333,0.149972116804925,0.15323428393072852,0.15654144646516377,0.15989360440823083,0.16329075775992966,0.16673290652026015,0.17022005068922252,0.17375219026681663,0.17732932525304254,0.1809514556479002,0.18461858145138965,0.1883307026635109,0.19208781928426383,0.19588993131364865,0.19973703875166512,0.20362914159831347,0.20756623985359357,0.21154833351750535,0.21557542259004897,0.21964750707122432,0.2237645869610315,0.22792666225947042,0.23213373296654113,0.23638579908224364,0.2406828606065779,0.24502491753954395,0.2494119698811417,0.2538440176313713],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"title\":{\"text\":\"Standard Deviation\"},\"range\":[0,0.1875],\"tickformat\":\".0%\"},\"yaxis\":{\"title\":{\"text\":\"Expected Return\"},\"range\":[0,0.075],\"tickformat\":\".0%\"},\"legend\":{\"yanchor\":\"top\",\"y\":0.5,\"xanchor\":\"left\",\"x\":0.6}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('e47b5256-93ae-4df8-b60e-591355397c84');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nPreferences and Efficient Portfolios\n:::\n:::\n\n\nAnother way to see how risk aversion affects capital allocation is to plot the weight in the tangency portfolio as a function of risk aversion, as in @fig-tangency-cal-allocation-by-riskaversion.  Higher risk aversion translates into lower holdings of the tangency portfolio.  For the assumed inputs, investors with risk aversions below about 15 would choose a levered position in the tangency portfolio.  That is, they would find it optimal to borrow money and invest it and their initial investment wealth in the tangency portfolio.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\nmn_stock = 6\nmn_bond  = 3.5\nsd_stock = 15\nsd_bond  = 3.5\ncorr = -5\n\nrs = 2\nextra = 0\n\nraver1 = 2\nraver2 = 5\n\ndef data(mn1, mn2, sd1, sd2, c, rs, extra):\n    c = c / 100\n    rb = rs + extra   \n    rs = rs/100\n    rb = rb/100\n    mns = [mn1, mn2]\n    sds = [sd1, sd2]\n    grid = np.linspace(0, 1, 101)\n    ports = [np.array([w, 1 - w]) for w in grid]\n    means = [p.T @ np.array(mns) for p in ports]\n    df = pd.DataFrame(means)\n    df.columns = [\"mean\"]\n    cov = np.array(\n        [[sds[0] ** 2, sds[0] * sds[1] * c], [sds[0] * sds[1] * c, sds[1] ** 2]]\n    ).reshape(2, 2)\n    df[\"stdev\"] = [np.sqrt(p.T @ cov @ p) for p in ports]\n    df[\"wt1\"] = grid\n    df[\"wt2\"] = 1 - df.wt1\n    for col in [\"mean\", \"stdev\"]:\n        df[col] = df[col] / 100\n    df[\"sr_s\"]= (df[\"mean\"] - rs)/df[\"stdev\"]\n    df[\"sr_b\"]= (df[\"mean\"] - rb)/df[\"stdev\"]\n   \n    return df\n\ndef rf_plus_risky(mn, sd, rs, rb, w_min, w_max):\n    mn /= 100\n    sd /= 100\n    rs /= 100\n    rb /= 100\n    grid = np.linspace(w_min, w_max, 201)\n    mns = [(rs + w * (mn - rs) if w <= 1 else rb + w * (mn - rb)) for w in grid]\n    sds = [w * sd for w in grid]\n    srs = (mn - rs)/sd\n    srb = (mn - rb)/sd\n    return grid, mns, sds, srs, srb\n\ndef opt_utility(mns, cov, Shorts, s, b, A):\n    # P is a portfolio object based on expected returns, covariance matrix, and shorts\n    P = portfolio(mns, cov, Shorts) \n    gmv = P.GMV @ mns\n    if s==b:\n        #tangency exp ret and sd\n        if (s < gmv) or (not Shorts):\n            portTang = P.tangency(s)\n            mnTang = portTang @ mns\n            if mnTang < np.max(mns):\n                sdTang = np.sqrt(portTang @ cov @ portTang)\n\n                #optimal weight in tangency based on risk-aversion\n                wgt = (mnTang - s) / (A * (sdTang**2))\n                expret= wgt*mnTang + (1-wgt)*s\n                sdret = wgt*sdTang \n                wgt_rf = 1-wgt\n                wgt_lo = wgt\n                wgt_hi = 0.0\n    else:\n        #efficient low-risk portfolio\n        if (s < gmv) or (not Shorts):\n            portTangLowRisk = P.tangency(s)\n            mnTangLowRisk = portTangLowRisk @ mns\n            if mnTangLowRisk < np.max(mns):\n                sdTangLowRisk = np.sqrt(portTangLowRisk @ cov @ portTangLowRisk)\n\n        #efficient high-risk portfolio\n        if ((b<gmv) or (not Shorts)):\n            portTangHighRisk = P.tangency(b)\n            mnTangHighRisk = portTangHighRisk @ mns\n            if mnTangHighRisk < np.max(mns):\n                sdTangHighRisk = np.sqrt(portTangHighRisk @ cov @ portTangHighRisk)\n\n        #1st: efficient low risk CAL\n        wgt = (mnTangLowRisk - s) / (A * (sdTangLowRisk**2))\n        expret= wgt*mnTangLowRisk + (1-wgt)*s\n        sdret = wgt*sdTangLowRisk \n        wgt_rf = 1-wgt\n        wgt_lo = wgt\n        wgt_hi = 0.0\n        # print('Weight low risk CAL: ', wgt)\n        if wgt > 1.0:\n            #2nd: efficient high risk CAL\n            wgt = (mnTangHighRisk - b) / (A * (sdTangHighRisk**2))\n            expret= wgt*mnTangHighRisk + (1-wgt)*b\n            sdret = wgt*sdTangHighRisk \n            wgt_rf = 1-wgt\n            wgt_lo = 0.0\n            wgt_hi = wgt\n            # print('Weight high risk CAL: ', wgt)\n            if wgt < 1.0:\n                #3rd: risky asset frontier\n                wgt = 1 #This is should be interpreted as total weight in risky assets.\n                # Method 1: solve analytically for utility-maximizing mix of efficient low and high risk portfolios\n                cov_hilo = portTangLowRisk.T @cov @ portTangHighRisk\n                wgt_lo = (mnTangLowRisk - mnTangHighRisk - A *(cov_hilo  - sdTangHighRisk**2))/(A*(sdTangLowRisk**2 + sdTangHighRisk**2 - 2*cov_hilo))\n                expret = wgt_lo*mnTangLowRisk + (1-wgt_lo)* mnTangHighRisk\n                sdret = np.sqrt((wgt_lo**2) *sdTangLowRisk**2 + ((1-wgt_lo)**2) * sdTangHighRisk**2 + 2*wgt_lo*(1-wgt_lo)*portTangLowRisk.T @cov @ portTangHighRisk)\n                wgt_hi = 1-wgt_lo\n                wgt_rf = 0.0\n\n                # #Method 2: calculate frontier manually and choose max utility\n                # eret_grid = np.linspace(mnTangLowRisk, mnTangHighRisk, 100)\n                # df = pd.DataFrame(dtype='float', columns=['mn','sd','u'],index=np.arange(0,100))\n                # for i,m in enumerate(eret_grid):\n                #     portFrontier = P.frontier(m)\n                #     df.loc[i,'mn'] = portFrontier @ mns\n                #     df.loc[i,'sd'] = np.sqrt(portFrontier @ cov @ portFrontier)\n                # df['u']  = df['mn'] - 0.5*A* df['sd']**2\n                # opt_mn = df.loc[df['u'].idxmax(),'mn']\n                # portFrontier = P.frontier(opt_mn)\n                # expret = portFrontier @ mns\n                # sdret  = np.sqrt(portFrontier @ cov @ portFrontier)\n                # print('Weight frontier: ', wgt)\n\n    u = expret - 0.5*A*sdret**2\n    return u, wgt, wgt_rf, wgt_lo, wgt_hi\n\n\n\ndef figtbl(mn1, mn2, sd1, sd2, c, rs, extra, raver1, raver2, asset1_name, asset2_name):\n    df = data(mn1, mn2, sd1, sd2, c, rs, extra)\n    \n    #Plot the portfolios of the two assets\n    trace1 = go.Scatter(\n        x=df[\"stdev\"],\n        y=df[\"mean\"],\n        mode=\"lines\",\n        # line={'color': green},\n        text=100 * df[\"wt1\"],\n        customdata=100 * df[\"wt2\"],\n        hovertemplate=asset1_name+\": %{text:.0f}%<br>\"+asset2_name+\": %{customdata:.0f}%<extra></extra>\",\n        line=dict(color=\"black\"),\n        name=\"Stock & Bond Frontier\"\n    )\n    \n    # Plot the two assets\n    df = df[df.wt1.isin([0, 1])]\n    df[\"text\"] = np.where(df.wt1 == 1, asset1_name, asset2_name)\n    trace2a = go.Scatter(\n        x=df[df.wt1==1][\"stdev\"],\n        y=df[df.wt1==1][\"mean\"],\n        mode=\"markers\",\n        text=df[df.wt1==1][\"text\"],\n        hovertemplate=\"%{text}<extra></extra>\",\n        marker=dict(size=10, color=\"orange\"),\n        name=asset1_name\n    )\n    trace2b = go.Scatter(\n        x=df[df.wt1==0][\"stdev\"],\n        y=df[df.wt1==0][\"mean\"],\n        mode=\"markers\",\n        text=df[df.wt1==0][\"text\"],\n        hovertemplate=\"%{text}<extra></extra>\",\n        marker=dict(size=10, color=\"red\"),\n        name=asset2_name\n    )\n\n    fig = go.Figure()\n    fig.add_trace(trace2a)\n    fig.add_trace(trace2b)\n    fig.add_trace(trace1)\n\n\n\n    def custom(string, ports,srTang,borrow_flag):\n        # borrow_flag=1 adds statement about \"relative to borrowing rate\"\n        cd = np.empty(shape=(len(ports), N+1, 1), dtype=float)\n        for i in range(N):\n            cd[:, i] = np.array([w[i] for w in ports]).reshape(-1, 1)\n        cd[:,N] = np.round(srTang,4)\n        # print(cd)\n        string += \"<br>\"\n        for i in range(N):\n            string += \"asset \" + str(i + 1)\n            string += \": %{customdata[\"\n            string += str(i)\n            string += \"]:.1%}<br>\"\n        if borrow_flag==1:\n            string += \"Sharpe ratio (relative to borrowing rate): %{customdata[\" +  str(N) + \"]:.4f}<br>\"    \n        else:\n            string += \"Sharpe ratio: %{customdata[\" +  str(N) + \"]:.4f}<br>\"\n        string += \"<extra></extra>\"\n        return string, cd  \n\n    # Plot the tangency portfolios\n    c = c / 100\n    rb = rs + extra     \n    rs = rs/100\n    rb = rb/100\n    mns = [mn1, mn2]\n    mns = np.array(mns) / 100\n    sds = [sd1, sd2]\n    sds = np.array(sds) / 100\n    cov = np.array(\n        [[sds[0] ** 2, sds[0] * sds[1] * c], [sds[0] * sds[1] * c, sds[1] ** 2]]\n    ).reshape(2, 2)\n    \n    Shorts = 0.0     \n    N = len(mns)\n    P = portfolio(mns, cov, Shorts)    \n    gmv = P.GMV @ mns\n    # print('GMV return is: ',gmv)\n    if (rs < gmv) or (not Shorts):\n        portTang = P.tangency(rs)\n        mnTang = portTang @ mns\n        if mnTang < np.max(mns):\n            sdTang = np.sqrt(portTang @ cov @ portTang)\n            srTang = (mnTang - rs)/sdTang\n            string0 = 'tangency portfolio' if rb == rs else 'efficient low risk portfolio' if rb != rs else 'tangency portfolio'\n            string, cd = custom(string0, [portTang], srTang,0)\n            trace = go.Scatter(\n                x=[sdTang],\n                y=[mnTang],\n                mode=\"markers\",\n                customdata=cd,\n                hovertemplate=string,\n                marker=dict(size=10, color=\"blue\"),\n                name=string0\n            )\n            fig.add_trace(trace)\n            \n            #Plot CAL (no leverage)\n            if rb==rs:\n                max_wgt = 4.0\n            else:\n                max_wgt = 1.0\n            grid, mns_cal, sds_cal, srs_cal, srb_cal = rf_plus_risky(mnTang*100, sdTang*100, rs*100,rb*100,0, max_wgt)\n            portlabel = 'tangency portfolio' if rb == rs else 'efficient low risk portfolio' if rb != rs else 'tangency portfolio'\n            string = \"wealth in \"+portlabel + \" = %{text:.0f}%<br>\" + \"Sharpe ratio: \" +  \"{:.4f}\".format(srTang) +\"<extra></extra>\"\n            trace5 = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string, \n                line=dict(color=\"blue\"),\n                name=\"CAL: \" + portlabel\n            )           \n            fig.add_trace(trace5)\n              \n            \n            \n\n    if (rb != rs) and ((gmv > rb) or (not Shorts)):\n        portTang = P.tangency(rb)\n        mnTang = portTang @ mns\n        if mnTang < np.max(mns):\n            sdTang = np.sqrt(portTang @ cov @ portTang)\n            srTang = (mnTang - rb)/sdTang\n            string = 'efficient high mean portfolio'\n            string, cd = custom(string, [portTang], srTang,1)\n            trace = go.Scatter(\n                x=[sdTang],\n                y=[mnTang],\n                mode=\"markers\",\n                customdata=cd,\n                hovertemplate=string,\n                marker=dict(size=10, color=\"blue\"),\n                name=\"efficient high mean portfolio\"\n            )\n            fig.add_trace(trace)\n            \n            #Plot CAL (with leverage)            \n            grid, mns_cal, sds_cal, srs_cal, srb_cal = rf_plus_risky(mnTang*100, sdTang*100, rs*100,rb*100, 1.0, 1.5)\n            string = \"wealth in efficient high mean portfolio = %{text:.0f}%<br>\" + \"Sharpe ratio (relative to borrowing rate): \" + \"{:.4f}\".format(srTang) +\"<extra></extra>\"\n            trace6 = go.Scatter(\n                x=sds_cal, \n                y=mns_cal, \n                mode=\"lines\", \n                text=100 * grid, \n                hovertemplate=string,\n                line=dict(color=\"blue\"),\n                name = \"CAL: efficient high mean\"\n            )           \n            fig.add_trace(trace6)   \n \n\n\n\n\n    # Utility plot info\n    u1, wgt1, wgt_rf1, wgt_lo1, wgt_hi1 = opt_utility(mns, cov, Shorts, rs, rb, raver1)\n    u2, wgt2, wgt_rf2, wgt_lo2, wgt_hi2 = opt_utility(mns, cov, Shorts, rs, rb, raver2)\n    string1='Risk Aversion='+str(raver1)\n    string2='Risk Aversion='+str(raver2)\n    grid = np.linspace(0,1.4,100)\n    sds = [w*np.max(sds) for w in grid]\n    eret1 = [u1 + 0.5*raver1* (sd**2) for sd in sds]\n    eret2 = [u2 + 0.5*raver2* (sd**2) for sd in sds] \n    # df = pd.DataFrame(data={'Standard Deviation': sds, string1: U1, string2: U2})\n    string = \"indifference curve for <br> optimal utility for risk aversion of \"+str(np.round(raver1,1))+\"<extra></extra>\"\n    trace7 = go.Scatter(\n        x=sds, y=eret1, mode=\"lines\", hovertemplate=string, name=string1, line=dict(color=\"purple\",dash='dot'),\n    )  \n    string = \"indifference curve for <br> optimal utility for risk aversion of \"+str(np.round(raver2,1))+\"<extra></extra>\"\n    trace8 = go.Scatter(\n        x=sds, y=eret2, mode=\"lines\", hovertemplate=string, name=string2, line=dict(color=\"purple\"),\n    )  \n    fig.add_trace(trace7) \n    fig.add_trace(trace8) \n \n    \n    fig.layout.xaxis[\"title\"] = \"Standard Deviation\"\n    fig.layout.yaxis[\"title\"] = \"Expected Return\"\n    fig.update_xaxes(range=[0, 1.25 * df[\"stdev\"].max()])\n    fig.update_yaxes(range=[0, 1.25 * df[\"mean\"].max()])\n    fig.update_yaxes(tickformat=\".0%\")\n    fig.update_xaxes(tickformat=\".0%\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.74))\n    # fig.show()\n\n\n    #2nd plot of risky asset share as function of risk aversion:\n    ravers = np.arange(0.2,20,0.1)\n    cd = np.empty(shape=(len(ravers),5,1),dtype=float)\n    wgts = [opt_utility(mns, cov, Shorts, rs, rb, A) for A in ravers]\n    df = pd.DataFrame(wgts, columns=['u','wgt_risky','wgt_rf','wgt_lowrisk','wgt_highrisk'])\n    if (rb != rs):\n        custdat = np.empty(shape=(df.shape[0],3,1), dtype=float)\n        custdat[:,0] = np.array(100*df.wgt_rf).reshape(-1,1)\n        custdat[:,1] = np.array(100*df.wgt_lowrisk).reshape(-1,1)\n        custdat[:,2] = np.array(100*df.wgt_highrisk).reshape(-1,1)\n        string = 'risk-free: %{customdata[0]:.0f}%<br>'\n        string+= 'efficient low-risk: %{customdata[1]:.0f}%<br>'\n        string+= 'efficient high-risk: %{customdata[2]:.0f}%<br>'\n        string+= '<extra></extra>'\n        trace1 = go.Scatter(x=ravers,y=df['wgt_risky'],mode='lines',customdata=custdat,hovertemplate=string, line=dict(color=\"orange\"))\n        fig = go.Figure()\n        fig.add_trace(trace1)\n    else:\n        custdat = np.empty(shape=(df.shape[0],2,1), dtype=float)\n        custdat[:,0] = np.array(100*df.wgt_rf).reshape(-1,1)\n        custdat[:,1] = np.array(100*df.wgt_lowrisk).reshape(-1,1)\n        string = 'risk-free: %{customdata[0]:.0f}%<br>'\n        string+= 'tangency: %{customdata[1]:.0f}%<br>'\n        string+= '<extra></extra>'\n        trace1 = go.Scatter(x=ravers,y=df['wgt_risky'],mode='lines',customdata=custdat,hovertemplate=string, line=dict(color=\"orange\"))\n        fig = go.Figure()\n        fig.add_trace(trace1)       \n    fig.layout.xaxis[\"title\"] = \"Risk Aversion\"\n    fig.layout.yaxis[\"title\"] = \"Weight in Risky Assets\"\n    fig.update_yaxes(tickformat=\".1%\")\n    fig.update_xaxes(tickformat=\".2\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.74))\n    fig.show()\n\n\nfigtbl(mn_stock,mn_bond,sd_stock,sd_bond,corr,rs,extra,raver1, raver2, \"Stock\",\"Bond\")\n```\n\n::: {#fig-tangency-cal-allocation-by-riskaversion .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"c4d4e23f-1de5-4e3d-a10e-c3e425a6690d\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c4d4e23f-1de5-4e3d-a10e-c3e425a6690d\")) {                    Plotly.newPlot(                        \"c4d4e23f-1de5-4e3d-a10e-c3e425a6690d\",                        [{\"customdata\":[[[-7191.533564323865],[7291.533564323865]],[[-4761.0223762159085],[4861.0223762159085]],[[-3545.7667821619316],[3645.7667821619316]],[[-2816.6134257295453],[2916.6134257295453]],[[-2330.5111881079542],[2430.5111881079542]],[[-1983.2953040925322],[2083.295304092532]],[[-1722.8833910809656],[1822.8833910809656]],[[-1520.3407920719694],[1620.3407920719694]],[[-1358.3067128647726],[1458.3067128647726]],[[-1225.7333753316113],[1325.7333753316113]],[[-1115.255594053977],[1215.255594053977]],[[-1021.7743945113635],[1121.7743945113637]],[[-941.6476520462661],[1041.647652046266]],[[-872.2044752431817],[972.2044752431817]],[[-811.4416955404829],[911.4416955404829]],[[-757.8274781557486],[857.8274781557486]],[[-710.1703960359847],[810.1703960359847]],[[-667.5298488761961],[767.5298488761961]],[[-629.1533564323861],[729.1533564323861]],[[-594.4317680308441],[694.4317680308441]],[[-562.8666876658056],[662.8666876658056]],[[-534.0463968977273],[634.0463968977273]],[[-507.6277970269885],[607.6277970269884]],[[-483.32268514590896],[583.322685145909]],[[-460.8871972556816],[560.8871972556816]],[[-440.1135973573231],[540.1135973573231]],[[-420.82382602313294],[520.8238260231329]],[[-402.8643837464732],[502.8643837464732]],[[-386.10223762159086],[486.10223762159086]],[[-370.42152027895884],[470.42152027895884]],[[-355.7208477702414],[455.7208477702414]],[[-341.9111251105371],[441.9111251105371]],[[-328.9137390778743],[428.9137390778743]],[[-316.65906081850636],[416.65906081850636]],[[-305.08519801799235],[405.08519801799235]],[[-294.1369494229114],[394.1369494229114]],[[-283.764924438098],[383.764924438098]],[[-273.92479817045444],[373.92479817045444]],[[-264.57667821619316],[364.57667821619316]],[[-255.68456411335916],[355.68456411335916]],[[-247.21588401542198],[347.215884015422]],[[-239.14109601506334],[339.14109601506334]],[[-231.4333438329028],[331.43334383290284]],[[-224.06815841439385],[324.06815841439385]],[[-217.0231984488636],[317.02319844886364]],[[-210.27802401378136],[310.27802401378136]],[[-203.81389851349425],[303.8138985134942]],[[-197.6136148703617],[297.6136148703617]],[[-191.66134257295448],[291.6613425729545]],[[-185.94249271858283],[285.94249271858286]],[[-180.4435986278408],[280.4435986278408]],[[-175.15220997448537],[275.15220997448534]],[[-170.05679867866155],[270.05679867866155]],[[-165.14667506632227],[265.1466750663223]],[[-160.41191301156647],[260.41191301156647]],[[-155.843282958732],[255.843282958732]],[[-151.43219187323663],[251.43219187323663]],[[-147.17062929911395],[247.17062929911395]],[[-143.05111881079543],[243.05111881079543]],[[-139.06667424012662],[239.06667424012662]],[[-135.21076013947942],[235.21076013947942]],[[-131.47725601028134],[231.47725601028134]],[[-127.8604238851207],[227.8604238851207]],[[-124.35487890227263],[224.35487890227265]],[[-120.95556255526856],[220.95556255526856]],[[-117.65771833802576],[217.65771833802577]],[[-114.45686953893714],[214.45686953893716]],[[-111.34879896590904],[211.34879896590903]],[[-108.32953040925317],[208.32953040925318]],[[-105.3953116710947],[205.3953116710947]],[[-102.54259900899618],[202.54259900899618]],[[-99.76804285818798],[199.76804285818798]],[[-97.06847471145569],[197.0684747114557]],[[-94.4408950486363],[194.44089504863632]],[[-91.88246221904902],[191.88246221904902]],[[-89.39048219023019],[189.3904821902302]],[[-86.96239908522723],[186.96239908522722]],[[-84.59578643857877],[184.59578643857876]],[[-82.28833910809658],[182.28833910809658]],[[-80.03786578577436],[180.03786578577436]],[[-77.84228205667958],[177.84228205667958]],[[-75.69960395961112],[175.69960395961112]],[[-73.60794200771102],[173.60794200771102]],[[-71.56549563114973],[171.56549563114973]],[[-69.57054800753171],[169.5705480075317]],[[-67.62146124882442],[167.62146124882443]],[[-65.7166719164514],[165.71667191645142]],[[-63.854686838738495],[163.8546868387385]],[[-62.03407920719697],[162.03407920719698]],[[-60.2534849301948],[160.2534849301948]],[[-58.51159922443181],[158.51159922443182]],[[-56.80717342631962],[156.80717342631962]],[[-55.13901200689071],[155.1390120068907]],[[-53.50596977523922],[153.50596977523924]],[[-51.906949256747126],[151.9069492567471]],[[-50.34089823348171],[150.3408982334817]],[[-48.806807435180865],[148.80680743518087]],[[-47.30370837017905],[147.30370837017907]],[[-45.83067128647726],[145.83067128647727]],[[-44.38680325393787],[144.38680325393787]],[[-42.97124635929141],[142.97124635929143]],[[-41.5831760062886],[141.5831760062886]],[[-40.22179931392045],[140.22179931392046]],[[-38.88635360616881],[138.88635360616883]],[[-37.57610498724269],[137.57610498724267]],[[-36.2903469967077],[136.2903469967077]],[[-35.0283993393308],[135.0283993393308]],[[-33.78960668484152],[133.78960668484152]],[[-32.57333753316114],[132.57333753316115]],[[-31.378983140970497],[131.3789831409705]],[[-30.20595650578326],[130.20595650578326]],[[-29.05369140396217],[129.05369140396218]],[[-27.921641479366023],[127.92164147936602]],[[-26.809279379545426],[126.80927937954543]],[[-25.716095936618323],[125.71609593661832]],[[-24.64159939015149],[124.6415993901515]],[[-23.585314649557],[123.585314649557]],[[-22.54678259367835],[122.54678259367834]],[[-21.525559405397708],[121.52555940539771]],[[-20.521215939237415],[120.52121593923741]],[[-19.533337120063333],[119.53333712006334]],[[-18.561521371119728],[118.56152137111972]],[[-17.605380069739706],[117.60538006973971]],[[-16.6645370291818],[116.6645370291818]],[[-15.738628005140676],[115.73862800514067]],[[-14.82730022557266],[114.82730022557266]],[[-13.930211942560344],[113.93021194256035]],[[-13.04703200502113],[113.04703200502114]],[[-12.17743945113634],[112.17743945113634]],[[-11.321123119448284],[111.32112311944829]],[[-10.477781277634302],[110.4777812776343]],[[-9.647121268028002],[109.647121268028]],[[-8.828859169012881],[108.82885916901289]],[[-8.022719471464645],[108.02271947146464]],[[-7.228434769468572],[107.22843476946858]],[[-6.445745464581942],[106.44574546458195]],[[-5.6743994829545175],[105.67439948295451]],[[-4.9141520046599],[104.9141520046599]],[[-4.164765204626608],[104.1647652046266]],[[-3.4260080045938057],[103.42600800459381]],[[-2.6976558355473523],[102.69765583554735]],[[-1.9794904101239519],[101.97949041012396]],[[-1.2712995044980913],[101.27129950449809]],[[-0.5728767492946707],[100.57287674929466]],[[0.11597857090600572],[99.88402142909399]],[[0.7954617098794192],[99.20453829012058]],[[1.4657626442721283],[98.53423735572787]],[[2.1270662506864157],[97.87293374931359]],[[2.7795524756818235],[97.22044752431817]],[[3.4233964990217025],[96.5766035009783]],[[4.058768890475495],[95.94123110952451]],[[4.68583576047239],[95.31416423952761]],[[5.30475890488491],[94.6952410951151]],[[5.915695944208221],[94.08430405579178]],[[6.518800457386387],[93.48119954261361]],[[7.114222110524038],[92.88577788947596]],[[7.702106780710604],[92.29789321928939]],[[8.282596675171538],[91.71740332482847]],[[8.85583044595174],[91.14416955404826]],[[9.421943300324697],[90.5780566996753]],[[9.981067107112818],[90.01893289288718]],[[10.533330499093708],[89.46666950090629]],[[11.07885897166021],[88.92114102833979]],[[11.61777497789257],[88.38222502210743]],[[12.150198020194436],[87.84980197980556]],[[12.676244738636388],[87.32375526136362]],[[13.196028996144493],[86.80397100385551]],[[13.709661960664354],[86.29033803933565]],[[14.217252184425133],[85.78274781557487]],[[14.718905680422667],[85.28109431957733]],[[15.214725996234169],[84.78527400376584]],[[15.704814285273262],[84.29518571472674]],[[16.189269375587788],[83.81073062441222]],[[16.6681878362987],[83.3318121637013]],[[17.141664041774295],[82.85833595822571]],[[17.609790233628676],[82.39020976637133]],[[18.072656580630753],[81.92734341936925]],[[18.53035123660488],[81.46964876339511]],[[18.982960396401516],[81.01703960359849]],[[19.430568350012567],[80.56943164998744]],[[19.87325753490261],[80.1267424650974]],[[20.31110858662445],[79.68889141337556]],[[20.744200387784094],[79.25579961221591]],[[21.17261011541771],[78.82738988458229]],[[21.59641328684019],[78.40358671315981]],[[22.015683804022867],[77.98431619597713]],[[22.430493996554645],[77.56950600344535]],[[22.84091466323954],[77.15908533676046]],[[23.24701511238041],[76.75298488761959]],[[23.648863200797255],[76.35113679920275]],[[24.046525371626437],[75.95347462837356]],[[24.440066690944427],[75.55993330905557]],[[24.829550883259145],[75.17044911674085]],[[25.215040365909115],[74.78495963409088]],[[25.596596282409568],[74.40340371759044]],[[25.974278534783124],[74.02572146521688]],[[26.348145814910474],[73.65185418508953]],[[26.71825563493605],[73.28174436506394]]],\"hovertemplate\":\"risk-free: %{customdata[0]:.0f}%<br>tangency: %{customdata[1]:.0f}%<br><extra></extra>\",\"line\":{\"color\":\"orange\"},\"mode\":\"lines\",\"x\":[0.2,0.30000000000000004,0.4000000000000001,0.5000000000000001,0.6000000000000001,0.7000000000000002,0.8000000000000003,0.9000000000000001,1.0000000000000002,1.1000000000000003,1.2000000000000004,1.3000000000000003,1.4000000000000004,1.5000000000000004,1.6000000000000003,1.7000000000000004,1.8000000000000005,1.9000000000000006,2.000000000000001,2.1000000000000005,2.200000000000001,2.3000000000000007,2.400000000000001,2.500000000000001,2.600000000000001,2.700000000000001,2.800000000000001,2.9000000000000012,3.000000000000001,3.100000000000001,3.200000000000001,3.300000000000001,3.4000000000000012,3.5000000000000013,3.6000000000000014,3.7000000000000015,3.8000000000000016,3.9000000000000012,4.000000000000001,4.100000000000001,4.200000000000002,4.300000000000002,4.400000000000001,4.500000000000002,4.600000000000001,4.700000000000002,4.800000000000002,4.900000000000002,5.000000000000002,5.100000000000001,5.200000000000002,5.300000000000002,5.400000000000002,5.500000000000002,5.600000000000002,5.700000000000002,5.800000000000002,5.900000000000002,6.000000000000002,6.100000000000002,6.200000000000002,6.3000000000000025,6.400000000000002,6.500000000000003,6.600000000000002,6.700000000000002,6.8000000000000025,6.900000000000002,7.000000000000003,7.100000000000002,7.200000000000003,7.3000000000000025,7.400000000000003,7.500000000000003,7.600000000000002,7.700000000000003,7.8000000000000025,7.900000000000003,8.000000000000002,8.100000000000003,8.200000000000003,8.300000000000002,8.400000000000002,8.500000000000002,8.600000000000001,8.700000000000003,8.800000000000002,8.900000000000002,9.000000000000002,9.100000000000001,9.200000000000003,9.300000000000002,9.400000000000002,9.500000000000002,9.600000000000003,9.700000000000003,9.800000000000002,9.900000000000002,10.000000000000002,10.100000000000003,10.200000000000003,10.300000000000002,10.400000000000002,10.500000000000004,10.600000000000003,10.700000000000003,10.800000000000002,10.900000000000002,11.000000000000004,11.100000000000003,11.200000000000003,11.300000000000002,11.400000000000002,11.500000000000004,11.600000000000003,11.700000000000003,11.800000000000002,11.900000000000004,12.000000000000004,12.100000000000003,12.200000000000003,12.300000000000002,12.400000000000004,12.500000000000004,12.600000000000003,12.700000000000003,12.800000000000004,12.900000000000004,13.000000000000004,13.100000000000003,13.200000000000003,13.300000000000004,13.400000000000004,13.500000000000004,13.600000000000003,13.700000000000005,13.800000000000004,13.900000000000004,14.000000000000004,14.100000000000003,14.200000000000005,14.300000000000004,14.400000000000004,14.500000000000004,14.600000000000005,14.700000000000005,14.800000000000004,14.900000000000004,15.000000000000004,15.100000000000005,15.200000000000005,15.300000000000004,15.400000000000004,15.500000000000004,15.600000000000005,15.700000000000005,15.800000000000004,15.900000000000004,16.000000000000007,16.100000000000005,16.200000000000006,16.300000000000004,16.400000000000006,16.500000000000004,16.600000000000005,16.700000000000006,16.800000000000004,16.900000000000006,17.000000000000004,17.100000000000005,17.200000000000006,17.300000000000004,17.400000000000006,17.500000000000004,17.600000000000005,17.700000000000006,17.800000000000004,17.900000000000006,18.000000000000004,18.100000000000005,18.200000000000006,18.300000000000004,18.400000000000006,18.500000000000007,18.600000000000005,18.700000000000006,18.800000000000004,18.900000000000006,19.000000000000007,19.100000000000005,19.200000000000006,19.300000000000004,19.400000000000006,19.500000000000007,19.600000000000005,19.700000000000006,19.800000000000004,19.900000000000006],\"y\":[72.91533564323865,48.61022376215909,36.45766782161932,29.166134257295454,24.305111881079544,20.83295304092532,18.228833910809655,16.203407920719695,14.583067128647727,13.257333753316113,12.15255594053977,11.217743945113636,10.41647652046266,9.722044752431817,9.11441695540483,8.578274781557486,8.101703960359847,7.67529848876196,7.291533564323861,6.9443176803084405,6.628666876658055,6.340463968977272,6.076277970269885,5.83322685145909,5.608871972556816,5.401135973573231,5.2082382602313295,5.028643837464732,4.861022376215908,4.704215202789588,4.557208477702414,4.419111251105371,4.289137390778743,4.166590608185063,4.050851980179924,3.941369494229114,3.8376492443809798,3.7392479817045445,3.6457667821619317,3.5568456411335916,3.47215884015422,3.3914109601506333,3.314333438329028,3.2406815841439385,3.170231984488636,3.1027802401378137,3.0381389851349425,2.976136148703617,2.916613425729545,2.8594249271858283,2.804435986278408,2.7515220997448537,2.7005679867866155,2.651466750663223,2.6041191301156648,2.55843282958732,2.5143219187323664,2.4717062929911395,2.430511188107954,2.390666742401266,2.352107601394794,2.3147725601028135,2.278604238851207,2.2435487890227264,2.2095556255526856,2.1765771833802576,2.1445686953893714,2.1134879896590903,2.0832953040925317,2.053953116710947,2.025425990089962,1.9976804285818799,1.970684747114557,1.944408950486363,1.91882462219049,1.8939048219023018,1.8696239908522723,1.8459578643857877,1.8228833910809659,1.8003786578577436,1.7784228205667958,1.7569960395961113,1.7360794200771101,1.7156549563114973,1.695705480075317,1.6762146124882442,1.657166719164514,1.638546868387385,1.6203407920719697,1.602534849301948,1.585115992244318,1.5680717342631962,1.551390120068907,1.5350596977523923,1.5190694925674713,1.5034089823348171,1.4880680743518087,1.4730370837017905,1.4583067128647726,1.4438680325393787,1.4297124635929142,1.415831760062886,1.4022179931392045,1.388863536061688,1.3757610498724269,1.362903469967077,1.350283993393308,1.3378960668484152,1.3257333753316114,1.313789831409705,1.3020595650578326,1.2905369140396217,1.2792164147936602,1.2680927937954543,1.2571609593661832,1.246415993901515,1.23585314649557,1.2254678259367835,1.215255594053977,1.2052121593923741,1.1953333712006333,1.1856152137111973,1.176053800697397,1.166645370291818,1.1573862800514068,1.1482730022557266,1.1393021194256034,1.1304703200502113,1.1217743945113634,1.1132112311944828,1.104777812776343,1.09647121268028,1.0882885916901288,1.0802271947146465,1.0722843476946857,1.0644574546458194,1.0567439948295452,1.049141520046599,1.041647652046266,1.034260080045938,1.0269765583554735,1.0197949041012395,1.012712995044981,1.0057287674929467,0.9988402142909399,0.9920453829012058,0.9853423735572787,0.9787293374931358,0.9722044752431818,0.965766035009783,0.959412311095245,0.9531416423952761,0.9469524109511509,0.9408430405579178,0.9348119954261361,0.9288577788947596,0.922978932192894,0.9171740332482846,0.9114416955404826,0.905780566996753,0.9001893289288718,0.8946666950090629,0.8892114102833979,0.8838222502210743,0.8784980197980556,0.8732375526136361,0.8680397100385551,0.8629033803933565,0.8578274781557487,0.8528109431957733,0.8478527400376583,0.8429518571472674,0.8381073062441221,0.833318121637013,0.828583359582257,0.8239020976637133,0.8192734341936925,0.8146964876339512,0.8101703960359848,0.8056943164998743,0.8012674246509739,0.7968889141337555,0.792557996122159,0.7882738988458229,0.7840358671315981,0.7798431619597713,0.7756950600344535,0.7715908533676046,0.7675298488761959,0.7635113679920275,0.7595347462837356,0.7555993330905557,0.7517044911674086,0.7478495963409089,0.7440340371759043,0.7402572146521688,0.7365185418508953,0.7328174436506395],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"title\":{\"text\":\"Risk Aversion\"},\"tickformat\":\".2\"},\"yaxis\":{\"title\":{\"text\":\"Weight in Risky Assets\"},\"tickformat\":\".1%\"},\"legend\":{\"yanchor\":\"top\",\"y\":0.99,\"xanchor\":\"left\",\"x\":0.74}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('c4d4e23f-1de5-4e3d-a10e-c3e425a6690d');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nPreferences and Efficient Portfolios\n:::\n:::\n\n\n<!-- \n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\n# Parameter values (in percent)\nmn = 6\nsd = 15\ns = 2\nextra = 0    #incremental borrowing rate\nraver1 = 3\nraver2 = 0.5\n\ndef cal(mn, sd, s, b):\n    grid = np.linspace(0, 2, 201)\n    mns = [(s + w * (mn - s) if w <= 1 else b + w * (mn - b)) for w in grid]\n    sds = [w * sd for w in grid]\n    return grid, mns, sds\n\ndef opt_utility(mn, sd, s, b, A):\n    # return/sd inputs must be in decimal\n    wgt = (mn - s) / (A * (sd**2))\n    expret= wgt*mn + (1-wgt)*s\n    sdret = wgt*sd \n    if wgt > 1:\n        wgt = (mn - b) / (A * (sd**2))\n        wgt = max(wgt,1)\n        expret= wgt*mn + (1-wgt)*b \n        sdret = wgt*sd   \n    u = expret - 0.5*A*sdret**2\n    return u, wgt\n\ndef figtbl(mn, sd, s, extra, raver1, raver2):\n    mn /= 100\n    sd /= 100\n    b = s+extra\n    s /= 100\n    b /= 100\n\n    # CAL Plot Info\n    grid, mns, sds = cal(mn, sd, s, b)\n    string = \"wealth in market = %{text:.0f}%<extra></extra>\"\n    trace1 = go.Scatter(\n        x=sds, y=mns, mode=\"lines\", text=100 * grid, hovertemplate=string, name='CAL'\n    )\n    string = \"wealth in market = 100%<extra></extra>\"\n    trace2 = go.Scatter(\n        x=[sd], y=[mn], mode=\"markers\", hovertemplate=string, marker=dict(size=15), name='Market'\n    )\n    string = \"wealth in market = 0%<extra></extra>\"\n    trace3 = go.Scatter(\n        x=[0], y=[s], mode=\"markers\", hovertemplate=string, marker=dict(size=15), name='Risk-free (Saving)'\n    )  \n    # string = \"Borrowing rate<extra></extra>\"\n    # trace4 = go.Scatter(\n    #     x=[0], y=[b], mode=\"markers\", hovertemplate=string, marker=dict(size=15), name='Risk-free (Borrowing)'\n    # )       \n\n    # Utility plot info\n    u1, wgt1 = opt_utility(mn,sd,s,b, raver1)\n    u2, wgt2 = opt_utility(mn,sd,s,b, raver2)\n    string1='Risk Aversion='+str(raver1)\n    string2='Risk Aversion='+str(raver2)\n    eret1 = [u1 + 0.5*raver1* (sd**2) for sd in sds]\n    eret2 = [u2 + 0.5*raver2* (sd**2) for sd in sds] \n    # df = pd.DataFrame(data={'Standard Deviation': sds, string1: U1, string2: U2})\n    string = \"indifference curve for <br>utility obtained from <br>optimal wealth in market = \"+str(np.round(100*wgt1,0))+\"%<extra></extra>\"\n    trace5 = go.Scatter(\n        x=sds, y=eret1, mode=\"lines\", hovertemplate=string, name=string1\n    )  \n    string = \"indifference curve for <br>utility obtained from <br>optimal wealth in market = \"+str(np.round(100*wgt2,0))+\"%<extra></extra>\"\n    trace6 = go.Scatter(\n        x=sds, y=eret2, mode=\"lines\", hovertemplate=string, name=string2\n    )  \n\n\n    fig = go.Figure()\n    fig.add_trace(trace1)\n    fig.add_trace(trace2)\n    fig.add_trace(trace3)\n    # fig.add_trace(trace4)\n    fig.add_trace(trace5)\n    fig.add_trace(trace6)\n    fig.layout.xaxis[\"title\"] = \"Standard Deviation\"\n    fig.layout.yaxis[\"title\"] = \"Expected Return\"    \n    fig.update_yaxes(tickformat=\".0%\")\n    fig.update_xaxes(tickformat=\".0%\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.01))\n    fig.show()\nfigtbl(mn, sd, s, extra, raver1, raver2)\n```\n\n::: {#fig-cal-preferences .cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"fef8cb41-7f3d-4f86-93a3-24d9e53d7743\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"fef8cb41-7f3d-4f86-93a3-24d9e53d7743\")) {                    Plotly.newPlot(                        \"fef8cb41-7f3d-4f86-93a3-24d9e53d7743\",                        [{\"hovertemplate\":\"wealth in market = %{text:.0f}%<extra></extra>\",\"mode\":\"lines\",\"name\":\"CAL\",\"text\":[0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.000000000000001,8.0,9.0,10.0,11.0,12.0,13.0,14.000000000000002,15.0,16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,24.0,25.0,26.0,27.0,28.000000000000004,28.999999999999996,30.0,31.0,32.0,33.0,34.0,35.0,36.0,37.0,38.0,39.0,40.0,41.0,42.0,43.0,44.0,45.0,46.0,47.0,48.0,49.0,50.0,51.0,52.0,53.0,54.0,55.00000000000001,56.00000000000001,57.00000000000001,57.99999999999999,59.0,60.0,61.0,62.0,63.0,64.0,65.0,66.0,67.0,68.0,69.0,70.0,71.0,72.0,73.0,74.0,75.0,76.0,77.0,78.0,79.0,80.0,81.0,82.0,83.0,84.0,85.0,86.0,87.0,88.0,89.0,90.0,91.0,92.0,93.0,94.0,95.0,96.0,97.0,98.0,99.0,100.0,101.0,102.0,103.0,104.0,105.0,106.0,107.0,108.0,109.00000000000001,110.00000000000001,111.00000000000001,112.00000000000001,113.00000000000001,114.00000000000001,115.00000000000001,115.99999999999999,117.0,118.0,119.0,120.0,121.0,122.0,123.0,124.0,125.0,126.0,127.0,128.0,129.0,130.0,131.0,132.0,133.0,134.0,135.0,136.0,137.0,138.0,139.0,140.0,141.0,142.0,143.0,144.0,145.0,146.0,147.0,148.0,149.0,150.0,151.0,152.0,153.0,154.0,155.0,156.0,157.0,158.0,159.0,160.0,161.0,162.0,163.0,164.0,165.0,166.0,167.0,168.0,169.0,170.0,171.0,172.0,173.0,174.0,175.0,176.0,177.0,178.0,179.0,180.0,181.0,182.0,183.0,184.0,185.0,186.0,187.0,188.0,189.0,190.0,191.0,192.0,193.0,194.0,195.0,196.0,197.0,198.0,199.0,200.0],\"x\":[0.0,0.0015,0.003,0.0045,0.006,0.0075,0.009,0.0105,0.012,0.0135,0.015,0.0165,0.018,0.0195,0.021,0.0225,0.024,0.025500000000000002,0.027,0.028499999999999998,0.03,0.0315,0.033,0.0345,0.036,0.0375,0.039,0.0405,0.042,0.0435,0.045,0.0465,0.048,0.0495,0.051000000000000004,0.052500000000000005,0.054,0.0555,0.056999999999999995,0.058499999999999996,0.06,0.0615,0.063,0.0645,0.066,0.0675,0.069,0.07050000000000001,0.072,0.0735,0.075,0.0765,0.078,0.0795,0.081,0.0825,0.084,0.0855,0.087,0.0885,0.09,0.0915,0.093,0.0945,0.096,0.0975,0.099,0.1005,0.10200000000000001,0.10350000000000001,0.10500000000000001,0.1065,0.108,0.1095,0.111,0.11249999999999999,0.11399999999999999,0.11549999999999999,0.11699999999999999,0.1185,0.12,0.1215,0.123,0.1245,0.126,0.1275,0.129,0.1305,0.132,0.1335,0.135,0.1365,0.138,0.1395,0.14100000000000001,0.14250000000000002,0.144,0.1455,0.147,0.1485,0.15,0.1515,0.153,0.1545,0.156,0.1575,0.159,0.1605,0.162,0.1635,0.165,0.1665,0.168,0.1695,0.171,0.17250000000000001,0.174,0.1755,0.177,0.1785,0.18,0.1815,0.183,0.1845,0.186,0.1875,0.189,0.1905,0.192,0.1935,0.195,0.1965,0.198,0.1995,0.201,0.2025,0.20400000000000001,0.20550000000000002,0.20700000000000002,0.20850000000000002,0.21000000000000002,0.2115,0.213,0.2145,0.216,0.2175,0.219,0.2205,0.222,0.2235,0.22499999999999998,0.22649999999999998,0.22799999999999998,0.22949999999999998,0.23099999999999998,0.23249999999999998,0.23399999999999999,0.2355,0.237,0.2385,0.24,0.2415,0.243,0.2445,0.246,0.2475,0.249,0.2505,0.252,0.2535,0.255,0.2565,0.258,0.2595,0.261,0.2625,0.264,0.2655,0.267,0.2685,0.27,0.2715,0.273,0.2745,0.276,0.2775,0.279,0.2805,0.28200000000000003,0.28350000000000003,0.28500000000000003,0.28650000000000003,0.288,0.2895,0.291,0.2925,0.294,0.2955,0.297,0.2985,0.3],\"y\":[0.02,0.0204,0.0208,0.0212,0.0216,0.022,0.0224,0.0228,0.0232,0.0236,0.024,0.024399999999999998,0.0248,0.0252,0.0256,0.026,0.0264,0.0268,0.0272,0.0276,0.027999999999999997,0.028399999999999998,0.0288,0.0292,0.029599999999999998,0.03,0.0304,0.0308,0.0312,0.031599999999999996,0.032,0.0324,0.032799999999999996,0.0332,0.0336,0.034,0.0344,0.0348,0.035199999999999995,0.0356,0.036,0.0364,0.0368,0.0372,0.037599999999999995,0.038,0.038400000000000004,0.0388,0.0392,0.039599999999999996,0.039999999999999994,0.0404,0.0408,0.0412,0.0416,0.041999999999999996,0.0424,0.0428,0.043199999999999995,0.0436,0.044,0.044399999999999995,0.04479999999999999,0.0452,0.0456,0.046,0.0464,0.046799999999999994,0.0472,0.0476,0.048,0.0484,0.048799999999999996,0.049199999999999994,0.04959999999999999,0.049999999999999996,0.0504,0.0508,0.051199999999999996,0.05159999999999999,0.05199999999999999,0.0524,0.0528,0.0532,0.053599999999999995,0.05399999999999999,0.05439999999999999,0.0548,0.0552,0.0556,0.055999999999999994,0.05639999999999999,0.0568,0.0572,0.0576,0.057999999999999996,0.058399999999999994,0.05879999999999999,0.05919999999999999,0.0596,0.06,0.060399999999999995,0.06079999999999999,0.06119999999999999,0.0616,0.062,0.0624,0.0628,0.06319999999999999,0.0636,0.064,0.0644,0.0648,0.0652,0.06559999999999999,0.066,0.06639999999999999,0.06679999999999998,0.0672,0.0676,0.06799999999999999,0.06839999999999999,0.06879999999999999,0.0692,0.0696,0.06999999999999999,0.07039999999999999,0.07079999999999999,0.0712,0.0716,0.072,0.07239999999999999,0.07279999999999999,0.0732,0.0736,0.074,0.0744,0.07479999999999999,0.0752,0.0756,0.076,0.07639999999999998,0.0768,0.07719999999999999,0.07759999999999999,0.07799999999999999,0.07839999999999998,0.0788,0.07919999999999999,0.07959999999999999,0.07999999999999999,0.08039999999999999,0.0808,0.0812,0.08159999999999999,0.08199999999999999,0.08239999999999999,0.0828,0.0832,0.0836,0.08399999999999999,0.0844,0.0848,0.0852,0.0856,0.086,0.0864,0.08679999999999999,0.08719999999999999,0.0876,0.088,0.08839999999999999,0.08879999999999999,0.08919999999999999,0.0896,0.09,0.0904,0.09079999999999999,0.09119999999999999,0.0916,0.092,0.0924,0.0928,0.09319999999999999,0.0936,0.094,0.0944,0.0948,0.09519999999999999,0.09559999999999999,0.096,0.0964,0.09679999999999998,0.0972,0.09759999999999999,0.09799999999999999,0.09839999999999999,0.09879999999999999,0.0992,0.0996,0.09999999999999999],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in market = 100%<extra></extra>\",\"marker\":{\"size\":15},\"mode\":\"markers\",\"name\":\"Market\",\"x\":[0.15],\"y\":[0.06],\"type\":\"scatter\"},{\"hovertemplate\":\"wealth in market = 0%<extra></extra>\",\"marker\":{\"size\":15},\"mode\":\"markers\",\"name\":\"Risk-free (Saving)\",\"x\":[0],\"y\":[0.02],\"type\":\"scatter\"},{\"hovertemplate\":\"indifference curve for <br>utility obtained from <br>optimal wealth in market = 59.0%<extra></extra>\",\"mode\":\"lines\",\"name\":\"Risk Aversion=3\",\"x\":[0.0,0.0015,0.003,0.0045,0.006,0.0075,0.009,0.0105,0.012,0.0135,0.015,0.0165,0.018,0.0195,0.021,0.0225,0.024,0.025500000000000002,0.027,0.028499999999999998,0.03,0.0315,0.033,0.0345,0.036,0.0375,0.039,0.0405,0.042,0.0435,0.045,0.0465,0.048,0.0495,0.051000000000000004,0.052500000000000005,0.054,0.0555,0.056999999999999995,0.058499999999999996,0.06,0.0615,0.063,0.0645,0.066,0.0675,0.069,0.07050000000000001,0.072,0.0735,0.075,0.0765,0.078,0.0795,0.081,0.0825,0.084,0.0855,0.087,0.0885,0.09,0.0915,0.093,0.0945,0.096,0.0975,0.099,0.1005,0.10200000000000001,0.10350000000000001,0.10500000000000001,0.1065,0.108,0.1095,0.111,0.11249999999999999,0.11399999999999999,0.11549999999999999,0.11699999999999999,0.1185,0.12,0.1215,0.123,0.1245,0.126,0.1275,0.129,0.1305,0.132,0.1335,0.135,0.1365,0.138,0.1395,0.14100000000000001,0.14250000000000002,0.144,0.1455,0.147,0.1485,0.15,0.1515,0.153,0.1545,0.156,0.1575,0.159,0.1605,0.162,0.1635,0.165,0.1665,0.168,0.1695,0.171,0.17250000000000001,0.174,0.1755,0.177,0.1785,0.18,0.1815,0.183,0.1845,0.186,0.1875,0.189,0.1905,0.192,0.1935,0.195,0.1965,0.198,0.1995,0.201,0.2025,0.20400000000000001,0.20550000000000002,0.20700000000000002,0.20850000000000002,0.21000000000000002,0.2115,0.213,0.2145,0.216,0.2175,0.219,0.2205,0.222,0.2235,0.22499999999999998,0.22649999999999998,0.22799999999999998,0.22949999999999998,0.23099999999999998,0.23249999999999998,0.23399999999999999,0.2355,0.237,0.2385,0.24,0.2415,0.243,0.2445,0.246,0.2475,0.249,0.2505,0.252,0.2535,0.255,0.2565,0.258,0.2595,0.261,0.2625,0.264,0.2655,0.267,0.2685,0.27,0.2715,0.273,0.2745,0.276,0.2775,0.279,0.2805,0.28200000000000003,0.28350000000000003,0.28500000000000003,0.28650000000000003,0.288,0.2895,0.291,0.2925,0.294,0.2955,0.297,0.2985,0.3],\"y\":[0.03185185185185186,0.03185522685185186,0.03186535185185186,0.03188222685185186,0.03190585185185186,0.03193622685185186,0.03197335185185186,0.03201722685185186,0.03206785185185186,0.03212522685185186,0.03218935185185186,0.03226022685185186,0.03233785185185186,0.03242222685185186,0.03251335185185186,0.03261122685185186,0.03271585185185186,0.03282722685185186,0.03294535185185186,0.03307022685185186,0.03320185185185186,0.03334022685185186,0.03348535185185186,0.03363722685185186,0.03379585185185186,0.033961226851851864,0.03413335185185186,0.03431222685185186,0.03449785185185186,0.03469022685185186,0.03488935185185186,0.03509522685185186,0.03530785185185186,0.03552722685185186,0.03575335185185186,0.03598622685185186,0.036225851851851856,0.03647222685185186,0.036725351851851856,0.03698522685185186,0.03725185185185186,0.03752522685185186,0.03780535185185186,0.03809222685185186,0.03838585185185186,0.03868622685185186,0.03899335185185186,0.03930722685185186,0.03962785185185186,0.03995522685185186,0.04028935185185186,0.04063022685185186,0.04097785185185186,0.04133222685185186,0.041693351851851856,0.04206122685185186,0.042435851851851863,0.04281722685185186,0.043205351851851856,0.04360022685185186,0.04400185185185186,0.044410226851851864,0.04482535185185186,0.04524722685185186,0.045675851851851856,0.04611122685185186,0.04655335185185186,0.04700222685185186,0.04745785185185186,0.04792022685185186,0.048389351851851864,0.048865226851851865,0.04934785185185186,0.04983722685185186,0.050333351851851865,0.05083622685185186,0.05134585185185186,0.05186222685185186,0.05238535185185186,0.05291522685185186,0.05345185185185186,0.05399522685185186,0.05454535185185186,0.05510222685185186,0.05566585185185186,0.05623622685185186,0.05681335185185186,0.05739722685185186,0.05798785185185186,0.058585226851851864,0.05918935185185186,0.059800226851851865,0.06041785185185186,0.06104222685185187,0.06167335185185187,0.062311226851851864,0.06295585185185186,0.06360722685185186,0.06426535185185187,0.06493022685185186,0.06560185185185186,0.06628022685185186,0.06696535185185186,0.06765722685185185,0.06835585185185186,0.06906122685185187,0.06977335185185186,0.07049222685185186,0.07121785185185187,0.07195022685185187,0.07268935185185187,0.07343522685185186,0.07418785185185187,0.07494722685185187,0.07571335185185187,0.07648622685185186,0.07726585185185186,0.07805222685185186,0.07884535185185185,0.07964522685185185,0.08045185185185186,0.08126522685185186,0.08208535185185187,0.08291222685185187,0.08374585185185186,0.08458622685185185,0.08543335185185186,0.08628722685185186,0.08714785185185187,0.08801522685185187,0.08888935185185187,0.08977022685185186,0.09065785185185186,0.09155222685185185,0.09245335185185187,0.09336122685185187,0.09427585185185186,0.09519722685185186,0.09612535185185186,0.09706022685185187,0.09800185185185187,0.09895022685185184,0.09990535185185187,0.10086722685185184,0.10183585185185184,0.10281122685185187,0.10379335185185184,0.10478222685185187,0.10577785185185187,0.10678022685185187,0.10778935185185184,0.10880522685185184,0.10982785185185184,0.11085722685185184,0.11189335185185184,0.11293622685185184,0.11398585185185184,0.11504222685185186,0.11610535185185186,0.11717522685185186,0.11825185185185186,0.11933522685185186,0.12042535185185185,0.12152222685185185,0.12262585185185185,0.12373622685185184,0.12485335185185187,0.12597722685185184,0.12710785185185186,0.12824522685185186,0.12938935185185185,0.13054022685185185,0.13169785185185184,0.13286222685185187,0.13403335185185186,0.13521122685185186,0.13639585185185188,0.13758722685185187,0.13878535185185187,0.13999022685185186,0.14120185185185186,0.14242022685185188,0.14364535185185187,0.14487722685185186,0.14611585185185186,0.14736122685185188,0.1486133518518519,0.1498722268518519,0.15113785185185188,0.15241022685185188,0.1536893518518519,0.1549752268518519,0.15626785185185185,0.15756722685185184,0.15887335185185184,0.16018622685185183,0.16150585185185184,0.16283222685185184,0.16416535185185185,0.16550522685185184,0.16685185185185186],\"type\":\"scatter\"},{\"hovertemplate\":\"indifference curve for <br>utility obtained from <br>optimal wealth in market = 356.0%<extra></extra>\",\"mode\":\"lines\",\"name\":\"Risk Aversion=0.5\",\"x\":[0.0,0.0015,0.003,0.0045,0.006,0.0075,0.009,0.0105,0.012,0.0135,0.015,0.0165,0.018,0.0195,0.021,0.0225,0.024,0.025500000000000002,0.027,0.028499999999999998,0.03,0.0315,0.033,0.0345,0.036,0.0375,0.039,0.0405,0.042,0.0435,0.045,0.0465,0.048,0.0495,0.051000000000000004,0.052500000000000005,0.054,0.0555,0.056999999999999995,0.058499999999999996,0.06,0.0615,0.063,0.0645,0.066,0.0675,0.069,0.07050000000000001,0.072,0.0735,0.075,0.0765,0.078,0.0795,0.081,0.0825,0.084,0.0855,0.087,0.0885,0.09,0.0915,0.093,0.0945,0.096,0.0975,0.099,0.1005,0.10200000000000001,0.10350000000000001,0.10500000000000001,0.1065,0.108,0.1095,0.111,0.11249999999999999,0.11399999999999999,0.11549999999999999,0.11699999999999999,0.1185,0.12,0.1215,0.123,0.1245,0.126,0.1275,0.129,0.1305,0.132,0.1335,0.135,0.1365,0.138,0.1395,0.14100000000000001,0.14250000000000002,0.144,0.1455,0.147,0.1485,0.15,0.1515,0.153,0.1545,0.156,0.1575,0.159,0.1605,0.162,0.1635,0.165,0.1665,0.168,0.1695,0.171,0.17250000000000001,0.174,0.1755,0.177,0.1785,0.18,0.1815,0.183,0.1845,0.186,0.1875,0.189,0.1905,0.192,0.1935,0.195,0.1965,0.198,0.1995,0.201,0.2025,0.20400000000000001,0.20550000000000002,0.20700000000000002,0.20850000000000002,0.21000000000000002,0.2115,0.213,0.2145,0.216,0.2175,0.219,0.2205,0.222,0.2235,0.22499999999999998,0.22649999999999998,0.22799999999999998,0.22949999999999998,0.23099999999999998,0.23249999999999998,0.23399999999999999,0.2355,0.237,0.2385,0.24,0.2415,0.243,0.2445,0.246,0.2475,0.249,0.2505,0.252,0.2535,0.255,0.2565,0.258,0.2595,0.261,0.2625,0.264,0.2655,0.267,0.2685,0.27,0.2715,0.273,0.2745,0.276,0.2775,0.279,0.2805,0.28200000000000003,0.28350000000000003,0.28500000000000003,0.28650000000000003,0.288,0.2895,0.291,0.2925,0.294,0.2955,0.297,0.2985,0.3],\"y\":[0.0911111111111111,0.0911116736111111,0.0911133611111111,0.0911161736111111,0.0911201111111111,0.0911251736111111,0.0911313611111111,0.0911386736111111,0.0911471111111111,0.0911566736111111,0.0911673611111111,0.0911791736111111,0.0911921111111111,0.09120617361111111,0.09122136111111111,0.0912376736111111,0.0912551111111111,0.0912736736111111,0.0912933611111111,0.0913141736111111,0.0913361111111111,0.0913591736111111,0.0913833611111111,0.0914086736111111,0.0914351111111111,0.0914626736111111,0.0914913611111111,0.0915211736111111,0.0915521111111111,0.0915841736111111,0.0916173611111111,0.0916516736111111,0.0916871111111111,0.0917236736111111,0.0917613611111111,0.0918001736111111,0.0918401111111111,0.0918811736111111,0.0919233611111111,0.0919666736111111,0.0920111111111111,0.0920566736111111,0.0921033611111111,0.0921511736111111,0.09220011111111111,0.0922501736111111,0.0923013611111111,0.0923536736111111,0.0924071111111111,0.0924616736111111,0.0925173611111111,0.0925741736111111,0.0926321111111111,0.09269117361111111,0.0927513611111111,0.0928126736111111,0.0928751111111111,0.0929386736111111,0.0930033611111111,0.0930691736111111,0.0931361111111111,0.09320417361111111,0.0932733611111111,0.0933436736111111,0.0934151111111111,0.0934876736111111,0.0935613611111111,0.0936361736111111,0.09371211111111111,0.0937891736111111,0.0938673611111111,0.0939466736111111,0.0940271111111111,0.0941086736111111,0.09419136111111111,0.0942751736111111,0.0943601111111111,0.0944461736111111,0.0945333611111111,0.0946216736111111,0.09471111111111111,0.0948016736111111,0.0948933611111111,0.0949861736111111,0.0950801111111111,0.09517517361111111,0.0952713611111111,0.09536867361111111,0.0954671111111111,0.0955666736111111,0.0956673611111111,0.0957691736111111,0.0958721111111111,0.0959761736111111,0.0960813611111111,0.09618767361111111,0.0962951111111111,0.0964036736111111,0.0965133611111111,0.0966241736111111,0.0967361111111111,0.0968491736111111,0.0969633611111111,0.0970786736111111,0.09719511111111111,0.0973126736111111,0.0974313611111111,0.0975511736111111,0.0976721111111111,0.0977941736111111,0.0979173611111111,0.0980416736111111,0.09816711111111111,0.0982936736111111,0.0984213611111111,0.0985501736111111,0.09868011111111111,0.0988111736111111,0.0989433611111111,0.0990766736111111,0.0992111111111111,0.0993466736111111,0.0994833611111111,0.0996211736111111,0.0997601111111111,0.0999001736111111,0.1000413611111111,0.10018367361111111,0.1003271111111111,0.1004716736111111,0.10061736111111111,0.1007641736111111,0.1009121111111111,0.1010611736111111,0.1012113611111111,0.1013626736111111,0.1015151111111111,0.10166867361111111,0.10182336111111111,0.1019791736111111,0.10213611111111111,0.1022941736111111,0.1024533611111111,0.1026136736111111,0.1027751111111111,0.1029376736111111,0.1031013611111111,0.1032661736111111,0.1034321111111111,0.1035991736111111,0.1037673611111111,0.1039366736111111,0.1041071111111111,0.1042786736111111,0.1044513611111111,0.1046251736111111,0.1048001111111111,0.1049761736111111,0.1051533611111111,0.10533167361111109,0.1055111111111111,0.1056916736111111,0.1058733611111111,0.1060561736111111,0.1062401111111111,0.1064251736111111,0.10661136111111111,0.1067986736111111,0.1069871111111111,0.1071766736111111,0.1073673611111111,0.1075591736111111,0.1077521111111111,0.1079461736111111,0.1081413611111111,0.1083376736111111,0.10853511111111111,0.10873367361111111,0.1089333611111111,0.10913417361111111,0.1093361111111111,0.1095391736111111,0.1097433611111111,0.1099486736111111,0.1101551111111111,0.1103626736111111,0.1105713611111111,0.1107811736111111,0.1109921111111111,0.11120417361111111,0.11141736111111111,0.1116316736111111,0.11184711111111109,0.1120636736111111,0.1122813611111111,0.1125001736111111,0.1127201111111111,0.1129411736111111,0.1131633611111111,0.1133866736111111,0.11361111111111111],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"title\":{\"text\":\"Standard Deviation\"},\"tickformat\":\".0%\"},\"yaxis\":{\"title\":{\"text\":\"Expected Return\"},\"tickformat\":\".0%\"},\"legend\":{\"yanchor\":\"top\",\"y\":0.99,\"xanchor\":\"left\",\"x\":0.01}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('fef8cb41-7f3d-4f86-93a3-24d9e53d7743');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n\nPreferences and the Capital Allocation Line\n:::\n:::\n\n\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\n# Parameter values (in percent)\nmn = 6\nsd = 15\ns = 2\nextra = 2    #incremental borrowing rate\n\ndef opt_wgt(mn, sd, s, b, A):\n    # return/sd inputs must be in decimal\n    wgt = (mn - s) / (A * (sd**2))\n    expret= wgt*mn + (1-wgt)*s\n    sdret = wgt*sd \n    if wgt > 1:\n        wgt = (mn - b) / (A * (sd**2))\n        wgt = max(wgt,1)\n        expret= wgt*mn + (1-wgt)*b \n        sdret = wgt*sd   \n    u = expret - 0.5*A*sdret**2\n    return wgt\n\ndef figtbl(mn, sd, s, extra):\n    mn /= 100\n    sd /= 100\n    b = s+extra\n    s /= 100\n    b /= 100\n\n    ravers = np.arange(0.2,5.1,0.1)\n    wgts = [opt_wgt(mn,sd,s,b,A) for A in ravers]\n    \n    string = \"Risk Aversion: %{x:.2f} <br>Risky Asset Weight: %{y:.1%}<extra></extra>\"\n    trace1 = go.Scatter(\n        x=ravers, y=wgts, mode=\"lines\", hovertemplate=string, marker=dict(size=15), name='Optimal Weight'\n    )       \n    fig = go.Figure()\n    fig.add_trace(trace1)\n    fig.layout.xaxis[\"title\"] = \"Risk Aversion\"\n    fig.layout.yaxis[\"title\"] = \"Weight in Risky Asset\"\n    fig.update_yaxes(tickformat=\".1%\")\n    fig.update_xaxes(tickformat=\".2\")\n    fig.update_layout(legend=dict(yanchor=\"top\", y =0.99, xanchor=\"left\", x=0.74))\n    fig.show()\nfigtbl(mn, sd, s, extra)\n``` -->\n\n",
    "supporting": [
      "portfolios_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-2.14.0.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        \n"
      ]
    }
  }
}