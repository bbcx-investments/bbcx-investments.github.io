{"title":"Miracle of Compound Interest","markdown":{"headingText":"Miracle of Compound Interest","containsRefs":false,"markdown":"\n\n\nIf an investment account earns a steady rate of return and funds are not withdrawn from the account, then the account balance will grow exponentially.  This is sometimes called the \"miracle of compound interest.\"  @fig-miracle-exponential shows the growth of an investment account earning 8% per year, which is what the U.S. stock market earned in real terms over the thirty year period 1992-2021.  Each dollar grows to $10 (actually $10.06) over a 30 year period at an 8% annual return.  The exponential nature of the growth can be seen from the figure.  Hover over the plot to see the exact values.\n\n```{python}\n#| label: fig-miracle-exponential\n#| fig-cap: \"Growth of an Investment Account\"\n\n\nimport plotly.graph_objects as go\nimport numpy as np\n\ntrace1= go.Scatter(\n    x=np.arange(31), \n    y=1.08**np.arange(31),\n    mode=\"lines\",\n    name=\"8%\"\n)\n\ntrace2 = go.Scatter(\n    x=np.arange(31), \n    y=1.04**np.arange(31),\n    mode=\"lines\",\n    name=\"4%\"\n)\n\nfig = go.Figure()\nfig.layout.template = \"none\"\nfig.add_trace(trace1)\nfig.add_trace(trace2)\nfig.update_traces(\n    hovertemplate=\"\"\"\n    Year %{x}<br>\n    $%{y:.2f}<extra></extra>\n    \"\"\"\n)\nfig.layout.xaxis[\"title\"] = \"Year\"\nfig.layout.yaxis[\"title\"] = \"Account Balance\"\nfig.update_layout(\n    yaxis_tickprefix=\"$\", \n    yaxis_tickformat=\",.0f\",\n    legend=dict(\n        yanchor=\"top\", \n        y=0.99, \n        xanchor=\"left\", \n        x=0.01\n        )\n)\nfig.show()\n```\n\nInvestments grow exponentially because they earn returns each year not just on the starting balance but also on all prior returns.  Exponential growth is much better than linear growth.  By \"linear growth,\" we mean that doubling the investment period would double the account growth.  Exponential is much better than that.  As can be seen from the figure, $1 would grow to slightly more than $3 in 15 years at 8% per year, so the growth in value is slightly more than $2.  Doubling the investment horizon to 30 years increases the growth to $9 (from $1 to $10), so the growth in value is more than four times larger when the horizon doubles, with an 8% return.   Because of exponential growth, it is incredibly important to invest early and to refrain from borrowing whenever possible (unless the borrowing finances the purchase of long-term assets).\n\nExponential growth also means that the rate of return one earns is extremely important.  For example, one might think that earning 8% is twice as good as earning 4%, but that is an understatement.  Over a 30 year period, earning 8% is more than four times as good as earning 4%---a dollar grows by $9 to $10 over 30 years at 8%, but it grows by less than $2.25 at 4%.\n\nThe values in @fig-miracle-exponential are calculated from the following logic.  $1 invested for 1 year at 8% grows to $1.08.  After another year at 8%, we have \n\\begin{align*}\n1.08 + (0.08 \\times 1.08) &= (1.08 \\times 1) + (1.08 \\times 0.08)\\\\ &  = 1.08 \\times 1.08 \\\\ &= 1.08^2\n\\end{align*}\nContinuing with this logic, we can see that after $n$ years, we have $1.08^n$.  Thus, the number of years is the exponent of the factor 1.08, which is the definition of exponential growth.\n\nAs remarked above, the exponential growth is due to earning returns on top of returns or \"interest on interest.\"  After two years at 8%, we have\n$$1.08^2 = 1 + 0.08 + 0.08 + (0.08\\times 0.08).$$  Linear growth would be just adding up the returns $0.08 + 0.08$.  Exponential growth is due to the \"interest on interest\" term $0.08 \\times 0.08.$  This is a small number when there are only two years, but these terms add up to a very large number over many years.  They are responsible for the growth in the investment account quadrupling (from $2.17 to $9.06) when the investment horizon is doubled (from 15 to 30 years) with 8% returns.\n\n## Future values and present values\n\nWe call $1.08^n$ the future value of $1 for an $n$-year horizon and 8\\% returns.  We can write this more generally as $(1+r)^n$, where $r$ is the rate of return (0.08 in our example).  The future value $(1+r)^n$ is what \\\\$1 grows to in $n$ years when the rate of return is $r$.  \n\nWe also call $1 the present value of $(1+r)^n$.  It is how much you need to invest to reach $(1+r)^n$ in $n$ years when the rate of return is $r$.  More generally, we call [$x$ the present value of $y$]{style=\"color: Tomato;\"}, and we call [$y$ the future value of $x$]{style=\"color: Tomato;\"} when $x$ and $y$ are related as \n$$y=x(1+r)^n,$$ because $x$ will grow to $y$ in $n$ years when the rate of return is $r$.  We compute the future value $y$ from the present value $x$ by mutliplying $x$ by $(1+r)^n$, so we call $(1+r)^n$ the [future value factor]{style=\"color: Tomato;\"}.  Because the relation $y=x(1+r)^n$ is equivalent to \n$$x = \\frac{y}{(1+r)^n},$$\nwe can also compute the present value $x$ from the future value $y$ by dividing by $(1+r)^n$ or, equivalently, by multiplying by $1/(1+r)^n$.  Consequently, we call $1/(1+r)^n$ the [present value factor]{style=\"color: Tomato;\"} (or discount factor).  The operation of multiplying by the present value factor is called discounting, and the operation of multiplying by the future value factor is called compounding.  We also call the rate of return $r$ the discount rate.\n\nTo see why we should multiply the present value $x$ by the future value factor to obtain the future value, consider a concrete example, say $x=10$.  We can think of an investment account starting with $x=10$ as the sum of 10 hypothetical separate accounts, each starting with $1.  We saw earlier that $1 will grow to $(1+r)^n$ dollars in $n$ years when the rate of return is $r$.  At the end of the $n$ years, we can hypothetically consolidate the separate accounts, having a total of 10 times $(1+r)^n$; in other words, $x(1+r)^n$.\n\nThe values in  @fig-miracle-exponential are future value factors at 4% and 8%, for various $n$.   @fig-miracle-pvfactors presents the analogous present value factors.  Present value factors are smaller the further out in the future we look, and they are smaller when the discount rate is larger.\n\n```{python}\n#| label: fig-miracle-pvfactors\n#| fig-cap: \"Present Value Factors\"\n\n\nimport plotly.graph_objects as go\nimport numpy as np\n\ntrace1= go.Scatter(\n    x=np.arange(31), \n    y=1.08**(-np.arange(31)),\n    mode=\"lines\",\n    name=\"8%\"\n)\n\ntrace2 = go.Scatter(\n    x=np.arange(31), \n    y=1.04**(-np.arange(31)),\n    mode=\"lines\",\n    name=\"4%\"\n)\n\nfig = go.Figure()\nfig.layout.template = \"none\"\nfig.add_trace(trace1)\nfig.add_trace(trace2)\nfig.update_traces(\n    hovertemplate=\"\"\"\n    Year %{x}<br>\n    $%{y:.2f}<extra></extra>\n    \"\"\"\n)\nfig.layout.xaxis[\"title\"] = \"Year\"\nfig.layout.yaxis[\"title\"] = \"Present Value Factor\"\nfig.update_layout(\n    yaxis_tickformat=\".0%\",\n    legend=dict(\n        yanchor=\"top\", \n        y=0.99, \n        xanchor=\"right\", \n        x=0.99\n        )\n)\nfig.show()\n```\n\n::: callout-tip\n\nThe numpy arange function is useful for creating sequences (arrays) of future value and present value factors.  \n``` p\nimport numpy as np\nn = 30\nr = 0.08\nfvFactors = (1+r)**np.arange(1, n+1)\npvFactors = (1+r)**np.arange(-1, -n-1, -1)\n```\n:::\n\n## Multiple cash flows\n\nSuppose we have some money $x_0$ to invest today, will have a possibly different amount $x_1$ to invest in one year, an amount $x_2$ to invest two years from now and so on for $m$ years, and we have an investment horizon of $n\\ge m$ years.  How much will we have in $n$ years if we earn a return $r$ each year?  In other words, what is the total future value of the sequence of investments $x_0, \\ldots, x_m$?\n\nWe can answer this question by treating our investment account as $m+1$ hypothetical separate accounts.  In the first account, we deposit $x_0$ today and it grows for $n$ years to $x_0(1+r)^n$.  In the second account, we deposit $x_1$ in one year and it grows for $n-1$ years to $x_1(1+r)^{n-1}$.  We can continue this through year $m$, and at the end of $n$ years, we can hypothetically consolidate the various accounts, producing a total future value of\n$$x_0(1+r)^n + x_1(1+r)^{n-1} + x_2(1+r)^{n-2} + \\cdots + \nx_m(1+r)^{n-m}.$$\n\n\n::: callout-tip\n\nThe total future value can be calculated by summing the product of two arrays as in the following example.  \n``` p\nimport numpy as np\nn = 10\nm = 4\nr = 0.08\nx0, x1, x2, x3, x4 = 100, 120, 130, 140, 150\nx = np.array([x0, x1, x2, x3, x4])\nfvFactors = (1+r)**np.arange(n, n-m-1, -1)\ntotal = np.sum(x*fvFactors)\n```\n:::\n\nNow, consider the opposite question.  Suppose we want to spend some amount $y_1$ in one year, a possibly different amount $y_2$ in two years, and continuing for $m$ years.  If we want to finance all of these expenditures from a current investment account, how much do we need to have in the account now, assuming we always earn a return $r$ on the remaining balance?  The answer is that we need to have the total present value of the future values $y_1, y_2, \\ldots, y_m$; that is, we need\n$$\\frac{y_1}{1+r} + \\frac{y_2}{(1+r)^2} + \\cdots + \\frac{y_m}{(1+r)^m}.$$\n\n::: callout-tip\n\nThe total present value can also be computed by summing the product of two arrays as in the following example.  \n``` p\nimport numpy as np\nm = 4\nr = 0.08\ny1, y2, y3, y4 = 100, 120, 130, 140, 150\ny = np.array([y1, y2, y3, y4])\npvFactors = (1+r)**np.arange(-1, -m-1, -1)\ntotal = np.sum(y*pvFactors)\n```\n:::\n\nOur examples here involved only positive cash flows, but it is also possible to compute total future values or total present values in this way when some cash flows are positive and some are negative.  In this case, the total present value is usually called the [net present value]{style=\"color: Tomato;\"}, being the present value of the positive cash flows net of the present value of the negative cash flows.\n\n## Perpetuities and annuities\n\nAn annuity is a level sequence of cash flows that extend for a finite period of time.  A perpetuity is a level sequence of cash flows that extend forever.  Annuities are encountered frequently, for example, in mortgage or other loan payments.  Perpetuities are encountered less often; however, studying them is still useful, in part because it leads to a simple valuation formula for annuities.\n\nSuppose we want to spend $y$ in one year, another $y$ in two years, and so on forever.  How much do we need to have in an investment account today to finance all of these expenditures, if the account always earns $r$ per year?  The answer is the sum of the present values, which is\n$$\\frac{y}{1+r} + \\frac{y}{(1+r)^2} + \\frac{y}{(1+r)^3} + \\cdots$$\nThe series of terms $y/(1+r)^n$ is a geometric series, and the present value is the sum of a geometric series, which by a standard formula equals\n$$\\frac{y/(1+r)}{1- 1/(1+r)} = \\frac{y}{r}.$$\nThus, $y/r$ is the present value of a perpetuity of $y$ per year, given a rate of return of $r$ per year.\nWe can also reach this conclusion without using the formula for the sum of a geometric series.  If we start with $y/r$ in the account, then we will earn $r \\times y/r=y$ in the first year, which we can spend without depleting our capital of $y/r$.  Clearly, we can continue this forever, so $y/r$ is exactly the amount we need to finance an expenditure of $y$ per year.\n\nNow consider an annuity of $y$ per year for $n$ years.  The present value is\n$$\\frac{y}{1+r} + \\frac{y}{(1+r)^2}  + \\cdots + \\frac{y}{(1+r)^n}$$\nThis annuity is the difference of two perpetuities: a perpetuity that starts in a year and another perpetuity that starts in $n+1$ years.  So, the present value is the difference of two present values: the present value $y/r$ of the first perpetuity minus the present value of the second perpetuity.  The present value of the second perpetuity as of year $n$ (one year before it begins) is $y/r$ and that value discounted to today is \n$$\\frac{1}{(1+r)^n} \\times \\frac{y}{r}.$$\nHence, the present value of the annuity is\n$$\\frac{y}{r} - \\frac{1}{(1+r)^n} \\times \\frac{y}{r} = \\frac{y}{r} \\left(1-\\frac{1}{(1+r)^n}\\right).$$\n\nWe call the following the [annuity factor]{style=\"color: Tomato;\"}:\n$$ \\text{AF} = \\frac{1}{r} \\left(1-\\frac{1}{(1+r)^n}\\right).$$\nThe present value of the annuity is\n$$ y \\times \\text{AF}.$$\n\n::: callout-tip\n\nHere are three ways to compute the present value of an annuity in python.  You may need to install the numpy_financial library (\"pip install numpy-financial\").  \n``` p\nimport numpy as np\nn = 10\ny = 100\nr = 0.08\n\n# method 1\npvFactors = (1+r)**np.arange(-1, -n-1, -1)\npv = y * np.sum(pvFactors)\n\n# method 2\nAF = (1/r) * (1 - (1+r)**(-n))\npv = y * AF\n\n# method 3\nimport numpy_financial as npf\npv = npf.pv(rate=r, nper=n, pmt=-y)\n```\n:::\n\nWe sometimes encounter finite or infinite sequences of cash flows that grow at a constant rate.  Consider a cash flow of $y$ in one year, $(1+g)y$ in two years, $(1+g)^2y$ in three years, etc., for some growth rate $g$. If the growing cash flows go on forever, then the present value is\n$$\\frac{y}{1+r} + \\frac{(1+g)y}{(1+r)^2} + \\frac{(1+g)^2y}{(1+r)^3} + \\cdots$$\nIf $g \\ge r$, meaning that growth in the cash flows is so fast that it offsets or more than offsets the discounting, then the terms in this series are constant or rising, so the sum is infinite.  If $g<r$, then the formula for the sum of a geometric series shows that the present value is\n$$\\frac{y/(1+r)}{1-(1+g)/(1+r)} =  \\frac{y}{r-g}.$$\nWe can also see this by assuming that we start with $y/(r-g)$.  In the first year, we earn $ry/(r-g)$ from which we can spend $y$ and reinvest $ry/(r-g)-y =gy/(r-g)$, so our account will grow at rate $g$.  This growth is enough to finance a cash flow growing at rate $g$, and this can continue forever.  \n\nIf the sequence of growing cash flows lasts for a finite number $n$ of years, then it is a growing annuity, and its value is the difference of the values of two growing perpetuities.  Similar to the case of a level annuity, we can compute the value of a growing annuity as\n$$\\frac{y}{r-g} - \\frac{1}{(1+r)^n} \\times \\frac{y}{r-g} = \\frac{y}{r-g}\\left(1 - \\frac{1}{(1+r)^n}\\right).$$\n\n## Monthly rates, etc.\n\nWe frequently encounter rates of return, including interest rates, at frequencies other than a year, for example, when calculating monthly mortgage payments.  There are two ways of relating monthly rates to annual rates.  One is to compound monthly rates; the other is to multiply by 12.\n\nFirst we address compounding.  Just as we calculated a future value by compounding an annual rate, we can also calculate a future value by compounding a monthly rate.  The future value of $1 in one year, with a monthly rate of $r_m$, is $(1+r_m)^{12}$.  The growth in value is\n$$(1+r_m)^{12} - 1.$$\nThis is the annual rate of return obtained by monthly compounding at the monthly rate $r_m$.  For example, if the monthly rate is 1%, then the annual rate is\n$$ r_a = (1+r_m)^{12} - 1 = 1.01^{12} - 1 = 0.1268.$$\nSo, a monthly rate of 1% compounds to 12.68% annually.  \n\nWe can reverse this calculation and compute the monthly rate given the annual rate.  The formula for the monthly rate is\n$$r_m = (1+r_a)^{1/12} - 1.$$\nIf we plug in $r_a = 0.1268$, we'll get $r_m = 0.01$ (up to rounding error).  \n\nThis is a logical way to define monthly rates from annual rates, but it is not the way a bank does it when you take out a loan.  If a bank says that the annual rate is 12.68%, then it will charge you\n$$\\frac{0.1268}{12} = 0.0106.$$\nSo, the bank will charge you 1.06% monthly.  Obviously, this works in the bank's favor, relative to the calculation based on compounding.\n\nReturning to the compounding calculation, we could also compound at frequencies other than a month or a year.  If we compound daily at a daily rate of $r_d$, then the corresponding annual rate is\n$$r_a = (1+r_d)^{365} - 1.$$\nThe annual rate achieved by compounding is higher the more frequently a bank compounds.  Continuing with our previous example of 12.68%, with monthly compounding we have\n$$\\left(1 + \\frac{0.1268}{12}\\right)^{12} - 1 = 0.1344$$\nand with daily compounding we have\n$$\\left(1 + \\frac{0.1268}{365}\\right)^{365} - 1 = 0.1351.$$\nThus, increasing the compounding frequency increases the corresponding annual rate.  We could consider even more frequent compounding.  In the limit, as compounding becomes continuous, we obtain\n$$\\lim_{n \\rightarrow \\infty}  \\left(1 + \\frac{0.1268}{n}\\right)^{n} - 1  = e^{0.1268} - 1 = 0.1352,$$\nwhere $e$ is the natural exponential ($2.718\\ldots$).  Obviously, continuous compounding is never encountered in practice, but it is a useful \"as if\" device for some calculations that we will encounter later.\n\n## Principal, payments, and rate\n\nWhen buying a car or home, we might have one or more of the following questions.\n\n1.  I know how much I need to borrow, what the term of the loan will be, and what the rate will be.  What will my payments be?\n2.  I know what the term of the loan will be and what the rate will be, and I know the payment that I can afford.  How much can I borrow?\n3.  I know what the term of the loan will be, how much I need to borrow, and how much I can afford to pay.  What rate do I need to get?\n\nIn this section, we will explain how to answer these questions.  For concreteness, suppose the loan will have monthly payments.  We will work in terms of an annual rate $r$ and calculate the monthly rate as $r/12$ the way banks do.  Analogous calculations can be used to answer the questions for loans with annual payments.\n\nOur guiding principle is the formula for the present value of an annuity:\n$$\\text{PV} = y \\times \\text{AF}$$\nwhere the annuity factor, with a monthly rate of $r/12$ and a term of $n$ years (so, $12n$ months), is\n$$\\text{AF} = \\frac{1}{r/12}\\left(1 - \\frac{1}{(1+r/12)^{12n}}\\right).$$\nThis formula applies to the given questions with PV equal to the loan amount and $y$ equal to the loan payment.  In other words, the relation between the loan amount and the loan payments is that the present value of the payments equals the loan amount (loan principal).  \n\nThe answers to the questions are as follows.  It is a bit more complicated to calculate the required rate than it is to calculate the payment and loan amount.\n\n1.  The loan payment is the loan amount divided by the annuity factor.\n2.  The loan amount is the loan payment multiplied by the annuity factor.\n3.  The required rate is the rate that makes the annuity factor equal to the ratio of the loan amount to the loan payment.\n\n::: callout-tip\n\nHere are ways to calculate a loan payment or loan amount.  \n``` p\nimport numpy as np\nn = 30     # number of years\nr = 0.04   # annual rate\n\nAF = (12/r) * (1 - (1+r/12)**(-12*n))\n\n# calculate the loan payment\namount = 100000\npayment = amount / AF\n\n# calculate the loan amount\npayment = 2000\namount = payment * AF\n```\n:::\n\nWe'll show how to answer the third question below, and we'll also answer a fourth question, which might occasionally arise:\n\n4.  I know what the term of the loan will be, how much I need to borrow, how much I can afford to pay, and what the rate will be.  If my payments aren't enough, and I can get a balloon structure (a final payoff at maturity), how much will the balloon be?\n\nIf there is a balloon structure, then the loan amount equals the present value of the non-balloon payments ($\\text{payment} \\times \\text{AF}$) plus the present value of the balloon, which is\n$$\\text{balloon} \\times \\frac{1}{(1+r/12)^{12n}}.$$\nThus,\n$$\\text{balloon} = \\left(1+\\frac{r}{12}\\right)^{12n} \\times (\\text{amount} - \\text{payment} \\times AF)$$\n\n::: callout-tip\n\nHere are the answers to all four questions, using functions from numpy-financial.  The sign conventions are that the loan amount is positive (a cash inflow) and loan payments (regular payments and balloon) are negative.\n``` p\nimport numpy_financial as npf\nn = 30     # number of years\n\n# question 1\nr = 0.04\namount = 500000\npayment = npf.pmt(\n    rate=r/12,\n    nper=n*12,\n    pv=amount, \n    fv=0\n)\n\n# question 2\nr = 0.04\npayment = -2000\namount = npf.pv(\n    rate=r/12,\n    nper=n*12,\n    pmt=payment,\n    fv=0\n)\n\n# question 3\namount = 500000\npayment = -2000\nrate = 12*npf.rate(\n    nper=n*12,\n    pv=amount,\n    pmt=payment,\n    fv=0\n)\n\n# question 4\nr = 0.04\namount = 500000\npayment = -2000\nballoon = npf.fv(\n    rate=r/12,\n    nper=n*12,\n    pmt=payment,\n    pv=amount\n)\n\n```\n:::\n\n\n## Inflation and real returns\n\n## Retirement planning\n\n\n::: callout-note\n## A title for a note\nThis is a highlighted block of text.\n:::\n\n\n::: callout-important\n## A title for something important\nSomething important goes here\n:::\n\n::: callout-warning\n## A title for a warning\n\nSome warning goes here\n:::\n\n::: callout\n## A simple title\n\nAnything could go here\n::: \n\n``` p\n# this is a displayed code block\n\nimport numpy as np\nx = np.arange(4)\n```\n\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"miracle.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.38","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":true,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"miracle.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["references.bib"],"documentclass":"scrreprt"},"extensions":{"book":{}}}}}