---
execute:
  echo: false
jupyter: python3
format: 
  revealjs:
    footer: "BUSI 721"
    slide-number: true
    preview-links: auto
    self-contained: true
    transition: slide
---

## {background-image="../kerry/finance.jpg"}

:::{.absolute top=10 left=50 width="1000" height="300"}
[BUSI 721: Data-Driven Finance I]{style="font-size: 1.75em" color="#F7D885"}
:::


:::{.absolute top=600 left=300 width="800" height="300"}
Kerry Back, Fall 2022, Rice University
:::




## *Code block with animation*{auto-animate=true}

``` p
import numpy as np
import matplotlib.pyplot as plt
r = np.arange(0, 2, 0.01)
```

## *Code block with animation*{auto-animate=true}

``` p
import numpy as np
import matplotlib.pyplot as plt
r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```



## *Code block with highlighting*

``` {.python code-line-numbers="4-5|7|10"}
import numpy as np
import matplotlib.pyplot as plt
r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```


##  {background-iframe="http://bbcx-investments.com/portfolios/diversification" background-interactive="True"}

<!-- <iframe src="http://bbcx-investments.com/portfolios/diversification" title="Diversification" width="1500" height="1500"></iframe> -->


## *Some math with animation Let's learn calculus*{auto-animate=true}

```{=tex}
\begin{align*}
f(x) & = \int_0^x t^{2}\, \mathrm{d} t
\end{align*}
```

## *Some math with animation*{auto-animate=true}

```{=tex}
\begin{align*}
f(x) & = \int_0^x t^{2}\, \mathrm{d} t\\
g(x) & = \int_0^x t^{3}\, \mathrm{d} t

\end{align*}
```


## *Executing code*

```{python}
import numpy as np
import matplotlib.pyplot as plt
r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

```{python}

```
